

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Sep 25 15:07:55 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 18/08/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _TRISCbits	set	3988
    56   000000                     _PORTAbits	set	3968
    57   000000                     _TRISBbits	set	3987
    58   000000                     _TRISD	set	3989
    59   000000                     _PIE1bits	set	3997
    60   000000                     _PIR1bits	set	3998
    61   000000                     _SSPSTATbits	set	4039
    62   000000                     _SSPBUF	set	4041
    63   000000                     _LATBbits	set	3978
    64   000000                     _LATD	set	3980
    65   000000                     _TRISAbits	set	3986
    66   000000                     _INTCONbits	set	4082
    67   000000                     _IPR1bits	set	3999
    68   000000                     _ADCON1bits	set	4033
    69   000000                     _SSPCON1bits	set	4038
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74   000882                     __pcinit:
    75                           	callstack 0
    76   000882                     start_initialization:
    77                           	callstack 0
    78   000882                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (1 bytes)
    82   000882  6A01               	clrf	__pbssCOMRAM& (0+255),c
    83   000884                     end_of_initialization:
    84                           	callstack 0
    85   000884                     __end_of__initialization:
    86                           	callstack 0
    87   000884  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    88   000886  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    89   000888  0100               	movlb	0
    90   00088A  EF01  F004         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	bssCOMRAM
    93   000001                     __pbssCOMRAM:
    94                           	callstack 0
    95   000001                     _received_data:
    96                           	callstack 0
    97   000001                     	ds	1
    98                           
    99                           	psect	cstackCOMRAM
   100   000000                     __pcstackCOMRAM:
   101                           	callstack 0
   102   000000                     
   103                           ; 1 bytes @ 0x0
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 23 in file "main.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;		None
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   123 ;;      Params:         0       0       0       0       0       0       0       0       0
   124 ;;      Locals:         0       0       0       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0       0       0
   126 ;;      Totals:         0       0       0       0       0       0       0       0       0
   127 ;;Total ram usage:        0 bytes
   128 ;; Hardware stack levels required when called: 3
   129 ;; This function calls:
   130 ;;		_INIT_INTERRUPT
   131 ;;		_INIT_SPI
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138   000802                     __ptext0:
   139                           	callstack 0
   140   000802                     _main:
   141                           	callstack 28
   142   000802                     
   143                           ;main.c: 24:     TRISD = 0;
   144   000802  0E00               	movlw	0
   145   000804  6E95               	movwf	149,c	;volatile
   146   000806                     
   147                           ;main.c: 25:     TRISBbits.TRISB5 = 0;
   148   000806  9A93               	bcf	147,5,c	;volatile
   149   000808                     
   150                           ;main.c: 26:     TRISBbits.TRISB6 = 0;
   151   000808  9C93               	bcf	147,6,c	;volatile
   152   00080A                     
   153                           ;main.c: 27:     INIT_SPI();
   154   00080A  EC32  F004         	call	_INIT_SPI	;wreg free
   155                           
   156                           ;main.c: 28:     INIT_INTERRUPT();
   157   00080E  EC47  F004         	call	_INIT_INTERRUPT	;wreg free
   158   000812                     l771:
   159                           
   160                           ;main.c: 30:         if (!PORTAbits.RA5) {
   161   000812  BA80               	btfsc	128,5,c	;volatile
   162   000814  EF0E  F004         	goto	u11
   163   000818  EF10  F004         	goto	u10
   164   00081C                     u11:
   165   00081C  EF09  F004         	goto	l771
   166   000820                     u10:
   167   000820                     
   168                           ;main.c: 32:             if (received_data) {
   169   000820  5001               	movf	_received_data^0,w,c	;volatile
   170   000822  B4D8               	btfsc	status,2,c
   171   000824  EF16  F004         	goto	u21
   172   000828  EF18  F004         	goto	u20
   173   00082C                     u21:
   174   00082C  EF09  F004         	goto	l771
   175   000830                     u20:
   176   000830                     
   177                           ;main.c: 33:                 LATD = received_data;}
   178   000830  C001  FF8C         	movff	_received_data,3980	;volatile
   179   000834  EF09  F004         	goto	l771
   180   000838  EF07  F000         	goto	start
   181   00083C                     __end_of_main:
   182                           	callstack 0
   183                           
   184 ;; *************** function _INIT_SPI *****************
   185 ;; Defined at:
   186 ;;		line 73 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   200 ;;      Params:         0       0       0       0       0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0       0       0
   202 ;;      Temps:          0       0       0       0       0       0       0       0       0
   203 ;;      Totals:         0       0       0       0       0       0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels used: 1
   206 ;; Hardware stack levels required when called: 2
   207 ;; This function calls:
   208 ;;		Nothing
   209 ;; This function is called by:
   210 ;;		_main
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text1
   215   000864                     __ptext1:
   216                           	callstack 0
   217   000864                     _INIT_SPI:
   218                           	callstack 28
   219   000864                     
   220                           ;main.c: 74:     TRISCbits.RC7 = 0;
   221   000864  9E94               	bcf	148,7,c	;volatile
   222                           
   223                           ;main.c: 75:     TRISBbits.RB0 = 1;
   224   000866  8093               	bsf	147,0,c	;volatile
   225                           
   226                           ;main.c: 76:     TRISBbits.RB1 = 1;
   227   000868  8293               	bsf	147,1,c	;volatile
   228                           
   229                           ;main.c: 77:     TRISAbits.RA5 = 1;
   230   00086A  8A92               	bsf	146,5,c	;volatile
   231   00086C                     
   232                           ;main.c: 79:     ADCON1bits.PCFG = 0b1111;
   233   00086C  0E0F               	movlw	15
   234   00086E  12C1               	iorwf	193,f,c	;volatile
   235   000870                     
   236                           ;main.c: 81:     SSPSTATbits.SMP = 0;
   237   000870  9EC7               	bcf	199,7,c	;volatile
   238   000872                     
   239                           ;main.c: 82:     SSPSTATbits.CKE = 0;
   240   000872  9CC7               	bcf	199,6,c	;volatile
   241   000874                     
   242                           ;main.c: 84:     SSPCON1bits.SSPEN = 1;
   243   000874  8AC6               	bsf	198,5,c	;volatile
   244   000876                     
   245                           ;main.c: 85:     SSPCON1bits.CKP = 0;
   246   000876  98C6               	bcf	198,4,c	;volatile
   247                           
   248                           ;main.c: 87:     SSPCON1bits.SSPM = 0b0100;
   249   000878  50C6               	movf	198,w,c	;volatile
   250   00087A  0BF0               	andlw	-16
   251   00087C  0904               	iorlw	4
   252   00087E  6EC6               	movwf	198,c	;volatile
   253   000880  0012               	return		;funcret
   254   000882                     __end_of_INIT_SPI:
   255                           	callstack 0
   256                           
   257 ;; *************** function _INIT_INTERRUPT *****************
   258 ;; Defined at:
   259 ;;		line 90 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		None
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   273 ;;      Params:         0       0       0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; Hardware stack levels required when called: 2
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text2
   288   00088E                     __ptext2:
   289                           	callstack 0
   290   00088E                     _INIT_INTERRUPT:
   291                           	callstack 28
   292   00088E                     
   293                           ;main.c: 91:     INTCONbits.GIE = 1;
   294   00088E  8EF2               	bsf	242,7,c	;volatile
   295                           
   296                           ;main.c: 92:     INTCONbits.PEIE = 1;
   297   000890  8CF2               	bsf	242,6,c	;volatile
   298                           
   299                           ;main.c: 93:     PIR1bits.SSPIF = 0;
   300   000892  969E               	bcf	158,3,c	;volatile
   301                           
   302                           ;main.c: 94:     PIE1bits.SSPIE = 1;
   303   000894  869D               	bsf	157,3,c	;volatile
   304                           
   305                           ;main.c: 95:     IPR1bits.SSPIP = 1;
   306   000896  869F               	bsf	159,3,c	;volatile
   307   000898  0012               	return		;funcret
   308   00089A                     __end_of_INIT_INTERRUPT:
   309                           	callstack 0
   310                           
   311 ;; *************** function _ISR *****************
   312 ;; Defined at:
   313 ;;		line 55 in file "main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   327 ;;      Params:         0       0       0       0       0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; Hardware stack levels required when called: 1
   334 ;; This function calls:
   335 ;;		_READ_SPI
   336 ;; This function is called by:
   337 ;;		Interrupt level 2
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	intcode
   342   000008                     __pintcode:
   343                           	callstack 0
   344   000008                     _ISR:
   345                           	callstack 28
   346                           
   347                           ;incstack = 0
   348   000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   349   00000A  ED1E  F004         	call	int_func,f	;refresh shadow registers
   350                           
   351                           	psect	intcode_body
   352   00083C                     __pintcode_body:
   353                           	callstack 28
   354   00083C                     int_func:
   355                           	callstack 28
   356   00083C  0006               	pop		; remove dummy address from shadow register refresh
   357   00083E                     
   358                           ;main.c: 56:     if (PIR1bits.SSPIF) {
   359   00083E  A69E               	btfss	158,3,c	;volatile
   360   000840  EF24  F004         	goto	i2u4_41
   361   000844  EF26  F004         	goto	i2u4_40
   362   000848                     i2u4_41:
   363   000848  EF30  F004         	goto	i2l60
   364   00084C                     i2u4_40:
   365   00084C                     
   366                           ;main.c: 57:         INTCONbits.GIE = 0;
   367   00084C  9EF2               	bcf	242,7,c	;volatile
   368   00084E                     
   369                           ;main.c: 58:         LATBbits.LATB5 ^= 1;
   370   00084E  7A8A               	btg	138,5,c	;volatile
   371   000850                     
   372                           ;main.c: 59:         received_data = READ_SPI();
   373   000850  EC4D  F004         	call	_READ_SPI	;wreg free
   374   000854  6E01               	movwf	_received_data^0,c	;volatile
   375   000856                     
   376                           ;main.c: 60:         SSPBUF = 0x00;
   377   000856  0E00               	movlw	0
   378   000858  6EC9               	movwf	201,c	;volatile
   379   00085A                     
   380                           ;main.c: 62:         SSPSTATbits.BF = 0;
   381   00085A  90C7               	bcf	199,0,c	;volatile
   382   00085C                     
   383                           ;main.c: 63:         INTCONbits.GIE = 1;
   384   00085C  8EF2               	bsf	242,7,c	;volatile
   385   00085E                     
   386                           ;main.c: 64:         PIR1bits.SSPIF = 0;
   387   00085E  969E               	bcf	158,3,c	;volatile
   388   000860                     i2l60:
   389   000860  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390   000862  0011               	retfie		f
   391   000864                     __end_of_ISR:
   392                           	callstack 0
   393                           
   394 ;; *************** function _READ_SPI *****************
   395 ;; Defined at:
   396 ;;		line 69 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      unsigned char 
   403 ;; Registers used:
   404 ;;		wreg, status,2
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   410 ;;      Params:         0       0       0       0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_ISR
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text4
   424   00089A                     __ptext4:
   425                           	callstack 0
   426   00089A                     _READ_SPI:
   427                           	callstack 28
   428   00089A                     
   429                           ;main.c: 70:     return SSPBUF;
   430   00089A  50C9               	movf	201,w,c	;volatile
   431   00089C  0012               	return		;funcret
   432   00089E                     __end_of_READ_SPI:
   433                           	callstack 0
   434                           
   435                           	psect	smallconst
   436   000800                     __psmallconst:
   437                           	callstack 0
   438   000800  00                 	db	0
   439   000801  00                 	db	0	; dummy byte at the end
   440   000000                     
   441                           	psect	rparam
   442   000000                     
   443                           	psect	temp
   444   000002                     btemp:
   445                           	callstack 0
   446   000002                     	ds	1
   447   000000                     int$flags	set	btemp
   448   000000                     wtemp8	set	btemp+1
   449   000000                     ttemp5	set	btemp+1
   450   000000                     ttemp6	set	btemp+4
   451   000000                     ttemp7	set	btemp+8
   452                           
   453                           	psect	idloc
   454                           
   455                           ;Config register IDLOC0 @ 0x200000
   456                           ;	unspecified, using default values
   457   200000                     	org	2097152
   458   200000  FF                 	db	255
   459                           
   460                           ;Config register IDLOC1 @ 0x200001
   461                           ;	unspecified, using default values
   462   200001                     	org	2097153
   463   200001  FF                 	db	255
   464                           
   465                           ;Config register IDLOC2 @ 0x200002
   466                           ;	unspecified, using default values
   467   200002                     	org	2097154
   468   200002  FF                 	db	255
   469                           
   470                           ;Config register IDLOC3 @ 0x200003
   471                           ;	unspecified, using default values
   472   200003                     	org	2097155
   473   200003  FF                 	db	255
   474                           
   475                           ;Config register IDLOC4 @ 0x200004
   476                           ;	unspecified, using default values
   477   200004                     	org	2097156
   478   200004  FF                 	db	255
   479                           
   480                           ;Config register IDLOC5 @ 0x200005
   481                           ;	unspecified, using default values
   482   200005                     	org	2097157
   483   200005  FF                 	db	255
   484                           
   485                           ;Config register IDLOC6 @ 0x200006
   486                           ;	unspecified, using default values
   487   200006                     	org	2097158
   488   200006  FF                 	db	255
   489                           
   490                           ;Config register IDLOC7 @ 0x200007
   491                           ;	unspecified, using default values
   492   200007                     	org	2097159
   493   200007  FF                 	db	255
   494                           
   495                           	psect	config
   496                           
   497                           ;Config register CONFIG1L @ 0x300000
   498                           ;	PLL Prescaler Selection bits
   499                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   500                           ;	System Clock Postscaler Selection bits
   501                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   502                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   503                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   504   300000                     	org	3145728
   505   300000  00                 	db	0
   506                           
   507                           ;Config register CONFIG1H @ 0x300001
   508                           ;	Oscillator Selection bits
   509                           ;	FOSC = HS, HS oscillator (HS)
   510                           ;	Fail-Safe Clock Monitor Enable bit
   511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   512                           ;	Internal/External Oscillator Switchover bit
   513                           ;	IESO = OFF, Oscillator Switchover mode disabled
   514   300001                     	org	3145729
   515   300001  0C                 	db	12
   516                           
   517                           ;Config register CONFIG2L @ 0x300002
   518                           ;	Power-up Timer Enable bit
   519                           ;	PWRT = OFF, PWRT disabled
   520                           ;	Brown-out Reset Enable bits
   521                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   522                           ;	Brown-out Reset Voltage bits
   523                           ;	BORV = 3, Minimum setting 2.05V
   524                           ;	USB Voltage Regulator Enable bit
   525                           ;	VREGEN = OFF, USB voltage regulator disabled
   526   300002                     	org	3145730
   527   300002  1F                 	db	31
   528                           
   529                           ;Config register CONFIG2H @ 0x300003
   530                           ;	Watchdog Timer Enable bit
   531                           ;	WDT = ON, WDT enabled
   532                           ;	Watchdog Timer Postscale Select bits
   533                           ;	WDTPS = 32768, 1:32768
   534   300003                     	org	3145731
   535   300003  1F                 	db	31
   536                           
   537                           ; Padding undefined space
   538   300004                     	org	3145732
   539   300004  FF                 	db	255
   540                           
   541                           ;Config register CONFIG3H @ 0x300005
   542                           ;	CCP2 MUX bit
   543                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   544                           ;	PORTB A/D Enable bit
   545                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   546                           ;	Low-Power Timer 1 Oscillator Enable bit
   547                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   548                           ;	MCLR Pin Enable bit
   549                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   550   300005                     	org	3145733
   551   300005  83                 	db	131
   552                           
   553                           ;Config register CONFIG4L @ 0x300006
   554                           ;	Stack Full/Underflow Reset Enable bit
   555                           ;	STVREN = ON, Stack full/underflow will cause Reset
   556                           ;	Single-Supply ICSP Enable bit
   557                           ;	LVP = ON, Single-Supply ICSP enabled
   558                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   559                           ;	ICPRT = OFF, ICPORT disabled
   560                           ;	Extended Instruction Set Enable bit
   561                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   562                           ;	Background Debugger Enable bit
   563                           ;	DEBUG = 0x1, unprogrammed default
   564   300006                     	org	3145734
   565   300006  85                 	db	133
   566                           
   567                           ; Padding undefined space
   568   300007                     	org	3145735
   569   300007  FF                 	db	255
   570                           
   571                           ;Config register CONFIG5L @ 0x300008
   572                           ;	Code Protection bit
   573                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   574                           ;	Code Protection bit
   575                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   576                           ;	Code Protection bit
   577                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   578                           ;	Code Protection bit
   579                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   580   300008                     	org	3145736
   581   300008  0F                 	db	15
   582                           
   583                           ;Config register CONFIG5H @ 0x300009
   584                           ;	Boot Block Code Protection bit
   585                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   586                           ;	Data EEPROM Code Protection bit
   587                           ;	CPD = OFF, Data EEPROM is not code-protected
   588   300009                     	org	3145737
   589   300009  C0                 	db	192
   590                           
   591                           ;Config register CONFIG6L @ 0x30000A
   592                           ;	Write Protection bit
   593                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   594                           ;	Write Protection bit
   595                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   596                           ;	Write Protection bit
   597                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   598                           ;	Write Protection bit
   599                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   600   30000A                     	org	3145738
   601   30000A  0F                 	db	15
   602                           
   603                           ;Config register CONFIG6H @ 0x30000B
   604                           ;	Configuration Register Write Protection bit
   605                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   606                           ;	Boot Block Write Protection bit
   607                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   608                           ;	Data EEPROM Write Protection bit
   609                           ;	WRTD = OFF, Data EEPROM is not write-protected
   610   30000B                     	org	3145739
   611   30000B  E0                 	db	224
   612                           
   613                           ;Config register CONFIG7L @ 0x30000C
   614                           ;	Table Read Protection bit
   615                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   616                           ;	Table Read Protection bit
   617                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   618                           ;	Table Read Protection bit
   619                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   620                           ;	Table Read Protection bit
   621                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   622   30000C                     	org	3145740
   623   30000C  0F                 	db	15
   624                           
   625                           ;Config register CONFIG7H @ 0x30000D
   626                           ;	Boot Block Table Read Protection bit
   627                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   628   30000D                     	org	3145741
   629   30000D  40                 	db	64
   630                           tosu	equ	0xFFF
   631                           tosh	equ	0xFFE
   632                           tosl	equ	0xFFD
   633                           stkptr	equ	0xFFC
   634                           pclatu	equ	0xFFB
   635                           pclath	equ	0xFFA
   636                           pcl	equ	0xFF9
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           prodh	equ	0xFF4
   642                           prodl	equ	0xFF3
   643                           indf0	equ	0xFEF
   644                           postinc0	equ	0xFEE
   645                           postdec0	equ	0xFED
   646                           preinc0	equ	0xFEC
   647                           plusw0	equ	0xFEB
   648                           fsr0h	equ	0xFEA
   649                           fsr0l	equ	0xFE9
   650                           wreg	equ	0xFE8
   651                           indf1	equ	0xFE7
   652                           postinc1	equ	0xFE6
   653                           postdec1	equ	0xFE5
   654                           preinc1	equ	0xFE4
   655                           plusw1	equ	0xFE3
   656                           fsr1h	equ	0xFE2
   657                           fsr1l	equ	0xFE1
   658                           bsr	equ	0xFE0
   659                           indf2	equ	0xFDF
   660                           postinc2	equ	0xFDE
   661                           postdec2	equ	0xFDD
   662                           preinc2	equ	0xFDC
   663                           plusw2	equ	0xFDB
   664                           fsr2h	equ	0xFDA
   665                           fsr2l	equ	0xFD9
   666                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _INIT_INTERRUPT
                           _INIT_SPI
 ---------------------------------------------------------------------------------
 (1) _INIT_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
                           _READ_SPI
 ---------------------------------------------------------------------------------
 (3) _READ_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_INTERRUPT
   _INIT_SPI

 _ISR (ROOT)
   _READ_SPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       1       1        1.1%
BITBIGSFRhhl        28      0       0      21        0.0%
BITBIGSFRhllhl      21      0       0      24        0.0%
BITBIGSFRlll        20      0       0      29        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRllhll       9      0       0      28        0.0%
BITBIGSFRhlll        7      0       0      25        0.0%
BITBIGSFRllhh        5      0       0      26        0.0%
BITBIGSFRhllhh       4      0       0      23        0.0%
BITBIGSFRhlh         1      0       0      22        0.0%
BITBIGSFRllhlh       1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       1      30        0.0%
DATA                 0      0       1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Sep 25 15:07:55 2023

            _SSPSTATbits 0FC7                       l66 0880                       l69 0898  
                     u10 0820                       u11 081C                       u20 0830  
                     u21 082C                      l751 0872                      l753 0874  
                    l745 0864                      l755 0876                      l747 086C  
                    l771 0812                      l763 0802                      l757 088E  
                    l749 0870                      l773 0820                      l765 0806  
                    l775 0830                      l767 0808                      l769 080A  
                    _ISR 0008                     ?_ISR 0000                     _LATD 0F8C  
                   i2l60 0860                     i2l63 089C                     _main 0802  
                   btemp 0002                     start 000E             ___param_bank 0000  
                  ??_ISR 0000         __end_of_INIT_SPI 0882         __end_of_READ_SPI 089E  
                  ?_main 0000                    i2l781 083E                    i2l759 089A  
                  i2l791 085A                    i2l783 084C                    i2l793 085C  
                  i2l785 084E                    i2l795 085E                    i2l787 0850  
                  i2l789 0856                    _TRISD 0F95                    ttemp5 0003  
                  ttemp6 0006                    ttemp7 000A                    status 0FD8  
                  wtemp8 0003          __initialization 0882             __end_of_main 083C  
                 ??_main 0000            __activetblptr 0000                   i2u4_40 084C  
                 i2u4_41 0848                   _SSPBUF 0FC9                   isa$std 0001  
           __mediumconst 0000           _INIT_INTERRUPT 088E               __accesstop 0060  
__end_of__initialization 0884                ?_INIT_SPI 0000                ?_READ_SPI 0000  
          ___rparam_used 0001           __pcstackCOMRAM 0000   __end_of_INIT_INTERRUPT 089A  
             ??_INIT_SPI 0000               ??_READ_SPI 0000          ?_INIT_INTERRUPT 0000  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0882                  __ramtop 0800                  __ptext0 0802  
                __ptext1 0864                  __ptext2 088E                  __ptext4 089A  
          _received_data 0001           __pintcode_body 083C     end_of_initialization 0884  
                int_func 083C                _PORTAbits 0F80                _TRISAbits 0F92  
              _TRISBbits 0F93                _TRISCbits 0F94      start_initialization 0882  
            __end_of_ISR 0864         ??_INIT_INTERRUPT 0000              __pbssCOMRAM 0001  
              __pintcode 0008              __smallconst 0800                 _LATBbits 0F8A  
               _INIT_SPI 0864                 _READ_SPI 089A                 _IPR1bits 0F9F  
               _PIE1bits 0F9D                 _PIR1bits 0F9E               _ADCON1bits 0FC1  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
               int$flags 0002               _INTCONbits 0FF2                 intlevel2 0000  
            _SSPCON1bits 0FC6  
