

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Oct 07 03:56:25 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 18/08/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _SSPADD	set	4040
    54   000000                     _SSPBUF	set	4041
    55   000000                     _R_nW	set	32314
    56   000000                     _SSPCON1	set	4038
    57   000000                     _SSPSTAT	set	4039
    58   000000                     _PEIE	set	32662
    59   000000                     _BF	set	32312
    60   000000                     _WCOL	set	32311
    61   000000                     _SSPOV	set	32310
    62   000000                     _LATBbits	set	3978
    63   000000                     _LATD	set	3980
    64   000000                     _TRISBbits	set	3987
    65   000000                     _TRISD	set	3989
    66   000000                     _SSPIE	set	31979
    67   000000                     _SSPIF	set	31987
    68   000000                     _SSPCON2	set	4037
    69   000000                     _SSPIP	set	31995
    70   000000                     _CKP	set	32308
    71   000000                     _GIE	set	32663
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76   0008C4                     __pcinit:
    77                           	callstack 0
    78   0008C4                     start_initialization:
    79                           	callstack 0
    80   0008C4                     __initialization:
    81                           	callstack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (1 bytes)
    84   0008C4  6A01               	clrf	__pbssCOMRAM& (0+255),c
    85   0008C6                     end_of_initialization:
    86                           	callstack 0
    87   0008C6                     __end_of__initialization:
    88                           	callstack 0
    89   0008C6  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    90   0008C8  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    91   0008CA  0100               	movlb	0
    92   0008CC  EF53  F004         	goto	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMRAM
    95   000001                     __pbssCOMRAM:
    96                           	callstack 0
    97   000001                     _RX_Data:
    98                           	callstack 0
    99   000001                     	ds	1
   100                           
   101                           	psect	cstackCOMRAM
   102   000002                     __pcstackCOMRAM:
   103                           	callstack 0
   104   000002                     I2C_Slave_Init@Address:
   105                           	callstack 0
   106                           
   107                           ; 1 bytes @ 0x0
   108   000002                     	ds	1
   109   000003                     
   110                           ; 1 bytes @ 0x1
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 34 in file "main.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   130 ;;      Params:         0       0       0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0
   132 ;;      Temps:          0       0       0       0       0       0       0       0       0
   133 ;;      Totals:         0       0       0       0       0       0       0       0       0
   134 ;;Total ram usage:        0 bytes
   135 ;; Hardware stack levels required when called: 2
   136 ;; This function calls:
   137 ;;		_I2C_Slave_Init
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           	psect	text0
   144   0008A6                     __ptext0:
   145                           	callstack 0
   146   0008A6                     _main:
   147                           	callstack 29
   148   0008A6                     
   149                           ;main.c: 35:     TRISBbits.RB4 = 0;
   150   0008A6  9893               	bcf	147,4,c	;volatile
   151                           
   152                           ;main.c: 36:     TRISBbits.RB5 = 0;
   153   0008A8  9A93               	bcf	147,5,c	;volatile
   154                           
   155                           ;main.c: 37:     TRISBbits.RB6 = 0;
   156   0008AA  9C93               	bcf	147,6,c	;volatile
   157                           
   158                           ;main.c: 38:     TRISBbits.RB7 = 0;
   159   0008AC  9E93               	bcf	147,7,c	;volatile
   160   0008AE                     
   161                           ;main.c: 40:     TRISD = 0x00;
   162   0008AE  0E00               	movlw	0
   163   0008B0  6E95               	movwf	149,c	;volatile
   164                           
   165                           ;main.c: 41:     LATD = 0x00;
   166   0008B2  0E00               	movlw	0
   167   0008B4  6E8C               	movwf	140,c	;volatile
   168   0008B6                     
   169                           ;main.c: 42:     I2C_Slave_Init(0x43);
   170   0008B6  0E43               	movlw	67
   171   0008B8  EC42  F004         	call	_I2C_Slave_Init
   172   0008BC                     l47:
   173   0008BC  EF5E  F004         	goto	l47
   174   0008C0  EF07  F000         	goto	start
   175   0008C4                     __end_of_main:
   176                           	callstack 0
   177                           
   178 ;; *************** function _I2C_Slave_Init *****************
   179 ;; Defined at:
   180 ;;		line 116 in file "main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;  Address         1    wreg     unsigned char 
   183 ;; Auto vars:     Size  Location     Type
   184 ;;  Address         1    0[COMRAM] unsigned char 
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2
   189 ;; Tracked objects:
   190 ;;		On entry : 0/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   194 ;;      Params:         0       0       0       0       0       0       0       0       0
   195 ;;      Locals:         1       0       0       0       0       0       0       0       0
   196 ;;      Temps:          0       0       0       0       0       0       0       0       0
   197 ;;      Totals:         1       0       0       0       0       0       0       0       0
   198 ;;Total ram usage:        1 bytes
   199 ;; Hardware stack levels used: 1
   200 ;; Hardware stack levels required when called: 1
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		_main
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text1
   209   000884                     __ptext1:
   210                           	callstack 0
   211   000884                     _I2C_Slave_Init:
   212                           	callstack 29
   213                           
   214                           ;incstack = 0
   215                           ;I2C_Slave_Init@Address stored from wreg
   216   000884  6E02               	movwf	I2C_Slave_Init@Address^0,c
   217   000886                     
   218                           ;main.c: 118:     SSPADD = Address;
   219   000886  C002  FFC8         	movff	I2C_Slave_Init@Address,4040	;volatile
   220   00088A                     
   221                           ;main.c: 119:     SSPSTAT = 0x80;
   222   00088A  0E80               	movlw	128
   223   00088C  6EC7               	movwf	199,c	;volatile
   224   00088E                     
   225                           ;main.c: 120:     SSPCON1 = 0x3E;
   226   00088E  0E3E               	movlw	62
   227   000890  6EC6               	movwf	198,c	;volatile
   228   000892                     
   229                           ;main.c: 121:     SSPCON2 = 0x01;
   230   000892  0E01               	movlw	1
   231   000894  6EC5               	movwf	197,c	;volatile
   232   000896                     
   233                           ;main.c: 122:     TRISBbits.RB0 = 1;
   234   000896  8093               	bsf	147,0,c	;volatile
   235   000898                     
   236                           ;main.c: 123:     TRISBbits.RB1 = 1;
   237   000898  8293               	bsf	147,1,c	;volatile
   238   00089A                     
   239                           ;main.c: 124:     GIE = 1;
   240   00089A  8EF2               	bsf	4082,7,c	;volatile
   241   00089C                     
   242                           ;main.c: 125:     PEIE = 1;
   243   00089C  8CF2               	bsf	4082,6,c	;volatile
   244   00089E                     
   245                           ;main.c: 126:     SSPIF = 0;
   246   00089E  969E               	bcf	3998,3,c	;volatile
   247   0008A0                     
   248                           ;main.c: 127:     SSPIE = 1;
   249   0008A0  869D               	bsf	3997,3,c	;volatile
   250   0008A2                     
   251                           ;main.c: 128:     SSPIP = 1;
   252   0008A2  869F               	bsf	3999,3,c	;volatile
   253   0008A4  0012               	return		;funcret
   254   0008A6                     __end_of_I2C_Slave_Init:
   255                           	callstack 0
   256                           
   257 ;; *************** function _ISR *****************
   258 ;; Defined at:
   259 ;;		line 52 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  Dummy           1    0        unsigned char 
   264 ;;  Dummy           1    0        unsigned char 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   274 ;;      Params:         0       0       0       0       0       0       0       0       0
   275 ;;      Locals:         0       0       0       0       0       0       0       0       0
   276 ;;      Temps:          0       0       0       0       0       0       0       0       0
   277 ;;      Totals:         0       0       0       0       0       0       0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels used: 1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		Interrupt level 2
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	intcode
   288   000008                     __pintcode:
   289                           	callstack 0
   290   000008                     _ISR:
   291                           	callstack 29
   292                           
   293                           ;incstack = 0
   294   000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   295   00000A  ED01  F004         	call	int_func,f	;refresh shadow registers
   296                           
   297                           	psect	intcode_body
   298   000802                     __pintcode_body:
   299                           	callstack 29
   300   000802                     int_func:
   301                           	callstack 29
   302   000802  0006               	pop		; remove dummy address from shadow register refresh
   303   000804                     
   304                           ;main.c: 53:     if (SSPIF) {
   305   000804  A69E               	btfss	3998,3,c	;volatile
   306   000806  EF07  F004         	goto	i2u1_41
   307   00080A  EF09  F004         	goto	i2u1_40
   308   00080E                     i2u1_41:
   309   00080E  EF40  F004         	goto	i2l65
   310   000812                     i2u1_40:
   311   000812                     
   312                           ;main.c: 54:         LATBbits.LB4 = 1;
   313   000812  888A               	bsf	138,4,c	;volatile
   314                           
   315                           ;main.c: 55:         CKP = 0;
   316   000814  98C6               	bcf	4038,4,c	;volatile
   317                           
   318                           ;main.c: 56:         if (SSPOV || WCOL)
   319   000816  BCC6               	btfsc	4038,6,c	;volatile
   320   000818  EF10  F004         	goto	i2u2_41
   321   00081C  EF12  F004         	goto	i2u2_40
   322   000820                     i2u2_41:
   323   000820  EF19  F004         	goto	i2l58
   324   000824                     i2u2_40:
   325   000824  AEC6               	btfss	4038,7,c	;volatile
   326   000826  EF17  F004         	goto	i2u3_41
   327   00082A  EF19  F004         	goto	i2u3_40
   328   00082E                     i2u3_41:
   329   00082E  EF1E  F004         	goto	i2l56
   330   000832                     i2u3_40:
   331   000832                     i2l58:
   332                           
   333                           ;main.c: 57:         {;main.c: 58:              LATBbits.LB5 = 1;
   334   000832  8A8A               	bsf	138,5,c	;volatile
   335   000834  50C9               	movf	201,w,c	;volatile
   336                           
   337                           ;main.c: 60:             SSPOV = 0;
   338   000836  9CC6               	bcf	4038,6,c	;volatile
   339                           
   340                           ;main.c: 61:             WCOL = 0;
   341   000838  9EC6               	bcf	4038,7,c	;volatile
   342                           
   343                           ;main.c: 62:             CKP = 1;
   344   00083A  88C6               	bsf	4038,4,c	;volatile
   345   00083C                     i2l56:
   346                           
   347                           ;main.c: 64:         if (!R_nW)
   348   00083C  B4C7               	btfsc	4039,2,c	;volatile
   349   00083E  EF23  F004         	goto	i2u4_41
   350   000842  EF25  F004         	goto	i2u4_40
   351   000846                     i2u4_41:
   352   000846  EF2B  F004         	goto	i2l59
   353   00084A                     i2u4_40:
   354   00084A                     
   355                           ;main.c: 65:         {;main.c: 67:             LATBbits.LB6 = 1;
   356   00084A  8C8A               	bsf	138,6,c	;volatile
   357                           
   358                           ;main.c: 70:             LATD = SSPBUF;
   359   00084C  CFC9 FF8C          	movff	4041,3980	;volatile
   360                           
   361                           ;main.c: 72:             CKP = 1;
   362   000850  88C6               	bsf	4038,4,c	;volatile
   363                           
   364                           ;main.c: 73:         } else if (R_nW)
   365   000852  EF3F  F004         	goto	i2l60
   366   000856                     i2l59:
   367   000856  A4C7               	btfss	4039,2,c	;volatile
   368   000858  EF30  F004         	goto	i2u5_41
   369   00085C  EF32  F004         	goto	i2u5_40
   370   000860                     i2u5_41:
   371   000860  EF3F  F004         	goto	i2l60
   372   000864                     i2u5_40:
   373   000864                     
   374                           ;main.c: 74:         {;main.c: 75:             LATBbits.LB7 = 1;
   375   000864  8E8A               	bsf	138,7,c	;volatile
   376   000866  50C9               	movf	201,w,c	;volatile
   377                           
   378                           ;main.c: 77:             BF = 0;
   379   000868  90C7               	bcf	4039,0,c	;volatile
   380                           
   381                           ;main.c: 78:             SSPBUF = RX_Data;
   382   00086A  C001  FFC9         	movff	_RX_Data,4041	;volatile
   383                           
   384                           ;main.c: 79:             CKP = 1;
   385   00086E  88C6               	bsf	4038,4,c	;volatile
   386   000870                     i2l62:
   387   000870  B0C7               	btfsc	4039,0,c	;volatile
   388   000872  EF3D  F004         	goto	i2u6_41
   389   000876  EF3F  F004         	goto	i2u6_40
   390   00087A                     i2u6_41:
   391   00087A  EF38  F004         	goto	i2l62
   392   00087E                     i2u6_40:
   393   00087E                     i2l60:
   394                           
   395                           ;main.c: 82:         SSPIF = 0;
   396   00087E  969E               	bcf	3998,3,c	;volatile
   397   000880                     i2l65:
   398   000880  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   399   000882  0011               	retfie		f
   400   000884                     __end_of_ISR:
   401                           	callstack 0
   402                           
   403                           	psect	smallconst
   404   000800                     __psmallconst:
   405                           	callstack 0
   406   000800  00                 	db	0
   407   000801  00                 	db	0	; dummy byte at the end
   408   000000                     
   409                           	psect	rparam
   410   000000                     
   411                           	psect	temp
   412   000003                     btemp:
   413                           	callstack 0
   414   000003                     	ds	1
   415   000000                     int$flags	set	btemp
   416   000000                     wtemp8	set	btemp+1
   417   000000                     ttemp5	set	btemp+1
   418   000000                     ttemp6	set	btemp+4
   419   000000                     ttemp7	set	btemp+8
   420                           
   421                           	psect	idloc
   422                           
   423                           ;Config register IDLOC0 @ 0x200000
   424                           ;	unspecified, using default values
   425   200000                     	org	2097152
   426   200000  FF                 	db	255
   427                           
   428                           ;Config register IDLOC1 @ 0x200001
   429                           ;	unspecified, using default values
   430   200001                     	org	2097153
   431   200001  FF                 	db	255
   432                           
   433                           ;Config register IDLOC2 @ 0x200002
   434                           ;	unspecified, using default values
   435   200002                     	org	2097154
   436   200002  FF                 	db	255
   437                           
   438                           ;Config register IDLOC3 @ 0x200003
   439                           ;	unspecified, using default values
   440   200003                     	org	2097155
   441   200003  FF                 	db	255
   442                           
   443                           ;Config register IDLOC4 @ 0x200004
   444                           ;	unspecified, using default values
   445   200004                     	org	2097156
   446   200004  FF                 	db	255
   447                           
   448                           ;Config register IDLOC5 @ 0x200005
   449                           ;	unspecified, using default values
   450   200005                     	org	2097157
   451   200005  FF                 	db	255
   452                           
   453                           ;Config register IDLOC6 @ 0x200006
   454                           ;	unspecified, using default values
   455   200006                     	org	2097158
   456   200006  FF                 	db	255
   457                           
   458                           ;Config register IDLOC7 @ 0x200007
   459                           ;	unspecified, using default values
   460   200007                     	org	2097159
   461   200007  FF                 	db	255
   462                           
   463                           	psect	config
   464                           
   465                           ;Config register CONFIG1L @ 0x300000
   466                           ;	PLL Prescaler Selection bits
   467                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   468                           ;	System Clock Postscaler Selection bits
   469                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   470                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   471                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   472   300000                     	org	3145728
   473   300000  00                 	db	0
   474                           
   475                           ;Config register CONFIG1H @ 0x300001
   476                           ;	Oscillator Selection bits
   477                           ;	FOSC = HS, HS oscillator (HS)
   478                           ;	Fail-Safe Clock Monitor Enable bit
   479                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   480                           ;	Internal/External Oscillator Switchover bit
   481                           ;	IESO = OFF, Oscillator Switchover mode disabled
   482   300001                     	org	3145729
   483   300001  0C                 	db	12
   484                           
   485                           ;Config register CONFIG2L @ 0x300002
   486                           ;	Power-up Timer Enable bit
   487                           ;	PWRT = OFF, PWRT disabled
   488                           ;	Brown-out Reset Enable bits
   489                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   490                           ;	Brown-out Reset Voltage bits
   491                           ;	BORV = 3, Minimum setting 2.05V
   492                           ;	USB Voltage Regulator Enable bit
   493                           ;	VREGEN = OFF, USB voltage regulator disabled
   494   300002                     	org	3145730
   495   300002  1F                 	db	31
   496                           
   497                           ;Config register CONFIG2H @ 0x300003
   498                           ;	Watchdog Timer Enable bit
   499                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   500                           ;	Watchdog Timer Postscale Select bits
   501                           ;	WDTPS = 32768, 1:32768
   502   300003                     	org	3145731
   503   300003  1E                 	db	30
   504                           
   505                           ; Padding undefined space
   506   300004                     	org	3145732
   507   300004  FF                 	db	255
   508                           
   509                           ;Config register CONFIG3H @ 0x300005
   510                           ;	CCP2 MUX bit
   511                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   512                           ;	PORTB A/D Enable bit
   513                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   514                           ;	Low-Power Timer 1 Oscillator Enable bit
   515                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   516                           ;	MCLR Pin Enable bit
   517                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   518   300005                     	org	3145733
   519   300005  83                 	db	131
   520                           
   521                           ;Config register CONFIG4L @ 0x300006
   522                           ;	Stack Full/Underflow Reset Enable bit
   523                           ;	STVREN = ON, Stack full/underflow will cause Reset
   524                           ;	Single-Supply ICSP Enable bit
   525                           ;	LVP = ON, Single-Supply ICSP enabled
   526                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   527                           ;	ICPRT = OFF, ICPORT disabled
   528                           ;	Extended Instruction Set Enable bit
   529                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   530                           ;	Background Debugger Enable bit
   531                           ;	DEBUG = 0x1, unprogrammed default
   532   300006                     	org	3145734
   533   300006  85                 	db	133
   534                           
   535                           ; Padding undefined space
   536   300007                     	org	3145735
   537   300007  FF                 	db	255
   538                           
   539                           ;Config register CONFIG5L @ 0x300008
   540                           ;	Code Protection bit
   541                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   542                           ;	Code Protection bit
   543                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   544                           ;	Code Protection bit
   545                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   546                           ;	Code Protection bit
   547                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   548   300008                     	org	3145736
   549   300008  0F                 	db	15
   550                           
   551                           ;Config register CONFIG5H @ 0x300009
   552                           ;	Boot Block Code Protection bit
   553                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   554                           ;	Data EEPROM Code Protection bit
   555                           ;	CPD = OFF, Data EEPROM is not code-protected
   556   300009                     	org	3145737
   557   300009  C0                 	db	192
   558                           
   559                           ;Config register CONFIG6L @ 0x30000A
   560                           ;	Write Protection bit
   561                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   562                           ;	Write Protection bit
   563                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   564                           ;	Write Protection bit
   565                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   566                           ;	Write Protection bit
   567                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   568   30000A                     	org	3145738
   569   30000A  0F                 	db	15
   570                           
   571                           ;Config register CONFIG6H @ 0x30000B
   572                           ;	Configuration Register Write Protection bit
   573                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   574                           ;	Boot Block Write Protection bit
   575                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   576                           ;	Data EEPROM Write Protection bit
   577                           ;	WRTD = OFF, Data EEPROM is not write-protected
   578   30000B                     	org	3145739
   579   30000B  E0                 	db	224
   580                           
   581                           ;Config register CONFIG7L @ 0x30000C
   582                           ;	Table Read Protection bit
   583                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   584                           ;	Table Read Protection bit
   585                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   586                           ;	Table Read Protection bit
   587                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   588                           ;	Table Read Protection bit
   589                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   590   30000C                     	org	3145740
   591   30000C  0F                 	db	15
   592                           
   593                           ;Config register CONFIG7H @ 0x30000D
   594                           ;	Boot Block Table Read Protection bit
   595                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   596   30000D                     	org	3145741
   597   30000D  40                 	db	64
   598                           tosu	equ	0xFFF
   599                           tosh	equ	0xFFE
   600                           tosl	equ	0xFFD
   601                           stkptr	equ	0xFFC
   602                           pclatu	equ	0xFFB
   603                           pclath	equ	0xFFA
   604                           pcl	equ	0xFF9
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           prodh	equ	0xFF4
   610                           prodl	equ	0xFF3
   611                           indf0	equ	0xFEF
   612                           postinc0	equ	0xFEE
   613                           postdec0	equ	0xFED
   614                           preinc0	equ	0xFEC
   615                           plusw0	equ	0xFEB
   616                           fsr0h	equ	0xFEA
   617                           fsr0l	equ	0xFE9
   618                           wreg	equ	0xFE8
   619                           indf1	equ	0xFE7
   620                           postinc1	equ	0xFE6
   621                           postdec1	equ	0xFE5
   622                           preinc1	equ	0xFE4
   623                           plusw1	equ	0xFE3
   624                           fsr1h	equ	0xFE2
   625                           fsr1l	equ	0xFE1
   626                           bsr	equ	0xFE0
   627                           indf2	equ	0xFDF
   628                           postinc2	equ	0xFDE
   629                           postdec2	equ	0xFDD
   630                           preinc2	equ	0xFDC
   631                           plusw2	equ	0xFDB
   632                           fsr2h	equ	0xFDA
   633                           fsr2l	equ	0xFD9
   634                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_Slave_Init

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1       2       1        2.1%
BITBIGSFRlll        2A      0       0      27        0.0%
BITBIGSFRhhhhhl     28      0       0      21        0.0%
BITBIGSFRhhhl       25      0       0      22        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhhl         7      0       0      23        0.0%
BITBIGSFRlh          6      0       0      25        0.0%
BITBIGSFRllh         1      0       0      26        0.0%
BITBIGSFRhl          1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      28        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Oct 07 03:56:25 2023

                     _BF 7E38                       l47 08BC                       l48 08BC  
                     l68 08A4                      l750 0892                      l760 089E  
                    l752 0896                      l744 0886                      l762 08A0  
                    l754 0898                      l746 088A                      l770 08B6  
                    l764 08A2                      l756 089A                      l748 088E  
                    l758 089C                      l766 08A6                      l768 08AE  
                    _CKP 7E34                      _GIE 7F97                      _ISR 0008  
                   ?_ISR 0002                     _LATD 0F8C                     _PEIE 7F96  
                   i2l60 087E                     i2l62 0870                     i2l56 083C  
                   i2l65 0880                     i2l58 0832                     i2l59 0856  
                   _WCOL 7E37                     _R_nW 7E3A                     _main 08A6  
                   btemp 0003                     start 000E             ___param_bank 0000  
                  ??_ISR 0002                    ?_main 0002                    i2l780 0864  
                  i2l772 0804                    i2l774 0812                    i2l776 0824  
                  i2l778 084A                    _TRISD 0F95                    _SSPIE 7CEB  
                  _SSPIF 7CF3                    _SSPIP 7CFB                    _SSPOV 7E36  
                  ttemp5 0004                    ttemp6 0007                    ttemp7 000B  
                  wtemp8 0004          __initialization 08C4             __end_of_main 08C4  
                 ??_main 0003            __activetblptr 0000                   i2u1_40 0812  
                 i2u1_41 080E                   i2u2_40 0824                   i2u2_41 0820  
                 i2u3_40 0832                   i2u3_41 082E                   i2u4_40 084A  
                 i2u4_41 0846                   i2u5_40 0864                   i2u5_41 0860  
                 i2u6_40 087E                   i2u6_41 087A                   _SSPADD 0FC8  
                 _SSPBUF 0FC9                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 08C6            ___rparam_used 0001  
         __pcstackCOMRAM 0002    I2C_Slave_Init@Address 0002                  _SSPCON1 0FC6  
                _SSPCON2 0FC5                  _SSPSTAT 0FC7                  _RX_Data 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 08C4                  __ramtop 0800                  __ptext0 08A6  
                __ptext1 0884           __pintcode_body 0802     end_of_initialization 08C6  
                int_func 0802           _I2C_Slave_Init 0884                _TRISBbits 0F93  
 __end_of_I2C_Slave_Init 08A6      start_initialization 08C4              __end_of_ISR 0884  
        ?_I2C_Slave_Init 0002              __pbssCOMRAM 0001                __pintcode 0008  
            __smallconst 0800                 _LATBbits 0F8A                 __Hrparam 0000  
               __Lrparam 0000         ??_I2C_Slave_Init 0002                 isa$xinst 0000  
               int$flags 0003                 intlevel2 0000  
