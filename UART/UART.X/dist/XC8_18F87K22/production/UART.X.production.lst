

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 21 20:20:55 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _RCREG	set	4014
    54  0000                     _TXREG	set	4013
    55  0000                     _INTCONbits	set	4082
    56  0000                     _RCONbits	set	4048
    57  0000                     _IPR1bits	set	3999
    58  0000                     _PIE1bits	set	3997
    59  0000                     _PIR1bits	set	3998
    60  0000                     _RCSTAbits	set	4011
    61  0000                     _BAUDCONbits	set	4024
    62  0000                     _TXSTAbits	set	4012
    63  0000                     _SPBRG	set	4015
    64  0000                     _TRISCbits	set	3988
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69  007E8C                     __pcinit:
    70                           	callstack 0
    71  007E8C                     start_initialization:
    72                           	callstack 0
    73  007E8C                     __initialization:
    74                           	callstack 0
    75  007E8C                     end_of_initialization:
    76                           	callstack 0
    77  007E8C                     __end_of__initialization:
    78                           	callstack 0
    79  007E8C  0100               	movlb	0
    80  007E8E  EF5D  F03F         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMRAM
    83  000001                     __pcstackCOMRAM:
    84                           	callstack 0
    85  000001                     ?___lldiv:
    86                           	callstack 0
    87  000001                     esuart_tx_data@uc8_data:
    88                           	callstack 0
    89  000001                     ___lldiv@dividend:
    90                           	callstack 0
    91                           
    92                           ; 4 bytes @ 0x0
    93  000001                     	ds	1
    94  000002                     eusat_tx_str@ptr:
    95                           	callstack 0
    96                           
    97                           ; 2 bytes @ 0x1
    98  000002                     	ds	2
    99  000004                     
   100                           ; 1 bytes @ 0x3
   101  000004                     	ds	1
   102  000005                     ___lldiv@divisor:
   103                           	callstack 0
   104                           
   105                           ; 4 bytes @ 0x4
   106  000005                     	ds	4
   107  000009                     ___lldiv@quotient:
   108                           	callstack 0
   109                           
   110                           ; 4 bytes @ 0x8
   111  000009                     	ds	4
   112  00000D                     ___lldiv@counter:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0xC
   116  00000D                     	ds	1
   117  00000E                     init_eusart@async_baud_rate:
   118                           	callstack 0
   119                           
   120                           ; 4 bytes @ 0xD
   121  00000E                     	ds	4
   122  000012                     main@serial_data:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x11
   126  000012                     	ds	1
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 39 in file "main.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;  serial_data     1   17[COMRAM] unsigned char 
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   147 ;;      Params:         0       0       0       0       0       0       0       0       0
   148 ;;      Locals:         1       0       0       0       0       0       0       0       0
   149 ;;      Temps:          0       0       0       0       0       0       0       0       0
   150 ;;      Totals:         1       0       0       0       0       0       0       0       0
   151 ;;Total ram usage:        1 bytes
   152 ;; Hardware stack levels required when called: 2
   153 ;; This function calls:
   154 ;;		_eusart_Rx_data
   155 ;;		_eusat_tx_str
   156 ;;		_init_eusart
   157 ;; This function is called by:
   158 ;;		Startup code after reset
   159 ;; This function uses a non-reentrant model
   160 ;;
   161                           
   162                           	psect	text0
   163  007EBA                     __ptext0:
   164                           	callstack 0
   165  007EBA                     _main:
   166                           	callstack 29
   167  007EBA                     
   168                           ;main.c: 40:     unsigned char serial_data;;main.c: 41:     init_eusart(115200);
   169  007EBA  0E00               	movlw	0
   170  007EBC  6E0E               	movwf	init_eusart@async_baud_rate^0,c
   171  007EBE  0EC2               	movlw	194
   172  007EC0  6E0F               	movwf	(init_eusart@async_baud_rate+1)^0,c
   173  007EC2  0E01               	movlw	1
   174  007EC4  6E10               	movwf	(init_eusart@async_baud_rate+2)^0,c
   175  007EC6  0E00               	movlw	0
   176  007EC8  6E11               	movwf	(init_eusart@async_baud_rate+3)^0,c
   177  007ECA  EC8C  F03F         	call	_init_eusart	;wreg free
   178  007ECE                     l859:
   179                           
   180                           ;main.c: 43:         serial_data = eusart_Rx_data();
   181  007ECE  EC49  F03F         	call	_eusart_Rx_data	;wreg free
   182  007ED2  6E12               	movwf	main@serial_data^0,c
   183  007ED4                     
   184                           ;main.c: 44:         eusat_tx_str(&serial_data);
   185  007ED4  0E12               	movlw	low main@serial_data
   186  007ED6  6E02               	movwf	eusat_tx_str@ptr^0,c
   187  007ED8  0E00               	movlw	high main@serial_data
   188  007EDA  6E03               	movwf	(eusat_tx_str@ptr+1)^0,c
   189  007EDC  EC74  F03F         	call	_eusat_tx_str	;wreg free
   190  007EE0  EF67  F03F         	goto	l859
   191  007EE4  EF00  F000         	goto	start
   192  007EE8                     __end_of_main:
   193                           	callstack 0
   194                           
   195 ;; *************** function _init_eusart *****************
   196 ;; Defined at:
   197 ;;		line 3 in file "main.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;  async_baud_r    4   13[COMRAM] unsigned long 
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, status,2, status,0, cstack
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   211 ;;      Params:         4       0       0       0       0       0       0       0       0
   212 ;;      Locals:         0       0       0       0       0       0       0       0       0
   213 ;;      Temps:          0       0       0       0       0       0       0       0       0
   214 ;;      Totals:         4       0       0       0       0       0       0       0       0
   215 ;;Total ram usage:        4 bytes
   216 ;; Hardware stack levels used: 1
   217 ;; Hardware stack levels required when called: 1
   218 ;; This function calls:
   219 ;;		___lldiv
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226  007F18                     __ptext1:
   227                           	callstack 0
   228  007F18                     _init_eusart:
   229                           	callstack 29
   230  007F18                     
   231                           ;main.c: 4:     TRISCbits.RC6 = 0;
   232  007F18  9C94               	bcf	148,6,c	;volatile
   233                           
   234                           ;main.c: 5:     TRISCbits.RC7 = 1;
   235  007F1A  8E94               	bsf	148,7,c	;volatile
   236  007F1C                     
   237                           ;main.c: 7:     SPBRG = (unsigned char)((( 8000000 / 4)/async_baud_rate)-1);
   238  007F1C  0E80               	movlw	128
   239  007F1E  6E01               	movwf	___lldiv@dividend^0,c
   240  007F20  0E84               	movlw	132
   241  007F22  6E02               	movwf	(___lldiv@dividend+1)^0,c
   242  007F24  0E1E               	movlw	30
   243  007F26  6E03               	movwf	(___lldiv@dividend+2)^0,c
   244  007F28  0E00               	movlw	0
   245  007F2A  6E04               	movwf	(___lldiv@dividend+3)^0,c
   246  007F2C  C00E  F005         	movff	init_eusart@async_baud_rate,___lldiv@divisor
   247  007F30  C00F  F006         	movff	init_eusart@async_baud_rate+1,___lldiv@divisor+1
   248  007F34  C010  F007         	movff	init_eusart@async_baud_rate+2,___lldiv@divisor+2
   249  007F38  C011  F008         	movff	init_eusart@async_baud_rate+3,___lldiv@divisor+3
   250  007F3C  ECAE  F03F         	call	___lldiv	;wreg free
   251  007F40  0401               	decf	?___lldiv^0,w,c
   252  007F42  6EAF               	movwf	175,c	;volatile
   253  007F44                     
   254                           ;main.c: 8:     TXSTAbits.BRGH =1;
   255  007F44  84AC               	bsf	172,2,c	;volatile
   256  007F46                     
   257                           ;main.c: 9:     BAUDCONbits.BRG16 = 1;
   258  007F46  86B8               	bsf	184,3,c	;volatile
   259  007F48                     
   260                           ;main.c: 10:     TXSTAbits.SYNC = 0;
   261  007F48  98AC               	bcf	172,4,c	;volatile
   262  007F4A                     
   263                           ;main.c: 11:     RCSTAbits.SPEN = 1;
   264  007F4A  8EAB               	bsf	171,7,c	;volatile
   265  007F4C                     
   266                           ;main.c: 12:     TXSTAbits.TXEN = 1;
   267  007F4C  8AAC               	bsf	172,5,c	;volatile
   268  007F4E                     
   269                           ;main.c: 13:     RCSTAbits.CREN = 1;
   270  007F4E  88AB               	bsf	171,4,c	;volatile
   271  007F50                     
   272                           ;main.c: 15:     PIR1bits.RC1IF = 0;
   273  007F50  9A9E               	bcf	158,5,c	;volatile
   274  007F52                     
   275                           ;main.c: 16:     PIE1bits.RCIE = 1;
   276  007F52  8A9D               	bsf	157,5,c	;volatile
   277  007F54                     
   278                           ;main.c: 17:     IPR1bits.RCIP = 1;
   279  007F54  8A9F               	bsf	159,5,c	;volatile
   280  007F56                     
   281                           ;main.c: 18:     RCONbits.IPEN = 1;
   282  007F56  8ED0               	bsf	208,7,c	;volatile
   283  007F58                     
   284                           ;main.c: 19:     INTCONbits.PEIE =1;
   285  007F58  8CF2               	bsf	242,6,c	;volatile
   286  007F5A  0012               	return		;funcret
   287  007F5C                     __end_of_init_eusart:
   288                           	callstack 0
   289                           
   290 ;; *************** function ___lldiv *****************
   291 ;; Defined at:
   292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;  dividend        4    0[COMRAM] unsigned long 
   295 ;;  divisor         4    4[COMRAM] unsigned long 
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  quotient        4    8[COMRAM] unsigned long 
   298 ;;  counter         1   12[COMRAM] unsigned char 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  4    0[COMRAM] unsigned long 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   308 ;;      Params:         8       0       0       0       0       0       0       0       0
   309 ;;      Locals:         5       0       0       0       0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0       0       0       0       0
   311 ;;      Totals:        13       0       0       0       0       0       0       0       0
   312 ;;Total ram usage:       13 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_init_eusart
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text2
   322  007F5C                     __ptext2:
   323                           	callstack 0
   324  007F5C                     ___lldiv:
   325                           	callstack 29
   326  007F5C  0E00               	movlw	0
   327  007F5E  6E09               	movwf	___lldiv@quotient^0,c
   328  007F60  0E00               	movlw	0
   329  007F62  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   330  007F64  0E00               	movlw	0
   331  007F66  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   332  007F68  0E00               	movlw	0
   333  007F6A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   334  007F6C  5005               	movf	___lldiv@divisor^0,w,c
   335  007F6E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   336  007F70  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   337  007F72  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   338  007F74  B4D8               	btfsc	status,2,c
   339  007F76  EFBF  F03F         	goto	u71
   340  007F7A  EFC1  F03F         	goto	u70
   341  007F7E                     u71:
   342  007F7E  EFF7  F03F         	goto	l83
   343  007F82                     u70:
   344  007F82  0E01               	movlw	1
   345  007F84  6E0D               	movwf	___lldiv@counter^0,c
   346  007F86  EFCB  F03F         	goto	l809
   347  007F8A                     l807:
   348  007F8A  90D8               	bcf	status,0,c
   349  007F8C  3605               	rlcf	___lldiv@divisor^0,f,c
   350  007F8E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   351  007F90  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   352  007F92  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   353  007F94  2A0D               	incf	___lldiv@counter^0,f,c
   354  007F96                     l809:
   355  007F96  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   356  007F98  EFD0  F03F         	goto	u81
   357  007F9C  EFD2  F03F         	goto	u80
   358  007FA0                     u81:
   359  007FA0  EFC5  F03F         	goto	l807
   360  007FA4                     u80:
   361  007FA4                     l811:
   362  007FA4  90D8               	bcf	status,0,c
   363  007FA6  3609               	rlcf	___lldiv@quotient^0,f,c
   364  007FA8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   365  007FAA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   366  007FAC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   367  007FAE  5005               	movf	___lldiv@divisor^0,w,c
   368  007FB0  5C01               	subwf	___lldiv@dividend^0,w,c
   369  007FB2  5006               	movf	(___lldiv@divisor+1)^0,w,c
   370  007FB4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   371  007FB6  5007               	movf	(___lldiv@divisor+2)^0,w,c
   372  007FB8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   373  007FBA  5008               	movf	(___lldiv@divisor+3)^0,w,c
   374  007FBC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   375  007FBE  A0D8               	btfss	status,0,c
   376  007FC0  EFE4  F03F         	goto	u91
   377  007FC4  EFE6  F03F         	goto	u90
   378  007FC8                     u91:
   379  007FC8  EFEF  F03F         	goto	l819
   380  007FCC                     u90:
   381  007FCC  5005               	movf	___lldiv@divisor^0,w,c
   382  007FCE  5E01               	subwf	___lldiv@dividend^0,f,c
   383  007FD0  5006               	movf	(___lldiv@divisor+1)^0,w,c
   384  007FD2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   385  007FD4  5007               	movf	(___lldiv@divisor+2)^0,w,c
   386  007FD6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   387  007FD8  5008               	movf	(___lldiv@divisor+3)^0,w,c
   388  007FDA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   389  007FDC  8009               	bsf	___lldiv@quotient^0,0,c
   390  007FDE                     l819:
   391  007FDE  90D8               	bcf	status,0,c
   392  007FE0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   393  007FE2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   394  007FE4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   395  007FE6  3205               	rrcf	___lldiv@divisor^0,f,c
   396  007FE8  2E0D               	decfsz	___lldiv@counter^0,f,c
   397  007FEA  EFD2  F03F         	goto	l811
   398  007FEE                     l83:
   399  007FEE  C009  F001         	movff	___lldiv@quotient,?___lldiv
   400  007FF2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   401  007FF6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   402  007FFA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   403  007FFE  0012               	return		;funcret
   404  008000                     __end_of___lldiv:
   405                           	callstack 0
   406                           
   407 ;; *************** function _eusat_tx_str *****************
   408 ;; Defined at:
   409 ;;		line 33 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  ptr             2    1[COMRAM] PTR unsigned char 
   412 ;;		 -> main@serial_data(1), 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         2       0       0       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0
   427 ;;      Totals:         2       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:        2 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 1
   431 ;; This function calls:
   432 ;;		_esuart_tx_data
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text3
   439  007EE8                     __ptext3:
   440                           	callstack 0
   441  007EE8                     _eusat_tx_str:
   442                           	callstack 29
   443  007EE8                     
   444                           ;main.c: 34:     while(*ptr != 0){
   445  007EE8  EF7F  F03F         	goto	l855
   446  007EEC                     l851:
   447                           
   448                           ;main.c: 35:      esuart_tx_data(*ptr++);
   449  007EEC  C002  FFD9         	movff	eusat_tx_str@ptr,fsr2l
   450  007EF0  C003  FFDA         	movff	eusat_tx_str@ptr+1,fsr2h
   451  007EF4  50DF               	movf	indf2,w,c
   452  007EF6  EC52  F03F         	call	_esuart_tx_data
   453  007EFA  4A02               	infsnz	eusat_tx_str@ptr^0,f,c
   454  007EFC  2A03               	incf	(eusat_tx_str@ptr+1)^0,f,c
   455  007EFE                     l855:
   456                           
   457                           ;main.c: 34:     while(*ptr != 0){
   458  007EFE  C002  FFD9         	movff	eusat_tx_str@ptr,fsr2l
   459  007F02  C003  FFDA         	movff	eusat_tx_str@ptr+1,fsr2h
   460  007F06  50DF               	movf	indf2,w,c
   461  007F08  A4D8               	btfss	status,2,c
   462  007F0A  EF89  F03F         	goto	u101
   463  007F0E  EF8B  F03F         	goto	u100
   464  007F12                     u101:
   465  007F12  EF76  F03F         	goto	l851
   466  007F16                     u100:
   467  007F16  0012               	return		;funcret
   468  007F18                     __end_of_eusat_tx_str:
   469                           	callstack 0
   470                           
   471 ;; *************** function _esuart_tx_data *****************
   472 ;; Defined at:
   473 ;;		line 23 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  uc8_data        1    wreg     unsigned char 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  uc8_data        1    0[COMRAM] unsigned char 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         1       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0
   490 ;;      Totals:         1       0       0       0       0       0       0       0       0
   491 ;;Total ram usage:        1 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_eusat_tx_str
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text4
   501  007EA4                     __ptext4:
   502                           	callstack 0
   503  007EA4                     _esuart_tx_data:
   504                           	callstack 29
   505                           
   506                           ;incstack = 0
   507                           ;esuart_tx_data@uc8_data stored from wreg
   508  007EA4  6E01               	movwf	esuart_tx_data@uc8_data^0,c
   509  007EA6                     l30:
   510  007EA6  A89E               	btfss	158,4,c	;volatile
   511  007EA8  EF58  F03F         	goto	u11
   512  007EAC  EF5A  F03F         	goto	u10
   513  007EB0                     u11:
   514  007EB0  EF53  F03F         	goto	l30
   515  007EB4                     u10:
   516  007EB4                     
   517                           ;main.c: 25:     TXREG = uc8_data;
   518  007EB4  C001  FFAD         	movff	esuart_tx_data@uc8_data,4013	;volatile
   519  007EB8  0012               	return		;funcret
   520  007EBA                     __end_of_esuart_tx_data:
   521                           	callstack 0
   522                           
   523 ;; *************** function _eusart_Rx_data *****************
   524 ;; Defined at:
   525 ;;		line 28 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      unsigned char 
   532 ;; Registers used:
   533 ;;		wreg, status,2
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   539 ;;      Params:         0       0       0       0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text5
   553  007E92                     __ptext5:
   554                           	callstack 0
   555  007E92                     _eusart_Rx_data:
   556                           	callstack 30
   557  007E92                     l36:
   558  007E92  AA9E               	btfss	158,5,c	;volatile
   559  007E94  EF4E  F03F         	goto	u51
   560  007E98  EF50  F03F         	goto	u50
   561  007E9C                     u51:
   562  007E9C  EF49  F03F         	goto	l36
   563  007EA0                     u50:
   564  007EA0                     
   565                           ;main.c: 30:     return RCREG;
   566  007EA0  50AE               	movf	174,w,c	;volatile
   567  007EA2  0012               	return		;funcret
   568  007EA4                     __end_of_eusart_Rx_data:
   569                           	callstack 0
   570  0000                     
   571                           	psect	rparam
   572  0000                     
   573                           	psect	idloc
   574                           
   575                           ;Config register IDLOC0 @ 0x200000
   576                           ;	unspecified, using default values
   577  200000                     	org	2097152
   578  200000  FF                 	db	255
   579                           
   580                           ;Config register IDLOC1 @ 0x200001
   581                           ;	unspecified, using default values
   582  200001                     	org	2097153
   583  200001  FF                 	db	255
   584                           
   585                           ;Config register IDLOC2 @ 0x200002
   586                           ;	unspecified, using default values
   587  200002                     	org	2097154
   588  200002  FF                 	db	255
   589                           
   590                           ;Config register IDLOC3 @ 0x200003
   591                           ;	unspecified, using default values
   592  200003                     	org	2097155
   593  200003  FF                 	db	255
   594                           
   595                           ;Config register IDLOC4 @ 0x200004
   596                           ;	unspecified, using default values
   597  200004                     	org	2097156
   598  200004  FF                 	db	255
   599                           
   600                           ;Config register IDLOC5 @ 0x200005
   601                           ;	unspecified, using default values
   602  200005                     	org	2097157
   603  200005  FF                 	db	255
   604                           
   605                           ;Config register IDLOC6 @ 0x200006
   606                           ;	unspecified, using default values
   607  200006                     	org	2097158
   608  200006  FF                 	db	255
   609                           
   610                           ;Config register IDLOC7 @ 0x200007
   611                           ;	unspecified, using default values
   612  200007                     	org	2097159
   613  200007  FF                 	db	255
   614                           
   615                           	psect	config
   616                           
   617                           ;Config register CONFIG1L @ 0x300000
   618                           ;	PLL Prescaler Selection bits
   619                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
   620                           ;	System Clock Postscaler Selection bits
   621                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   622                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   623                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   624  300000                     	org	3145728
   625  300000  21                 	db	33
   626                           
   627                           ;Config register CONFIG1H @ 0x300001
   628                           ;	Oscillator Selection bits
   629                           ;	FOSC = HS, HS oscillator (HS)
   630                           ;	Fail-Safe Clock Monitor Enable bit
   631                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   632                           ;	Internal/External Oscillator Switchover bit
   633                           ;	IESO = OFF, Oscillator Switchover mode disabled
   634  300001                     	org	3145729
   635  300001  0C                 	db	12
   636                           
   637                           ;Config register CONFIG2L @ 0x300002
   638                           ;	Power-up Timer Enable bit
   639                           ;	PWRT = OFF, PWRT disabled
   640                           ;	Brown-out Reset Enable bits
   641                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   642                           ;	Brown-out Reset Voltage bits
   643                           ;	BORV = 3, Minimum setting 2.05V
   644                           ;	USB Voltage Regulator Enable bit
   645                           ;	VREGEN = OFF, USB voltage regulator disabled
   646  300002                     	org	3145730
   647  300002  1F                 	db	31
   648                           
   649                           ;Config register CONFIG2H @ 0x300003
   650                           ;	Watchdog Timer Enable bit
   651                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   652                           ;	Watchdog Timer Postscale Select bits
   653                           ;	WDTPS = 32768, 1:32768
   654  300003                     	org	3145731
   655  300003  1E                 	db	30
   656                           
   657                           ; Padding undefined space
   658  300004                     	org	3145732
   659  300004  FF                 	db	255
   660                           
   661                           ;Config register CONFIG3H @ 0x300005
   662                           ;	CCP2 MUX bit
   663                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   664                           ;	PORTB A/D Enable bit
   665                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   666                           ;	Low-Power Timer 1 Oscillator Enable bit
   667                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   668                           ;	MCLR Pin Enable bit
   669                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   670  300005                     	org	3145733
   671  300005  83                 	db	131
   672                           
   673                           ;Config register CONFIG4L @ 0x300006
   674                           ;	Stack Full/Underflow Reset Enable bit
   675                           ;	STVREN = ON, Stack full/underflow will cause Reset
   676                           ;	Single-Supply ICSP Enable bit
   677                           ;	LVP = ON, Single-Supply ICSP enabled
   678                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   679                           ;	ICPRT = OFF, ICPORT disabled
   680                           ;	Extended Instruction Set Enable bit
   681                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   682                           ;	Background Debugger Enable bit
   683                           ;	DEBUG = 0x1, unprogrammed default
   684  300006                     	org	3145734
   685  300006  85                 	db	133
   686                           
   687                           ; Padding undefined space
   688  300007                     	org	3145735
   689  300007  FF                 	db	255
   690                           
   691                           ;Config register CONFIG5L @ 0x300008
   692                           ;	Code Protection bit
   693                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   694                           ;	Code Protection bit
   695                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   696                           ;	Code Protection bit
   697                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   698                           ;	Code Protection bit
   699                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   700  300008                     	org	3145736
   701  300008  0F                 	db	15
   702                           
   703                           ;Config register CONFIG5H @ 0x300009
   704                           ;	Boot Block Code Protection bit
   705                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   706                           ;	Data EEPROM Code Protection bit
   707                           ;	CPD = OFF, Data EEPROM is not code-protected
   708  300009                     	org	3145737
   709  300009  C0                 	db	192
   710                           
   711                           ;Config register CONFIG6L @ 0x30000A
   712                           ;	Write Protection bit
   713                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   714                           ;	Write Protection bit
   715                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   716                           ;	Write Protection bit
   717                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   718                           ;	Write Protection bit
   719                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   720  30000A                     	org	3145738
   721  30000A  0F                 	db	15
   722                           
   723                           ;Config register CONFIG6H @ 0x30000B
   724                           ;	Configuration Register Write Protection bit
   725                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   726                           ;	Boot Block Write Protection bit
   727                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   728                           ;	Data EEPROM Write Protection bit
   729                           ;	WRTD = OFF, Data EEPROM is not write-protected
   730  30000B                     	org	3145739
   731  30000B  E0                 	db	224
   732                           
   733                           ;Config register CONFIG7L @ 0x30000C
   734                           ;	Table Read Protection bit
   735                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   736                           ;	Table Read Protection bit
   737                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   738                           ;	Table Read Protection bit
   739                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   740                           ;	Table Read Protection bit
   741                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   742  30000C                     	org	3145740
   743  30000C  0F                 	db	15
   744                           
   745                           ;Config register CONFIG7H @ 0x30000D
   746                           ;	Boot Block Table Read Protection bit
   747                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   748  30000D                     	org	3145741
   749  30000D  40                 	db	64
   750                           tosu	equ	0xFFF
   751                           tosh	equ	0xFFE
   752                           tosl	equ	0xFFD
   753                           stkptr	equ	0xFFC
   754                           pclatu	equ	0xFFB
   755                           pclath	equ	0xFFA
   756                           pcl	equ	0xFF9
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           prodh	equ	0xFF4
   762                           prodl	equ	0xFF3
   763                           indf0	equ	0xFEF
   764                           postinc0	equ	0xFEE
   765                           postdec0	equ	0xFED
   766                           preinc0	equ	0xFEC
   767                           plusw0	equ	0xFEB
   768                           fsr0h	equ	0xFEA
   769                           fsr0l	equ	0xFE9
   770                           wreg	equ	0xFE8
   771                           indf1	equ	0xFE7
   772                           postinc1	equ	0xFE6
   773                           postdec1	equ	0xFE5
   774                           preinc1	equ	0xFE4
   775                           plusw1	equ	0xFE3
   776                           fsr1h	equ	0xFE2
   777                           fsr1l	equ	0xFE1
   778                           bsr	equ	0xFE0
   779                           indf2	equ	0xFDF
   780                           postinc2	equ	0xFDE
   781                           postdec2	equ	0xFDD
   782                           preinc2	equ	0xFDC
   783                           plusw2	equ	0xFDB
   784                           fsr2h	equ	0xFDA
   785                           fsr2l	equ	0xFD9
   786                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eusat_tx_str@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> main@serial_data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_init_eusart
    _init_eusart->___lldiv
    _eusat_tx_str->_esuart_tx_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     573
                                             17 COMRAM     1     1      0
                     _eusart_Rx_data
                       _eusat_tx_str
                        _init_eusart
 ---------------------------------------------------------------------------------
 (1) _init_eusart                                          4     0      4     412
                                             13 COMRAM     4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _eusat_tx_str                                         2     0      2     136
                                              1 COMRAM     2     0      2
                     _esuart_tx_data
 ---------------------------------------------------------------------------------
 (2) _esuart_tx_data                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eusart_Rx_data                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eusart_Rx_data
   _eusat_tx_str
     _esuart_tx_data
   _init_eusart
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     12      12       1       18.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 21 20:20:55 2023

           eusat_tx_str@ptr 0002                          l30 7EA6                          l33 7EB8  
                        l27 7F5A                          l36 7E92                          l45 7F16  
                        l39 7EA2                          l90 7FFE                          l83 7FEE  
                        u10 7EB4                          u11 7EB0                          u50 7EA0  
                        u51 7E9C                          u70 7F82                          u71 7F7E  
                        u80 7FA4                          u81 7FA0                          u90 7FCC  
                        u91 7FC8                         l801 7F5C                         l731 7EB4  
                       l811 7FA4                         l803 7F6C                         l821 7FE8  
                       l813 7FAE                         l805 7F82                         l815 7FCC  
                       l807 7F8A                         l831 7F48                         l823 7F18  
                       l729 7EA6                         l817 7FDC                         l809 7F96  
                       l841 7F52                         l833 7F4A                         l825 7F1C  
                       l851 7EEC                         l819 7FDE                         l843 7F54  
                       l835 7F4C                         l827 7F44                         l781 7E92  
                       l853 7EFA                         l845 7F56                         l837 7F4E  
                       l829 7F46                         l861 7ED4                         l783 7EA0  
                       l855 7EFE                         l847 7F58                         l839 7F50  
                       l849 7EE8                         l857 7EBA                         l859 7ECE  
                       u100 7F16                         u101 7F12                        _main 7EBA  
                      fsr2h 000FDA                        indf2 000FDF                        fsr2l 000FD9  
                      start 0000                ___param_bank 000000            ??_esuart_tx_data 0001  
                     ?_main 0001             __end_of___lldiv 8000                       _RCREG 000FAE  
                     _SPBRG 000FAF                ?_init_eusart 000E                       _TXREG 000FAD  
          ??_eusart_Rx_data 0001                       status 000FD8             __initialization 7E8C  
              __end_of_main 7EE8                      ??_main 0012               __activetblptr 000000  
                 ??___lldiv 0009               ?_eusat_tx_str 0002                      isa$std 000001  
                __accesstop 0060     __end_of__initialization 7E8C               ___rparam_used 000001  
            __pcstackCOMRAM 0001              ??_eusat_tx_str 0004        __size_of_init_eusart 0044  
                   __Hparam 0000                     __Lparam 0000                     ___lldiv 7F5C  
                   __pcinit 7E8C                     __ramtop 0800                     __ptext0 7EBA  
                   __ptext1 7F18                     __ptext2 7F5C                     __ptext3 7EE8  
                   __ptext4 7EA4                     __ptext5 7E92      esuart_tx_data@uc8_data 0001  
      end_of_initialization 7E8C        __end_of_eusat_tx_str 7F18             ___lldiv@divisor 0005  
           ___lldiv@counter 000D                   _RCSTAbits 000FAB     __size_of_esuart_tx_data 0016  
                 _TRISCbits 000F94                   _TXSTAbits 000FAC     __size_of_eusart_Rx_data 0012  
               _BAUDCONbits 000FB8         start_initialization 7E8C               ??_init_eusart 0012  
     __size_of_eusat_tx_str 0030                    ?___lldiv 0001                _eusat_tx_str 7EE8  
            _esuart_tx_data 7EA4         __end_of_init_eusart 7F5C              _eusart_Rx_data 7E92  
                  _IPR1bits 000F9F                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
                  _RCONbits 000FD0      __end_of_esuart_tx_data 7EBA      __end_of_eusart_Rx_data 7EA4  
init_eusart@async_baud_rate 000E                    __Hrparam 0000                    __Lrparam 0000  
          __size_of___lldiv 00A4             ?_esuart_tx_data 0001                 _init_eusart 7F18  
           ?_eusart_Rx_data 0001               __size_of_main 002E             main@serial_data 0012  
                  isa$xinst 000000                  _INTCONbits 000FF2            ___lldiv@dividend 0001  
          ___lldiv@quotient 0009  
