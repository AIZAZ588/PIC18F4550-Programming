

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jun 06 19:39:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     _ADRESL	set	4035
    86   000000                     _ADRESH	set	4036
    87   000000                     _ADCON0bits	set	4034
    88   000000                     _PORTBbits	set	3969
    89   000000                     _TRISAbits	set	3986
    90   000000                     _TRISD	set	3989
    91   000000                     _TRISBbits	set	3987
    92   000000                     _ADCON2bits	set	4032
    93   000000                     _ADCON1bits	set	4033
    94   000000                     _PORTD	set	3971
    95                           
    96                           	psect	smallconst
    97   000800                     __psmallconst:
    98                           	callstack 0
    99   000800  00                 	db	0
   100   000801                     STR_1:
   101   000801  25                 	db	37
   102   000802  2E                 	db	46
   103   000803  32                 	db	50	;'2'
   104   000804  66                 	db	102	;'f'
   105   000805  56                 	db	86	;'V'
   106   000806  00                 	db	0
   107   000807                     STR_2:
   108   000807  69                 	db	105	;'i'
   109   000808  6E                 	db	110	;'n'
   110   000809  66                 	db	102	;'f'
   111   00080A  00                 	db	0
   112   00080B                     STR_5:
   113   00080B  6E                 	db	110	;'n'
   114   00080C  61                 	db	97	;'a'
   115   00080D  6E                 	db	110	;'n'
   116   00080E  00                 	db	0
   117   00080F  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   002FD4                     __pcinit:
   123                           	callstack 0
   124   002FD4                     start_initialization:
   125                           	callstack 0
   126   002FD4                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Clear objects allocated to BANK1 (80 bytes)
   130   002FD4  EE01  F000         	lfsr	0,__pbssBANK1
   131   002FD8  0E50               	movlw	80
   132   002FDA                     clear_0:
   133   002FDA  6AEE               	clrf	postinc0,c
   134   002FDC  06E8               	decf	wreg,f,c
   135   002FDE  E1FD               	bnz	clear_0
   136                           
   137                           ; Clear objects allocated to BANK0 (9 bytes)
   138   002FE0  EE00  F0B0         	lfsr	0,__pbssBANK0
   139   002FE4  0E09               	movlw	9
   140   002FE6                     clear_1:
   141   002FE6  6AEE               	clrf	postinc0,c
   142   002FE8  06E8               	decf	wreg,f,c
   143   002FEA  E1FD               	bnz	clear_1
   144                           
   145                           ; Clear objects allocated to COMRAM (4 bytes)
   146   002FEC  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   147   002FEE  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   148   002FF0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   149   002FF2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   150   002FF4                     end_of_initialization:
   151                           	callstack 0
   152   002FF4                     __end_of__initialization:
   153                           	callstack 0
   154   002FF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155   002FF6  6EF8               	movwf	tblptru,c
   156   002FF8  0100               	movlb	0
   157   002FFA  EFDE  F014         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   00005B                     __pbssCOMRAM:
   161                           	callstack 0
   162   00005B                     _width:
   163                           	callstack 0
   164   00005B                     	ds	2
   165   00005D                     _prec:
   166                           	callstack 0
   167   00005D                     	ds	2
   168                           
   169                           	psect	bssBANK0
   170   0000B0                     __pbssBANK0:
   171                           	callstack 0
   172   0000B0                     floorf@F526:
   173                           	callstack 0
   174   0000B0                     	ds	4
   175   0000B4                     ___fpclassifyf@F465:
   176                           	callstack 0
   177   0000B4                     	ds	4
   178   0000B8                     _flags:
   179                           	callstack 0
   180   0000B8                     	ds	1
   181                           
   182                           	psect	bssBANK1
   183   000100                     __pbssBANK1:
   184                           	callstack 0
   185   000100                     _dbuf:
   186                           	callstack 0
   187   000100                     	ds	80
   188                           
   189                           	psect	cstackBANK0
   190   000060                     __pcstackBANK0:
   191                           	callstack 0
   192   000060                     efgtoa@ne:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x0
   196   000060                     	ds	2
   197   000062                     efgtoa@p:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x2
   201   000062                     	ds	2
   202   000064                     efgtoa@t:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x4
   206   000064                     	ds	2
   207   000066                     _efgtoa$938:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x6
   211   000066                     	ds	2
   212   000068                     efgtoa@pp:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x8
   216   000068                     	ds	1
   217   000069                     efgtoa@mode:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x9
   221   000069                     	ds	1
   222   00006A                     efgtoa@nmode:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0xA
   226   00006A                     	ds	1
   227   00006B                     efgtoa@d:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0xB
   231   00006B                     	ds	2
   232   00006D                     efgtoa@m:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0xD
   236   00006D                     	ds	2
   237   00006F                     efgtoa@e:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xF
   241   00006F                     	ds	2
   242   000071                     efgtoa@w:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x11
   246   000071                     	ds	2
   247   000073                     efgtoa@ou:
   248                           	callstack 0
   249                           
   250                           ; 4 bytes @ 0x13
   251   000073                     	ds	4
   252   000077                     efgtoa@i:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x17
   256   000077                     	ds	2
   257   000079                     efgtoa@h:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x19
   261   000079                     	ds	4
   262   00007D                     efgtoa@l:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x1D
   266   00007D                     	ds	4
   267   000081                     efgtoa@sign:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x21
   271   000081                     	ds	1
   272   000082                     efgtoa@n:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x22
   276   000082                     	ds	2
   277   000084                     efgtoa@g:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x24
   281   000084                     	ds	4
   282   000088                     efgtoa@u:
   283                           	callstack 0
   284                           
   285                           ; 4 bytes @ 0x28
   286   000088                     	ds	4
   287   00008C                     vfpfcnvrt@fp:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2C
   291   00008C                     	ds	2
   292   00008E                     vfpfcnvrt@fmt:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x2E
   296   00008E                     	ds	2
   297   000090                     vfpfcnvrt@ap:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x30
   301   000090                     	ds	2
   302   000092                     ?_vfprintf:
   303                           	callstack 0
   304   000092                     vfprintf@fp:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x32
   308   000092                     	ds	2
   309   000094                     vfprintf@fmt:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x34
   313   000094                     	ds	2
   314   000096                     vfprintf@ap:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x36
   318   000096                     	ds	2
   319   000098                     ?_sprintf:
   320                           	callstack 0
   321   000098                     sprintf@s:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x38
   325   000098                     	ds	2
   326   00009A                     sprintf@fmt:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x3A
   330   00009A                     	ds	6
   331   0000A0                     main@voltage_str:
   332                           	callstack 0
   333                           
   334                           ; 10 bytes @ 0x40
   335   0000A0                     	ds	10
   336   0000AA                     main@voltage:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0x4A
   340   0000AA                     	ds	4
   341   0000AE                     main@data:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x4E
   345   0000AE                     	ds	2
   346                           
   347                           	psect	cstackCOMRAM
   348   000001                     __pcstackCOMRAM:
   349                           	callstack 0
   350   000001                     ??_CMD_LCD:
   351   000001                     ??_DATA_LCD:
   352   000001                     ?___fpclassifyf:
   353                           	callstack 0
   354   000001                     ?_isdigit:
   355                           	callstack 0
   356   000001                     ?_isspace:
   357                           	callstack 0
   358   000001                     ?_adc_read:
   359                           	callstack 0
   360   000001                     ?___wmul:
   361                           	callstack 0
   362   000001                     ?___fladd:
   363                           	callstack 0
   364   000001                     ?___fldiv:
   365                           	callstack 0
   366   000001                     ?_labs:
   367                           	callstack 0
   368   000001                     ?___flneg:
   369                           	callstack 0
   370   000001                     ?___fltol:
   371                           	callstack 0
   372   000001                     ?___xxtofl:
   373                           	callstack 0
   374   000001                     ___wmul@multiplier:
   375                           	callstack 0
   376   000001                     isdigit@c:
   377                           	callstack 0
   378   000001                     isspace@c:
   379                           	callstack 0
   380   000001                     memcpy@d1:
   381                           	callstack 0
   382   000001                     fputc@c:
   383                           	callstack 0
   384   000001                     strcpy@dest:
   385                           	callstack 0
   386   000001                     ___fleq@ff1:
   387                           	callstack 0
   388   000001                     ___flneg@f1:
   389                           	callstack 0
   390   000001                     ___fltol@f1:
   391                           	callstack 0
   392   000001                     ___fladd@b:
   393                           	callstack 0
   394   000001                     ___fldiv@b:
   395                           	callstack 0
   396   000001                     ___xxtofl@val:
   397                           	callstack 0
   398   000001                     ___fpclassifyf@x:
   399                           	callstack 0
   400   000001                     labs@a:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x0
   404   000001                     	ds	1
   405   000002                     CMD_LCD@CMD:
   406                           	callstack 0
   407   000002                     DATA_LCD@CMD:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x1
   411   000002                     	ds	1
   412   000003                     ??_isdigit:
   413   000003                     ??_isspace:
   414   000003                     ??_adc_read:
   415   000003                     LCD_WRITE@data:
   416                           	callstack 0
   417   000003                     ___wmul@multiplicand:
   418                           	callstack 0
   419   000003                     memcpy@s1:
   420                           	callstack 0
   421   000003                     fputc@fp:
   422                           	callstack 0
   423   000003                     strcpy@src:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427   000003                     	ds	2
   428   000005                     ??_fputc:
   429   000005                     ??___fpclassifyf:
   430   000005                     ??_labs:
   431   000005                     ??___fltol:
   432   000005                     ??___xxtofl:
   433   000005                     adc_read@channel:
   434                           	callstack 0
   435   000005                     _isspace$1016:
   436                           	callstack 0
   437   000005                     ___wmul@product:
   438                           	callstack 0
   439   000005                     memcpy@n:
   440                           	callstack 0
   441   000005                     strcpy@s:
   442                           	callstack 0
   443   000005                     ___fleq@ff2:
   444                           	callstack 0
   445   000005                     ___fladd@a:
   446                           	callstack 0
   447   000005                     ___fldiv@a:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x4
   451   000005                     	ds	2
   452   000007                     ?_atoi:
   453                           	callstack 0
   454   000007                     atoi@s:
   455                           	callstack 0
   456   000007                     memcpy@d:
   457                           	callstack 0
   458   000007                     strcpy@d:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x6
   462   000007                     	ds	2
   463   000009                     ??___fladd:
   464   000009                     ??___fldiv:
   465   000009                     ??_atoi:
   466   000009                     ??___fleq:
   467   000009                     ___fltol@sign1:
   468                           	callstack 0
   469   000009                     ___xxtofl@sign:
   470                           	callstack 0
   471   000009                     ___fpclassifyf@e:
   472                           	callstack 0
   473   000009                     memcpy@s:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x8
   477   000009                     	ds	1
   478   00000A                     ___fltol@exp1:
   479                           	callstack 0
   480   00000A                     ___xxtofl@exp:
   481                           	callstack 0
   482   00000A                     fputs@s:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x9
   486   00000A                     	ds	1
   487   00000B                     memcpy@tmp:
   488                           	callstack 0
   489   00000B                     ___xxtofl@arg:
   490                           	callstack 0
   491   00000B                     ___fpclassifyf@u:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0xA
   495   00000B                     	ds	1
   496   00000C                     atoi@neg:
   497                           	callstack 0
   498   00000C                     fputs@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xB
   502   00000C                     	ds	1
   503   00000D                     ___fladd@signs:
   504                           	callstack 0
   505   00000D                     ___fldiv@rem:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0xC
   509   00000D                     	ds	1
   510   00000E                     ___fladd@aexp:
   511                           	callstack 0
   512   00000E                     fputs@c:
   513                           	callstack 0
   514   00000E                     atoi@n:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xD
   518   00000E                     	ds	1
   519   00000F                     ?___flmul:
   520                           	callstack 0
   521   00000F                     ___fladd@bexp:
   522                           	callstack 0
   523   00000F                     fputs@i:
   524                           	callstack 0
   525   00000F                     ___flmul@b:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0xE
   529   00000F                     	ds	1
   530   000010                     ___fladd@grs:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0xF
   534   000010                     	ds	1
   535   000011                     ___fldiv@sign:
   536                           	callstack 0
   537   000011                     pad@fp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x10
   541   000011                     	ds	1
   542   000012                     ___fldiv@new_exp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x11
   546   000012                     	ds	1
   547   000013                     pad@buf:
   548                           	callstack 0
   549   000013                     ___flmul@a:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x12
   553   000013                     	ds	1
   554   000014                     ___fldiv@grs:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x13
   558   000014                     	ds	1
   559   000015                     pad@p:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x14
   563   000015                     	ds	2
   564   000017                     ??___flmul:
   565   000017                     ??_pad:
   566                           
   567                           ; 1 bytes @ 0x16
   568   000017                     	ds	1
   569   000018                     ___fldiv@bexp:
   570                           	callstack 0
   571   000018                     pad@i:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x17
   575   000018                     	ds	1
   576   000019                     ___fldiv@aexp:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x18
   580   000019                     	ds	1
   581   00001A                     ?_floorf:
   582                           	callstack 0
   583   00001A                     pad@w:
   584                           	callstack 0
   585   00001A                     floorf@x:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x19
   589   00001A                     	ds	1
   590   00001B                     ___flmul@sign:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x1A
   594   00001B                     	ds	1
   595   00001C                     ___flmul@grs:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x1B
   599   00001C                     	ds	2
   600   00001E                     ??_floorf:
   601                           
   602                           ; 1 bytes @ 0x1D
   603   00001E                     	ds	2
   604   000020                     ___flmul@aexp:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x1F
   608   000020                     	ds	1
   609   000021                     ___flmul@bexp:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x20
   613   000021                     	ds	1
   614   000022                     ___flmul@prod:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x21
   618   000022                     	ds	2
   619   000024                     floorf@m:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x23
   623   000024                     	ds	2
   624   000026                     ___flmul@temp:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x25
   628   000026                     	ds	2
   629   000028                     ?___flsub:
   630                           	callstack 0
   631   000028                     floorf@e:
   632                           	callstack 0
   633   000028                     ___flge@ff1:
   634                           	callstack 0
   635   000028                     ___flsub@b:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x27
   639   000028                     	ds	2
   640   00002A                     floorf@u:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x29
   644   00002A                     	ds	2
   645   00002C                     ___flge@ff2:
   646                           	callstack 0
   647   00002C                     ___flsub@a:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x2B
   651   00002C                     	ds	4
   652   000030                     ??___flge:
   653                           
   654                           ; 1 bytes @ 0x2F
   655   000030                     	ds	4
   656   000034                     efgtoa@fp:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x33
   660   000034                     	ds	2
   661   000036                     efgtoa@f:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x35
   665   000036                     	ds	4
   666   00003A                     efgtoa@c:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x39
   670   00003A                     	ds	1
   671   00003B                     ??_efgtoa:
   672                           
   673                           ; 1 bytes @ 0x3A
   674   00003B                     	ds	2
   675   00003D                     ??_vfpfcnvrt:
   676                           
   677                           ; 1 bytes @ 0x3C
   678   00003D                     	ds	3
   679   000040                     vfpfcnvrt@convarg:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x3F
   683   000040                     	ds	8
   684   000048                     vfpfcnvrt@c:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x47
   688   000048                     	ds	1
   689   000049                     vfpfcnvrt@cp:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x48
   693   000049                     	ds	2
   694   00004B                     vfprintf@cfmt:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x4A
   698   00004B                     	ds	2
   699   00004D                     sprintf@ap:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x4C
   703   00004D                     	ds	2
   704   00004F                     sprintf@f:
   705                           	callstack 0
   706                           
   707                           ; 11 bytes @ 0x4E
   708   00004F                     	ds	11
   709   00005A                     ??_main:
   710                           
   711                           ; 1 bytes @ 0x59
   712   00005A                     	ds	1
   713                           
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 38 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  voltage_str    10   64[BANK0 ] unsigned char [10]
   724 ;;  voltage         4   74[BANK0 ] float 
   725 ;;  data            2   78[BANK0 ] unsigned short 
   726 ;;  new             1    0        unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   736 ;;      Params:         0       0       0       0       0       0       0       0       0
   737 ;;      Locals:         0      16       0       0       0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0       0       0       0       0
   739 ;;      Totals:         1      16       0       0       0       0       0       0       0
   740 ;;Total ram usage:       17 bytes
   741 ;; Hardware stack levels required when called: 8
   742 ;; This function calls:
   743 ;;		_CMD_LCD
   744 ;;		_INIT_LCD
   745 ;;		_LCD_WRITE
   746 ;;		___flmul
   747 ;;		___xxtofl
   748 ;;		_adc_read
   749 ;;		_config
   750 ;;		_sprintf
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text0
   757   0029BC                     __ptext0:
   758                           	callstack 0
   759   0029BC                     _main:
   760                           	callstack 23
   761   0029BC                     
   762                           ;main.c: 39:    unsigned short data;;main.c: 40:    TRISBbits.RB1 = 0;
   763   0029BC  9293               	bcf	147,1,c	;volatile
   764   0029BE                     
   765                           ;main.c: 41:    INIT_LCD();
   766   0029BE  EC4E  F018         	call	_INIT_LCD	;wreg free
   767                           
   768                           ;main.c: 42:    config();
   769   0029C2  EC3C  F018         	call	_config	;wreg free
   770   0029C6                     l3443:
   771                           
   772                           ;main.c: 48:         data = adc_read(0);
   773   0029C6  0E00               	movlw	0
   774   0029C8  ECF4  F016         	call	_adc_read
   775   0029CC  C001  F0AE         	movff	?_adc_read,main@data
   776   0029D0  C002  F0AF         	movff	?_adc_read+1,main@data+1
   777                           
   778                           ;main.c: 49:        while (data > 10 ) {
   779   0029D4  EF39  F015         	goto	l3461
   780   0029D8                     l3445:
   781                           
   782                           ; BSR set to: 0
   783                           ;main.c: 50:         voltage = (float)data * (5.0f / 1023.0f);
   784   0029D8  C0AE  F001         	movff	main@data,___xxtofl@val
   785   0029DC  C0AF  F002         	movff	main@data+1,___xxtofl@val+1
   786   0029E0  6A03               	clrf	(___xxtofl@val+2)^0,c
   787   0029E2  6A04               	clrf	(___xxtofl@val+3)^0,c
   788   0029E4  0E00               	movlw	0
   789   0029E6  ECDB  F011         	call	___xxtofl
   790   0029EA  C001  F00F         	movff	?___xxtofl,___flmul@b
   791   0029EE  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   792   0029F2  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   793   0029F6  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   794   0029FA  0E0A               	movlw	10
   795   0029FC  6E13               	movwf	___flmul@a^0,c
   796   0029FE  0E28               	movlw	40
   797   002A00  6E14               	movwf	(___flmul@a+1)^0,c
   798   002A02  0EA0               	movlw	160
   799   002A04  6E15               	movwf	(___flmul@a+2)^0,c
   800   002A06  0E3B               	movlw	59
   801   002A08  6E16               	movwf	(___flmul@a+3)^0,c
   802   002A0A  EC66  F00B         	call	___flmul	;wreg free
   803   002A0E  C00F  F0AA         	movff	?___flmul,main@voltage
   804   002A12  C010  F0AB         	movff	?___flmul+1,main@voltage+1
   805   002A16  C011  F0AC         	movff	?___flmul+2,main@voltage+2
   806   002A1A  C012  F0AD         	movff	?___flmul+3,main@voltage+3
   807   002A1E                     
   808                           ;main.c: 51:         sprintf(voltage_str, "%.2fV", voltage);
   809   002A1E  0EA0               	movlw	low main@voltage_str
   810   002A20  0100               	movlb	0	; () banked
   811   002A22  6F98               	movwf	sprintf@s& (0+255),b
   812   002A24  0E00               	movlw	high main@voltage_str
   813   002A26  6F99               	movwf	(sprintf@s+1)& (0+255),b
   814   002A28  0E01               	movlw	low STR_1
   815   002A2A  6F9A               	movwf	sprintf@fmt& (0+255),b
   816   002A2C  0E08               	movlw	high STR_1
   817   002A2E  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
   818   002A30  C0AA  F09C         	movff	main@voltage,?_sprintf+4
   819   002A34  C0AB  F09D         	movff	main@voltage+1,?_sprintf+5
   820   002A38  C0AC  F09E         	movff	main@voltage+2,?_sprintf+6
   821   002A3C  C0AD  F09F         	movff	main@voltage+3,?_sprintf+7
   822   002A40  EC7A  F016         	call	_sprintf	;wreg free
   823   002A44                     
   824                           ;main.c: 54:            LCD_WRITE(voltage_str);
   825   002A44  0EA0               	movlw	low main@voltage_str
   826   002A46  6E03               	movwf	LCD_WRITE@data^0,c
   827   002A48  0E00               	movlw	high main@voltage_str
   828   002A4A  6E04               	movwf	(LCD_WRITE@data+1)^0,c
   829   002A4C  ECBC  F017         	call	_LCD_WRITE	;wreg free
   830   002A50                     
   831                           ;main.c: 55:             PORTBbits.RB1 = 1;
   832   002A50  8281               	bsf	129,1,c	;volatile
   833   002A52                     
   834                           ;main.c: 56:             _delay((unsigned long)((5)*(8000000/4000.0)));
   835   002A52  0E0D               	movlw	13
   836   002A54  6E5A               	movwf	??_main^0,c
   837   002A56  0EFC               	movlw	252
   838   002A58                     u3677:
   839   002A58  2EE8               	decfsz	wreg,f,c
   840   002A5A  D7FE               	bra	u3677
   841   002A5C  2E5A               	decfsz	??_main^0,f,c
   842   002A5E  D7FC               	bra	u3677
   843   002A60                     
   844                           ;main.c: 57:             PORTBbits.RB1 = 0;
   845   002A60  9281               	bcf	129,1,c	;volatile
   846   002A62                     
   847                           ;main.c: 58:             CMD_LCD(0b00000001);
   848   002A62  0E01               	movlw	1
   849   002A64  EC14  F018         	call	_CMD_LCD
   850   002A68                     
   851                           ;main.c: 59:             data=0;
   852   002A68  0E00               	movlw	0
   853   002A6A  0100               	movlb	0	; () banked
   854   002A6C  6FAF               	movwf	(main@data+1)& (0+255),b
   855   002A6E  0E00               	movlw	0
   856   002A70  6FAE               	movwf	main@data& (0+255),b
   857   002A72                     l3461:
   858                           
   859                           ;main.c: 49:        while (data > 10 ) {
   860   002A72  0100               	movlb	0	; () banked
   861   002A74  51AF               	movf	(main@data+1)& (0+255),w,b
   862   002A76  E107               	bnz	u3661
   863   002A78  0E0B               	movlw	11
   864   002A7A  5DAE               	subwf	main@data& (0+255),w,b
   865   002A7C  B0D8               	btfsc	status,0,c
   866   002A7E  EF43  F015         	goto	u3661
   867   002A82  EF45  F015         	goto	u3660
   868   002A86                     u3661:
   869   002A86  EFEC  F014         	goto	l3445
   870   002A8A                     u3660:
   871   002A8A                     
   872                           ; BSR set to: 0
   873                           ;main.c: 62:         _delay((unsigned long)((5)*(8000000/4000.0)));
   874   002A8A  0E0D               	movlw	13
   875   002A8C  6E5A               	movwf	??_main^0,c
   876   002A8E  0EFC               	movlw	252
   877   002A90                     u3687:
   878   002A90  2EE8               	decfsz	wreg,f,c
   879   002A92  D7FE               	bra	u3687
   880   002A94  2E5A               	decfsz	??_main^0,f,c
   881   002A96  D7FC               	bra	u3687
   882   002A98  EFE3  F014         	goto	l3443
   883   002A9C  EF00  F000         	goto	start
   884   002AA0                     __end_of_main:
   885                           	callstack 0
   886                           
   887 ;; *************** function _sprintf *****************
   888 ;; Defined at:
   889 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  s               2   56[BANK0 ] PTR unsigned char 
   892 ;;		 -> main@voltage_str(10), 
   893 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
   894 ;;		 -> STR_1(6), 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  f              11   78[COMRAM] struct _IO_FILE
   897 ;;  ap              2   76[COMRAM] PTR void [1]
   898 ;;		 -> ?_sprintf(2), 
   899 ;;  ret             2    0        int 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2   56[BANK0 ] int 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         0       8       0       0       0       0       0       0       0
   910 ;;      Locals:        13       0       0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0
   912 ;;      Totals:        13       8       0       0       0       0       0       0       0
   913 ;;Total ram usage:       21 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 7
   916 ;; This function calls:
   917 ;;		_vfprintf
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text1
   924   002CF4                     __ptext1:
   925                           	callstack 0
   926   002CF4                     _sprintf:
   927                           	callstack 23
   928   002CF4  0E9C               	movlw	low (?_sprintf+4)
   929   002CF6  6E4D               	movwf	sprintf@ap^0,c
   930   002CF8  0E00               	movlw	high (?_sprintf+4)
   931   002CFA  6E4E               	movwf	(sprintf@ap+1)^0,c
   932   002CFC  C098  F04F         	movff	sprintf@s,sprintf@f
   933   002D00  C099  F050         	movff	sprintf@s+1,sprintf@f+1
   934   002D04  0E00               	movlw	0
   935   002D06  6E53               	movwf	(sprintf@f+4)^0,c
   936   002D08  0E00               	movlw	0
   937   002D0A  6E52               	movwf	(sprintf@f+3)^0,c
   938   002D0C  0E00               	movlw	0
   939   002D0E  6E59               	movwf	(sprintf@f+10)^0,c
   940   002D10  0E00               	movlw	0
   941   002D12  6E58               	movwf	(sprintf@f+9)^0,c
   942   002D14  0E4F               	movlw	low sprintf@f
   943   002D16  0100               	movlb	0	; () banked
   944   002D18  6F92               	movwf	vfprintf@fp& (0+255),b
   945   002D1A  0E00               	movlw	high sprintf@f
   946   002D1C  6F93               	movwf	(vfprintf@fp+1)& (0+255),b
   947   002D1E  C09A  F094         	movff	sprintf@fmt,vfprintf@fmt
   948   002D22  C09B  F095         	movff	sprintf@fmt+1,vfprintf@fmt+1
   949   002D26  0E4D               	movlw	low sprintf@ap
   950   002D28  6F96               	movwf	vfprintf@ap& (0+255),b
   951   002D2A  0E00               	movlw	high sprintf@ap
   952   002D2C  6F97               	movwf	(vfprintf@ap+1)& (0+255),b
   953   002D2E  ECA3  F016         	call	_vfprintf	;wreg free
   954   002D32  5052               	movf	(sprintf@f+3)^0,w,c
   955   002D34  0100               	movlb	0	; () banked
   956   002D36  2598               	addwf	sprintf@s& (0+255),w,b
   957   002D38  6ED9               	movwf	fsr2l,c
   958   002D3A  5053               	movf	(sprintf@f+4)^0,w,c
   959   002D3C  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
   960   002D3E  6EDA               	movwf	fsr2h,c
   961   002D40  0E00               	movlw	0
   962   002D42  6EDF               	movwf	indf2,c
   963   002D44                     
   964                           ; BSR set to: 0
   965   002D44  0012               	return		;funcret
   966   002D46                     __end_of_sprintf:
   967                           	callstack 0
   968                           
   969 ;; *************** function _vfprintf *****************
   970 ;; Defined at:
   971 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
   974 ;;		 -> sprintf@f(11), 
   975 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
   976 ;;		 -> STR_1(6), 
   977 ;;  ap              2   54[BANK0 ] PTR PTR void 
   978 ;;		 -> sprintf@ap(2), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  cfmt            2   74[COMRAM] PTR unsigned char 
   981 ;;		 -> STR_1(6), 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2   50[BANK0 ] int 
   984 ;; Registers used:
   985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         0       6       0       0       0       0       0       0       0
   992 ;;      Locals:         2       0       0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0
   994 ;;      Totals:         2       6       0       0       0       0       0       0       0
   995 ;;Total ram usage:        8 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 6
   998 ;; This function calls:
   999 ;;		_vfpfcnvrt
  1000 ;; This function is called by:
  1001 ;;		_sprintf
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text2
  1006   002D46                     __ptext2:
  1007                           	callstack 0
  1008   002D46                     _vfprintf:
  1009                           	callstack 23
  1010   002D46                     
  1011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1012   002D46  C094  F04B         	movff	vfprintf@fmt,vfprintf@cfmt
  1013   002D4A  C095  F04C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1014                           
  1015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1016   002D4E  EFB8  F016         	goto	l3333
  1017   002D52                     l3331:
  1018                           
  1019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1020   002D52  C092  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1021   002D56  C093  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1022   002D5A  0E4B               	movlw	low vfprintf@cfmt
  1023   002D5C  0100               	movlb	0	; () banked
  1024   002D5E  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1025   002D60  0E00               	movlw	high vfprintf@cfmt
  1026   002D62  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1027   002D64  C096  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1028   002D68  C097  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1029   002D6C  EC48  F00F         	call	_vfpfcnvrt	;wreg free
  1030   002D70                     l3333:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1033   002D70  C04B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1034   002D74  C04C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1035   002D78                     	if	0	;tblptru may be non-zero
  1036   002D78                     	endif
  1037   002D78                     	if	0	;tblptru may be non-zero
  1038   002D78                     	endif
  1039   002D78  0008               	tblrd		*
  1040   002D7A  50F5               	movf	tablat,w,c
  1041   002D7C  0900               	iorlw	0
  1042   002D7E  A4D8               	btfss	status,2,c
  1043   002D80  EFC4  F016         	goto	u3531
  1044   002D84  EFC6  F016         	goto	u3530
  1045   002D88                     u3531:
  1046   002D88  EFA9  F016         	goto	l3331
  1047   002D8C                     u3530:
  1048   002D8C                     
  1049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1050   002D8C  0E00               	movlw	0
  1051   002D8E  0100               	movlb	0	; () banked
  1052   002D90  6F93               	movwf	(?_vfprintf+1)& (0+255),b
  1053   002D92  0E00               	movlw	0
  1054   002D94  6F92               	movwf	?_vfprintf& (0+255),b
  1055   002D96                     
  1056                           ; BSR set to: 0
  1057   002D96  0012               	return		;funcret
  1058   002D98                     __end_of_vfprintf:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _vfpfcnvrt *****************
  1062 ;; Defined at:
  1063 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1066 ;;		 -> sprintf@f(11), 
  1067 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1068 ;;		 -> vfprintf@cfmt(2), 
  1069 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1070 ;;		 -> sprintf@ap(2), 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  convarg         8   63[COMRAM] struct .
  1073 ;;  cp              2   72[COMRAM] PTR unsigned char 
  1074 ;;		 -> STR_1(6), 
  1075 ;;  i               2    0        int 
  1076 ;;  done            2    0        int 
  1077 ;;  c               1   71[COMRAM] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         0       6       0       0       0       0       0       0       0
  1088 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1090 ;;      Totals:        14       6       0       0       0       0       0       0       0
  1091 ;;Total ram usage:       20 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 5
  1094 ;; This function calls:
  1095 ;;		_atoi
  1096 ;;		_efgtoa
  1097 ;;		_fputc
  1098 ;;		_isdigit
  1099 ;; This function is called by:
  1100 ;;		_vfprintf
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text3
  1105   001E90                     __ptext3:
  1106                           	callstack 0
  1107   001E90                     _vfpfcnvrt:
  1108                           	callstack 23
  1109   001E90                     
  1110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1111   001E90  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1112   001E94  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1113   001E98  CFDE FFF6          	movff	postinc2,tblptrl
  1114   001E9C  CFDD FFF7          	movff	postdec2,tblptrh
  1115   001EA0                     	if	0	;tblptru may be non-zero
  1116   001EA0                     	endif
  1117   001EA0                     	if	0	;tblptru may be non-zero
  1118   001EA0                     	endif
  1119   001EA0  0008               	tblrd		*
  1120   001EA2  50F5               	movf	tablat,w,c
  1121   001EA4  0A25               	xorlw	37
  1122   001EA6  A4D8               	btfss	status,2,c
  1123   001EA8  EF58  F00F         	goto	u3481
  1124   001EAC  EF5A  F00F         	goto	u3480
  1125   001EB0                     u3481:
  1126   001EB0  EFBD  F010         	goto	l3291
  1127   001EB4                     u3480:
  1128   001EB4                     
  1129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1130   001EB4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1131   001EB8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1132   001EBC  2ADE               	incf	postinc2,f,c
  1133   001EBE  0E00               	movlw	0
  1134   001EC0  22DD               	addwfc	postdec2,f,c
  1135   001EC2                     
  1136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1137   001EC2  0E00               	movlw	0
  1138   001EC4  6E5C               	movwf	(_width+1)^0,c
  1139   001EC6  0E00               	movlw	0
  1140   001EC8  6E5B               	movwf	_width^0,c
  1141   001ECA  C05B  F0B8         	movff	_width,_flags
  1142   001ECE                     
  1143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1144   001ECE  685D               	setf	_prec^0,c
  1145   001ED0  685E               	setf	(_prec+1)^0,c
  1146   001ED2                     
  1147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  1148   001ED2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1149   001ED6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1150   001EDA  CFDE FFF6          	movff	postinc2,tblptrl
  1151   001EDE  CFDD FFF7          	movff	postdec2,tblptrh
  1152   001EE2                     	if	0	;tblptru may be non-zero
  1153   001EE2                     	endif
  1154   001EE2                     	if	0	;tblptru may be non-zero
  1155   001EE2                     	endif
  1156   001EE2  0008               	tblrd		*
  1157   001EE4  50F5               	movf	tablat,w,c
  1158   001EE6  0A2E               	xorlw	46
  1159   001EE8  A4D8               	btfss	status,2,c
  1160   001EEA  EF79  F00F         	goto	u3491
  1161   001EEE  EF7B  F00F         	goto	u3490
  1162   001EF2                     u3491:
  1163   001EF2  EFE8  F00F         	goto	l3253
  1164   001EF6                     u3490:
  1165   001EF6                     
  1166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  1167   001EF6  0E00               	movlw	0
  1168   001EF8  6E5E               	movwf	(_prec+1)^0,c
  1169   001EFA  0E00               	movlw	0
  1170   001EFC  6E5D               	movwf	_prec^0,c
  1171   001EFE                     
  1172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  1173   001EFE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1174   001F02  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1175   001F06  2ADE               	incf	postinc2,f,c
  1176   001F08  0E00               	movlw	0
  1177   001F0A  22DD               	addwfc	postdec2,f,c
  1178   001F0C                     
  1179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  1180   001F0C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1181   001F10  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1182   001F14  CFDE FFF6          	movff	postinc2,tblptrl
  1183   001F18  CFDD FFF7          	movff	postdec2,tblptrh
  1184   001F1C                     	if	0	;tblptru may be non-zero
  1185   001F1C                     	endif
  1186   001F1C                     	if	0	;tblptru may be non-zero
  1187   001F1C                     	endif
  1188   001F1C  0008               	tblrd		*
  1189   001F1E  50F5               	movf	tablat,w,c
  1190   001F20  0A2A               	xorlw	42
  1191   001F22  A4D8               	btfss	status,2,c
  1192   001F24  EF96  F00F         	goto	u3501
  1193   001F28  EF98  F00F         	goto	u3500
  1194   001F2C                     u3501:
  1195   001F2C  EFB5  F00F         	goto	l3245
  1196   001F30                     u3500:
  1197   001F30                     
  1198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  1199   001F30  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1200   001F34  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1201   001F38  2ADE               	incf	postinc2,f,c
  1202   001F3A  0E00               	movlw	0
  1203   001F3C  22DD               	addwfc	postdec2,f,c
  1204                           
  1205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1206   001F3E  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1207   001F42  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1208   001F46  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1209   001F4A  0E02               	movlw	2
  1210   001F4C  26DE               	addwf	postinc2,f,c
  1211   001F4E  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1212   001F52  0E00               	movlw	0
  1213   001F54  22DD               	addwfc	postdec2,f,c
  1214   001F56  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1215   001F5A  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1216   001F5E  CFDE F05D          	movff	postinc2,_prec
  1217   001F62  CFDD F05E          	movff	postdec2,_prec+1
  1218                           
  1219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  1220   001F66  EFE8  F00F         	goto	l3253
  1221   001F6A                     l3245:
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  1224   001F6A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1225   001F6E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1226   001F72  CFDE F007          	movff	postinc2,atoi@s
  1227   001F76  CFDD F008          	movff	postdec2,atoi@s+1
  1228   001F7A  ECB5  F012         	call	_atoi	;wreg free
  1229   001F7E  C007  F05D         	movff	?_atoi,_prec
  1230   001F82  C008  F05E         	movff	?_atoi+1,_prec+1
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1233   001F86  EFCC  F00F         	goto	l3251
  1234   001F8A                     l3247:
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  1237   001F8A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1238   001F8E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1239   001F92  2ADE               	incf	postinc2,f,c
  1240   001F94  0E00               	movlw	0
  1241   001F96  22DD               	addwfc	postdec2,f,c
  1242   001F98                     l3251:
  1243   001F98  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1244   001F9C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1245   001FA0  CFDE FFF6          	movff	postinc2,tblptrl
  1246   001FA4  CFDD FFF7          	movff	postdec2,tblptrh
  1247   001FA8                     	if	0	;tblptru may be non-zero
  1248   001FA8                     	endif
  1249   001FA8                     	if	0	;tblptru may be non-zero
  1250   001FA8                     	endif
  1251   001FA8  0008               	tblrd		*
  1252   001FAA  CFF5 F03D          	movff	tablat,??_vfpfcnvrt
  1253   001FAE  0ED0               	movlw	208
  1254   001FB0  243D               	addwf	??_vfpfcnvrt^0,w,c
  1255   001FB2  6E3E               	movwf	(??_vfpfcnvrt+1)^0,c
  1256   001FB4  6A3F               	clrf	(??_vfpfcnvrt+2)^0,c
  1257   001FB6  0EFF               	movlw	255
  1258   001FB8  223F               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1259   001FBA  503F               	movf	(??_vfpfcnvrt+2)^0,w,c
  1260   001FBC  E109               	bnz	u3510
  1261   001FBE  0E0A               	movlw	10
  1262   001FC0  5C3E               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1263   001FC2  A0D8               	btfss	status,0,c
  1264   001FC4  EFE6  F00F         	goto	u3511
  1265   001FC8  EFE8  F00F         	goto	u3510
  1266   001FCC                     u3511:
  1267   001FCC  EFC5  F00F         	goto	l3247
  1268   001FD0                     u3510:
  1269   001FD0                     l3253:
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1272   001FD0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1273   001FD4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1274   001FD8  CFDE F049          	movff	postinc2,vfpfcnvrt@cp
  1275   001FDC  CFDD F04A          	movff	postdec2,vfpfcnvrt@cp+1
  1276   001FE0                     
  1277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1278   001FE0  C049  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1279   001FE4  C04A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1280   001FE8                     	if	0	;tblptru may be non-zero
  1281   001FE8                     	endif
  1282   001FE8                     	if	0	;tblptru may be non-zero
  1283   001FE8                     	endif
  1284   001FE8  0008               	tblrd		*
  1285   001FEA  CFF5 F048          	movff	tablat,vfpfcnvrt@c
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1288   001FEE  EF05  F010         	goto	l3265
  1289   001FF2                     l3257:
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1292   001FF2  4A49               	infsnz	vfpfcnvrt@cp^0,f,c
  1293   001FF4  2A4A               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1296   001FF6  EF1E  F010         	goto	l3267
  1297   001FFA                     l3259:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1300   001FFA  0E6C               	movlw	108
  1301   001FFC  6E48               	movwf	vfpfcnvrt@c^0,c
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1304   001FFE  EF1E  F010         	goto	l3267
  1305   002002                     l3261:
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1308   002002  0E00               	movlw	0
  1309   002004  6E48               	movwf	vfpfcnvrt@c^0,c
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1312   002006  EF1E  F010         	goto	l3267
  1313   00200A                     l3265:
  1314   00200A  5048               	movf	vfpfcnvrt@c^0,w,c
  1315   00200C  6E3D               	movwf	??_vfpfcnvrt^0,c
  1316   00200E  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1317                           
  1318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 1, Range of values is 0 to 0
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte            4     3 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325   002010  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1326   002012  0A00               	xorlw	0	; case 0
  1327   002014  B4D8               	btfsc	status,2,c
  1328   002016  EF0F  F010         	goto	l3545
  1329   00201A  EF01  F010         	goto	l3261
  1330   00201E                     l3545:
  1331                           
  1332                           ; Switch size 1, requested type "simple"
  1333                           ; Number of cases is 3, Range of values is 76 to 108
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte           10     6 (average)
  1337                           ;	Chosen strategy is simple_byte
  1338   00201E  503D               	movf	??_vfpfcnvrt^0,w,c
  1339   002020  0A4C               	xorlw	76	; case 76
  1340   002022  B4D8               	btfsc	status,2,c
  1341   002024  EFF9  F00F         	goto	l3257
  1342   002028  0A2A               	xorlw	42	; case 102
  1343   00202A  B4D8               	btfsc	status,2,c
  1344   00202C  EFFD  F00F         	goto	l3259
  1345   002030  0A0A               	xorlw	10	; case 108
  1346   002032  B4D8               	btfsc	status,2,c
  1347   002034  EFF9  F00F         	goto	l3257
  1348   002038  EF01  F010         	goto	l3261
  1349   00203C                     l3267:
  1350   00203C  C049  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1351   002040  C04A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1352   002044                     	if	0	;tblptru may be non-zero
  1353   002044                     	endif
  1354   002044                     	if	0	;tblptru may be non-zero
  1355   002044                     	endif
  1356   002044  0008               	tblrd		*
  1357   002046  50F5               	movf	tablat,w,c
  1358   002048  0A66               	xorlw	102
  1359   00204A  A4D8               	btfss	status,2,c
  1360   00204C  EF2A  F010         	goto	u3521
  1361   002050  EF2C  F010         	goto	u3520
  1362   002054                     u3521:
  1363   002054  EFB4  F010         	goto	l3287
  1364   002058                     u3520:
  1365   002058  EF62  F010         	goto	l3275
  1366   00205C                     l3269:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1369   00205C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1370   002060  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1371   002064  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1372   002068  0E04               	movlw	4
  1373   00206A  26DE               	addwf	postinc2,f,c
  1374   00206C  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1375   002070  0E00               	movlw	0
  1376   002072  22DD               	addwfc	postdec2,f,c
  1377   002074  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1378   002078  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1379   00207C  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg
  1380   002080  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+1
  1381   002084  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+2
  1382   002088  CFDE F043          	movff	postinc2,vfpfcnvrt@convarg+3
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1385   00208C  EF77  F010         	goto	l3277
  1386   002090                     l3271:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1389   002090  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1390   002094  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1391   002098  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1392   00209C  0E04               	movlw	4
  1393   00209E  26DE               	addwf	postinc2,f,c
  1394   0020A0  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1395   0020A4  0E00               	movlw	0
  1396   0020A6  22DD               	addwfc	postdec2,f,c
  1397   0020A8  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1398   0020AC  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1399   0020B0  CFDE F040          	movff	postinc2,vfpfcnvrt@convarg
  1400   0020B4  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg+1
  1401   0020B8  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+2
  1402   0020BC  CFDE F043          	movff	postinc2,vfpfcnvrt@convarg+3
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1405   0020C0  EF77  F010         	goto	l3277
  1406   0020C4                     l3275:
  1407   0020C4  5048               	movf	vfpfcnvrt@c^0,w,c
  1408   0020C6  6E3D               	movwf	??_vfpfcnvrt^0,c
  1409   0020C8  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1410                           
  1411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 1, Range of values is 0 to 0
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte            4     3 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418   0020CA  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1419   0020CC  0A00               	xorlw	0	; case 0
  1420   0020CE  B4D8               	btfsc	status,2,c
  1421   0020D0  EF6C  F010         	goto	l3547
  1422   0020D4  EF77  F010         	goto	l3277
  1423   0020D8                     l3547:
  1424                           
  1425                           ; Switch size 1, requested type "simple"
  1426                           ; Number of cases is 2, Range of values is 76 to 108
  1427                           ; switch strategies available:
  1428                           ; Name         Instructions Cycles
  1429                           ; simple_byte            7     4 (average)
  1430                           ;	Chosen strategy is simple_byte
  1431   0020D8  503D               	movf	??_vfpfcnvrt^0,w,c
  1432   0020DA  0A4C               	xorlw	76	; case 76
  1433   0020DC  B4D8               	btfsc	status,2,c
  1434   0020DE  EF48  F010         	goto	l3271
  1435   0020E2  0A20               	xorlw	32	; case 108
  1436   0020E4  B4D8               	btfsc	status,2,c
  1437   0020E6  EF2E  F010         	goto	l3269
  1438   0020EA  EF77  F010         	goto	l3277
  1439   0020EE                     l3277:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1442   0020EE  0E01               	movlw	1
  1443   0020F0  2449               	addwf	vfpfcnvrt@cp^0,w,c
  1444   0020F2  6E3D               	movwf	??_vfpfcnvrt^0,c
  1445   0020F4  0E00               	movlw	0
  1446   0020F6  204A               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1447   0020F8  6E3E               	movwf	(??_vfpfcnvrt+1)^0,c
  1448   0020FA  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449   0020FE  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450   002102  C03D  FFDE         	movff	??_vfpfcnvrt,postinc2
  1451   002106  C03E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1452                           
  1453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1454   00210A  EF9E  F010         	goto	l3285
  1455   00210E                     l3279:
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1458   00210E  C08C  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1459   002112  C08D  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1460   002116  C040  F036         	movff	vfpfcnvrt@convarg,efgtoa@f
  1461   00211A  C041  F037         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1462   00211E  C042  F038         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1463   002122  C043  F039         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1464   002126  C049  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1465   00212A  C04A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1466   00212E                     	if	0	;tblptru may be non-zero
  1467   00212E                     	endif
  1468   00212E                     	if	0	;tblptru may be non-zero
  1469   00212E                     	endif
  1470   00212E  0008               	tblrd		*
  1471   002130  CFF5 F03A          	movff	tablat,efgtoa@c
  1472   002134  EC08  F004         	call	_efgtoa	;wreg free
  1473   002138  EFD1  F010         	goto	l863
  1474   00213C                     l3285:
  1475   00213C  C049  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1476   002140  C04A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1477   002144                     	if	0	;tblptru may be non-zero
  1478   002144                     	endif
  1479   002144                     	if	0	;tblptru may be non-zero
  1480   002144                     	endif
  1481   002144  0008               	tblrd		*
  1482   002146  50F5               	movf	tablat,w,c
  1483   002148  6E3D               	movwf	??_vfpfcnvrt^0,c
  1484   00214A  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1485                           
  1486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1487                           ; Switch size 1, requested type "simple"
  1488                           ; Number of cases is 1, Range of values is 0 to 0
  1489                           ; switch strategies available:
  1490                           ; Name         Instructions Cycles
  1491                           ; simple_byte            4     3 (average)
  1492                           ;	Chosen strategy is simple_byte
  1493   00214C  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1494   00214E  0A00               	xorlw	0	; case 0
  1495   002150  B4D8               	btfsc	status,2,c
  1496   002152  EFAD  F010         	goto	l3549
  1497   002156  EFB4  F010         	goto	l3287
  1498   00215A                     l3549:
  1499                           
  1500                           ; Switch size 1, requested type "simple"
  1501                           ; Number of cases is 1, Range of values is 102 to 102
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte            4     3 (average)
  1505                           ;	Chosen strategy is simple_byte
  1506   00215A  503D               	movf	??_vfpfcnvrt^0,w,c
  1507   00215C  0A66               	xorlw	102	; case 102
  1508   00215E  B4D8               	btfsc	status,2,c
  1509   002160  EF87  F010         	goto	l3279
  1510   002164  EFB4  F010         	goto	l3287
  1511   002168                     l3287:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1514   002168  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1515   00216C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1516   002170  2ADE               	incf	postinc2,f,c
  1517   002172  0E00               	movlw	0
  1518   002174  22DD               	addwfc	postdec2,f,c
  1519   002176  EFD1  F010         	goto	l863
  1520   00217A                     l3291:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1523   00217A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1524   00217E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1525   002182  CFDE FFF6          	movff	postinc2,tblptrl
  1526   002186  CFDD FFF7          	movff	postdec2,tblptrh
  1527   00218A                     	if	0	;tblptru may be non-zero
  1528   00218A                     	endif
  1529   00218A                     	if	0	;tblptru may be non-zero
  1530   00218A                     	endif
  1531   00218A  0008               	tblrd		*
  1532   00218C  50F5               	movf	tablat,w,c
  1533   00218E  6E01               	movwf	fputc@c^0,c
  1534   002190  6A02               	clrf	(fputc@c+1)^0,c
  1535   002192  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1536   002196  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1537   00219A  EC50  F015         	call	_fputc	;wreg free
  1538   00219E  EFB4  F010         	goto	l3287
  1539   0021A2                     l863:
  1540   0021A2  0012               	return		;funcret
  1541   0021A4                     __end_of_vfpfcnvrt:
  1542                           	callstack 0
  1543                           
  1544 ;; *************** function _efgtoa *****************
  1545 ;; Defined at:
  1546 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  1549 ;;		 -> sprintf@f(11), 
  1550 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  1551 ;;  c               1   57[COMRAM] unsigned char 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  u               4   40[BANK0 ] struct flui
  1554 ;;  g               4   36[BANK0 ] struct flui
  1555 ;;  l               4   29[BANK0 ] struct flui
  1556 ;;  h               4   25[BANK0 ] struct flui
  1557 ;;  ou              4   19[BANK0 ] struct flui
  1558 ;;  n               2   34[BANK0 ] int 
  1559 ;;  i               2   23[BANK0 ] int 
  1560 ;;  w               2   17[BANK0 ] int 
  1561 ;;  e               2   15[BANK0 ] int 
  1562 ;;  m               2   13[BANK0 ] int 
  1563 ;;  d               2   11[BANK0 ] int 
  1564 ;;  t               2    4[BANK0 ] int 
  1565 ;;  p               2    2[BANK0 ] int 
  1566 ;;  ne              2    0[BANK0 ] int 
  1567 ;;  sign            1   33[BANK0 ] unsigned char 
  1568 ;;  nmode           1   10[BANK0 ] unsigned char 
  1569 ;;  mode            1    9[BANK0 ] unsigned char 
  1570 ;;  pp              1    8[BANK0 ] unsigned char 
  1571 ;;  esign           1    0        unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         7       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1583 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1585 ;;Total ram usage:       53 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 4
  1588 ;; This function calls:
  1589 ;;		___fladd
  1590 ;;		___fldiv
  1591 ;;		___fleq
  1592 ;;		___flge
  1593 ;;		___flmul
  1594 ;;		___flneg
  1595 ;;		___flsub
  1596 ;;		___fltol
  1597 ;;		___fpclassifyf
  1598 ;;		_floorf
  1599 ;;		_labs
  1600 ;;		_memcpy
  1601 ;;		_pad
  1602 ;;		_strcpy
  1603 ;; This function is called by:
  1604 ;;		_vfpfcnvrt
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text4
  1609   000810                     __ptext4:
  1610                           	callstack 0
  1611   000810                     _efgtoa:
  1612                           	callstack 23
  1613   000810                     
  1614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1615   000810  0E00               	movlw	0
  1616   000812  0100               	movlb	0	; () banked
  1617   000814  6F81               	movwf	efgtoa@sign& (0+255),b
  1618   000816                     
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1621   000816  C036  F084         	movff	efgtoa@f,efgtoa@g
  1622   00081A  C037  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1623   00081E  C038  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1624   000822  C039  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1625   000826                     
  1626                           ; BSR set to: 0
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1628   000826  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1629   000828  EF1A  F004         	goto	u3120
  1630   00082C  EF18  F004         	goto	u3121
  1631   000830                     u3121:
  1632   000830  EF2E  F004         	goto	l2983
  1633   000834                     u3120:
  1634   000834                     
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1637   000834  0E01               	movlw	1
  1638   000836  6F81               	movwf	efgtoa@sign& (0+255),b
  1639   000838                     
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1642   000838  C084  F001         	movff	efgtoa@g,___flneg@f1
  1643   00083C  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1644   000840  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1645   000844  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1646   000848  ECA0  F017         	call	___flneg	;wreg free
  1647   00084C  C001  F084         	movff	?___flneg,efgtoa@g
  1648   000850  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  1649   000854  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  1650   000858  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  1651   00085C                     l2983:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1654   00085C  0E00               	movlw	0
  1655   00085E  0100               	movlb	0	; () banked
  1656   000860  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1657   000862  0E00               	movlw	0
  1658   000864  6F82               	movwf	efgtoa@n& (0+255),b
  1659   000866                     
  1660                           ; BSR set to: 0
  1661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1662   000866  C05B  F071         	movff	_width,efgtoa@w
  1663   00086A  C05C  F072         	movff	_width+1,efgtoa@w+1
  1664   00086E                     
  1665                           ; BSR set to: 0
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1667   00086E  5181               	movf	efgtoa@sign& (0+255),w,b
  1668   000870  B4D8               	btfsc	status,2,c
  1669   000872  EF3D  F004         	goto	u3131
  1670   000876  EF3F  F004         	goto	u3130
  1671   00087A                     u3131:
  1672   00087A  EF53  F004         	goto	l2997
  1673   00087E                     u3130:
  1674   00087E                     
  1675                           ; BSR set to: 0
  1676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1677   00087E  5181               	movf	efgtoa@sign& (0+255),w,b
  1678   000880  A4D8               	btfss	status,2,c
  1679   000882  EF45  F004         	goto	u3141
  1680   000886  EF47  F004         	goto	u3140
  1681   00088A                     u3141:
  1682   00088A  EF4D  F004         	goto	l2993
  1683   00088E                     u3140:
  1684   00088E                     
  1685                           ; BSR set to: 0
  1686   00088E  0E00               	movlw	0
  1687   000890  6F67               	movwf	(_efgtoa$938+1)& (0+255),b
  1688   000892  0E2B               	movlw	43
  1689   000894  6F66               	movwf	_efgtoa$938& (0+255),b
  1690   000896  EF51  F004         	goto	l2995
  1691   00089A                     l2993:
  1692                           
  1693                           ; BSR set to: 0
  1694   00089A  0E00               	movlw	0
  1695   00089C  6F67               	movwf	(_efgtoa$938+1)& (0+255),b
  1696   00089E  0E2D               	movlw	45
  1697   0008A0  6F66               	movwf	_efgtoa$938& (0+255),b
  1698   0008A2                     l2995:
  1699                           
  1700                           ; BSR set to: 0
  1701   0008A2  C066  F081         	movff	_efgtoa$938,efgtoa@sign
  1702   0008A6                     l2997:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1706   0008A6  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1707   0008AA  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1708   0008AE  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1709   0008B2  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1710   0008B6  EC5F  F014         	call	___fpclassifyf	;wreg free
  1711   0008BA  0401               	decf	?___fpclassifyf^0,w,c
  1712   0008BC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1713   0008BE  A4D8               	btfss	status,2,c
  1714   0008C0  EF64  F004         	goto	u3151
  1715   0008C4  EF66  F004         	goto	u3150
  1716   0008C8                     u3151:
  1717   0008C8  EF99  F004         	goto	l3015
  1718   0008CC                     u3150:
  1719   0008CC                     
  1720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1721   0008CC  0100               	movlb	0	; () banked
  1722   0008CE  5181               	movf	efgtoa@sign& (0+255),w,b
  1723   0008D0  B4D8               	btfsc	status,2,c
  1724   0008D2  EF6D  F004         	goto	u3161
  1725   0008D6  EF6F  F004         	goto	u3160
  1726   0008DA                     u3161:
  1727   0008DA  EF78  F004         	goto	l3007
  1728   0008DE                     u3160:
  1729   0008DE                     
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1732   0008DE  C081  F100         	movff	efgtoa@sign,_dbuf
  1733   0008E2                     
  1734                           ; BSR set to: 0
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1736   0008E2  0771               	decf	efgtoa@w& (0+255),f,b
  1737   0008E4  A0D8               	btfss	status,0,c
  1738   0008E6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1739   0008E8                     
  1740                           ; BSR set to: 0
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1742   0008E8  0E00               	movlw	0
  1743   0008EA  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1744   0008EC  0E01               	movlw	1
  1745   0008EE  6F82               	movwf	efgtoa@n& (0+255),b
  1746   0008F0                     l3007:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1750   0008F0  0E00               	movlw	low _dbuf
  1751   0008F2  2582               	addwf	efgtoa@n& (0+255),w,b
  1752   0008F4  6E01               	movwf	strcpy@dest^0,c
  1753   0008F6  0E01               	movlw	high _dbuf
  1754   0008F8  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1755   0008FA  6E02               	movwf	(strcpy@dest+1)^0,c
  1756   0008FC  0E07               	movlw	low STR_2
  1757   0008FE  6E03               	movwf	strcpy@src^0,c
  1758   000900  0E08               	movlw	high STR_2
  1759   000902  6E04               	movwf	(strcpy@src+1)^0,c
  1760   000904  EC80  F017         	call	_strcpy	;wreg free
  1761   000908                     l3009:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1764   000908  0100               	movlb	0	; () banked
  1765   00090A  0EFD               	movlw	253
  1766   00090C  2771               	addwf	efgtoa@w& (0+255),f,b
  1767   00090E  0EFF               	movlw	255
  1768   000910  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1769   000912                     
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1772   000912  C034  F011         	movff	efgtoa@fp,pad@fp
  1773   000916  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  1774   00091A  0E00               	movlw	low _dbuf
  1775   00091C  6E13               	movwf	pad@buf^0,c
  1776   00091E  0E01               	movlw	high _dbuf
  1777   000920  6E14               	movwf	(pad@buf+1)^0,c
  1778   000922  C071  F015         	movff	efgtoa@w,pad@p
  1779   000926  C072  F016         	movff	efgtoa@w+1,pad@p+1
  1780   00092A  EC0A  F016         	call	_pad	;wreg free
  1781   00092E  EF05  F009         	goto	l795
  1782   000932                     l3015:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1785   000932  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  1786   000936  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1787   00093A  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1788   00093E  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1789   000942  EC5F  F014         	call	___fpclassifyf	;wreg free
  1790   000946  5001               	movf	?___fpclassifyf^0,w,c
  1791   000948  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1792   00094A  A4D8               	btfss	status,2,c
  1793   00094C  EFAA  F004         	goto	u3171
  1794   000950  EFAC  F004         	goto	u3170
  1795   000954                     u3171:
  1796   000954  EFCC  F004         	goto	l3033
  1797   000958                     u3170:
  1798   000958                     
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  1800   000958  0100               	movlb	0	; () banked
  1801   00095A  5181               	movf	efgtoa@sign& (0+255),w,b
  1802   00095C  B4D8               	btfsc	status,2,c
  1803   00095E  EFB3  F004         	goto	u3181
  1804   000962  EFB5  F004         	goto	u3180
  1805   000966                     u3181:
  1806   000966  EFBE  F004         	goto	l3025
  1807   00096A                     u3180:
  1808   00096A                     
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  1811   00096A  C081  F100         	movff	efgtoa@sign,_dbuf
  1812   00096E                     
  1813                           ; BSR set to: 0
  1814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  1815   00096E  0771               	decf	efgtoa@w& (0+255),f,b
  1816   000970  A0D8               	btfss	status,0,c
  1817   000972  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1818   000974                     
  1819                           ; BSR set to: 0
  1820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  1821   000974  0E00               	movlw	0
  1822   000976  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1823   000978  0E01               	movlw	1
  1824   00097A  6F82               	movwf	efgtoa@n& (0+255),b
  1825   00097C                     l3025:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  1829   00097C  0E00               	movlw	low _dbuf
  1830   00097E  2582               	addwf	efgtoa@n& (0+255),w,b
  1831   000980  6E01               	movwf	strcpy@dest^0,c
  1832   000982  0E01               	movlw	high _dbuf
  1833   000984  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1834   000986  6E02               	movwf	(strcpy@dest+1)^0,c
  1835   000988  0E0B               	movlw	low STR_5
  1836   00098A  6E03               	movwf	strcpy@src^0,c
  1837   00098C  0E08               	movlw	high STR_5
  1838   00098E  6E04               	movwf	(strcpy@src+1)^0,c
  1839   000990  EC80  F017         	call	_strcpy	;wreg free
  1840   000994  EF84  F004         	goto	l3009
  1841   000998                     l3033:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  1844   000998  0E00               	movlw	0
  1845   00099A  0100               	movlb	0	; () banked
  1846   00099C  6F88               	movwf	efgtoa@u& (0+255),b
  1847   00099E  0E00               	movlw	0
  1848   0009A0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  1849   0009A2  0E80               	movlw	128
  1850   0009A4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  1851   0009A6  0E3F               	movlw	63
  1852   0009A8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  1855   0009AA  0E00               	movlw	0
  1856   0009AC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  1857   0009AE  0E00               	movlw	0
  1858   0009B0  6F6F               	movwf	efgtoa@e& (0+255),b
  1859   0009B2                     
  1860                           ; BSR set to: 0
  1861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  1862   0009B2  C084  F001         	movff	efgtoa@g,___fleq@ff1
  1863   0009B6  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  1864   0009BA  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  1865   0009BE  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  1866   0009C2  0E00               	movlw	0
  1867   0009C4  6E05               	movwf	___fleq@ff2^0,c
  1868   0009C6  0E00               	movlw	0
  1869   0009C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1870   0009CA  0E00               	movlw	0
  1871   0009CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1872   0009CE  0E00               	movlw	0
  1873   0009D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1874   0009D2  ECB5  F015         	call	___fleq	;wreg free
  1875   0009D6  B0D8               	btfsc	status,0,c
  1876   0009D8  EFF0  F004         	goto	u3191
  1877   0009DC  EFF2  F004         	goto	u3190
  1878   0009E0                     u3191:
  1879   0009E0  EFD1  F005         	goto	l798
  1880   0009E4                     u3190:
  1881   0009E4  EFFF  F004         	goto	l3041
  1882   0009E8                     l800:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  1885   0009E8  C073  F088         	movff	efgtoa@ou,efgtoa@u
  1886   0009EC  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  1887   0009F0  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  1888   0009F4  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  1889   0009F8                     
  1890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  1891   0009F8  0100               	movlb	0	; () banked
  1892   0009FA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  1893   0009FC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  1894   0009FE                     l3041:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  1897   0009FE  C088  F00F         	movff	efgtoa@u,___flmul@b
  1898   000A02  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  1899   000A06  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  1900   000A0A  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  1901   000A0E  0E00               	movlw	0
  1902   000A10  6E13               	movwf	___flmul@a^0,c
  1903   000A12  0E00               	movlw	0
  1904   000A14  6E14               	movwf	(___flmul@a+1)^0,c
  1905   000A16  0E20               	movlw	32
  1906   000A18  6E15               	movwf	(___flmul@a+2)^0,c
  1907   000A1A  0E41               	movlw	65
  1908   000A1C  6E16               	movwf	(___flmul@a+3)^0,c
  1909   000A1E  EC66  F00B         	call	___flmul	;wreg free
  1910   000A22  C00F  F073         	movff	?___flmul,efgtoa@ou
  1911   000A26  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  1912   000A2A  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  1913   000A2E  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  1914   000A32  0100               	movlb	0	; () banked
  1915   000A34  5173               	movf	efgtoa@ou& (0+255),w,b
  1916   000A36  5D84               	subwf	efgtoa@g& (0+255),w,b
  1917   000A38  6E01               	movwf	labs@a^0,c
  1918   000A3A  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  1919   000A3C  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  1920   000A3E  6E02               	movwf	(labs@a+1)^0,c
  1921   000A40  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  1922   000A42  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  1923   000A44  6E03               	movwf	(labs@a+2)^0,c
  1924   000A46  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  1925   000A48  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  1926   000A4A  6E04               	movwf	(labs@a+3)^0,c
  1927   000A4C  EC47  F016         	call	_labs	;wreg free
  1928   000A50  BE04               	btfsc	(?_labs+3)^0,7,c
  1929   000A52  EF36  F005         	goto	u3201
  1930   000A56  5004               	movf	(?_labs+3)^0,w,c
  1931   000A58  1003               	iorwf	(?_labs+2)^0,w,c
  1932   000A5A  1002               	iorwf	(?_labs+1)^0,w,c
  1933   000A5C  E109               	bnz	u3200
  1934   000A5E  0E02               	movlw	2
  1935   000A60  5C01               	subwf	?_labs^0,w,c
  1936   000A62  A0D8               	btfss	status,0,c
  1937   000A64  EF36  F005         	goto	u3201
  1938   000A68  EF38  F005         	goto	u3200
  1939   000A6C                     u3201:
  1940   000A6C  EFF4  F004         	goto	l800
  1941   000A70                     u3200:
  1942   000A70  C073  F028         	movff	efgtoa@ou,___flge@ff1
  1943   000A74  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  1944   000A78  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  1945   000A7C  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  1946   000A80  C084  F02C         	movff	efgtoa@g,___flge@ff2
  1947   000A84  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  1948   000A88  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  1949   000A8C  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  1950   000A90  ECDD  F013         	call	___flge	;wreg free
  1951   000A94  A0D8               	btfss	status,0,c
  1952   000A96  EF4F  F005         	goto	u3211
  1953   000A9A  EF51  F005         	goto	u3210
  1954   000A9E                     u3211:
  1955   000A9E  EFF4  F004         	goto	l800
  1956   000AA2                     u3210:
  1957   000AA2                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  1959   000AA2  0100               	movlb	0	; () banked
  1960   000AA4  5188               	movf	efgtoa@u& (0+255),w,b
  1961   000AA6  5D84               	subwf	efgtoa@g& (0+255),w,b
  1962   000AA8  6E01               	movwf	labs@a^0,c
  1963   000AAA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  1964   000AAC  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  1965   000AAE  6E02               	movwf	(labs@a+1)^0,c
  1966   000AB0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  1967   000AB2  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  1968   000AB4  6E03               	movwf	(labs@a+2)^0,c
  1969   000AB6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  1970   000AB8  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  1971   000ABA  6E04               	movwf	(labs@a+3)^0,c
  1972   000ABC  EC47  F016         	call	_labs	;wreg free
  1973   000AC0  BE04               	btfsc	(?_labs+3)^0,7,c
  1974   000AC2  EF70  F005         	goto	u3220
  1975   000AC6  5004               	movf	(?_labs+3)^0,w,c
  1976   000AC8  1003               	iorwf	(?_labs+2)^0,w,c
  1977   000ACA  1002               	iorwf	(?_labs+1)^0,w,c
  1978   000ACC  E107               	bnz	u3221
  1979   000ACE  0E02               	movlw	2
  1980   000AD0  5C01               	subwf	?_labs^0,w,c
  1981   000AD2  B0D8               	btfsc	status,0,c
  1982   000AD4  EF6E  F005         	goto	u3221
  1983   000AD8  EF70  F005         	goto	u3220
  1984   000ADC                     u3221:
  1985   000ADC  EFB8  F005         	goto	l3059
  1986   000AE0                     u3220:
  1987   000AE0                     l3049:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  1990   000AE0  C088  F084         	movff	efgtoa@u,efgtoa@g
  1991   000AE4  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  1992   000AE8  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  1993   000AEC  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  1996   000AF0  EFD1  F005         	goto	l798
  1997   000AF4                     l3051:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2000   000AF4  C088  F001         	movff	efgtoa@u,___fldiv@b
  2001   000AF8  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2002   000AFC  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2003   000B00  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2004   000B04  0E00               	movlw	0
  2005   000B06  6E05               	movwf	___fldiv@a^0,c
  2006   000B08  0E00               	movlw	0
  2007   000B0A  6E06               	movwf	(___fldiv@a+1)^0,c
  2008   000B0C  0E20               	movlw	32
  2009   000B0E  6E07               	movwf	(___fldiv@a+2)^0,c
  2010   000B10  0E41               	movlw	65
  2011   000B12  6E08               	movwf	(___fldiv@a+3)^0,c
  2012   000B14  EC7B  F00D         	call	___fldiv	;wreg free
  2013   000B18  C001  F088         	movff	?___fldiv,efgtoa@u
  2014   000B1C  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2015   000B20  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2016   000B24  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2017   000B28                     
  2018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2019   000B28  0100               	movlb	0	; () banked
  2020   000B2A  076F               	decf	efgtoa@e& (0+255),f,b
  2021   000B2C  A0D8               	btfss	status,0,c
  2022   000B2E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2023   000B30                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2026   000B30  5188               	movf	efgtoa@u& (0+255),w,b
  2027   000B32  5D84               	subwf	efgtoa@g& (0+255),w,b
  2028   000B34  6E01               	movwf	labs@a^0,c
  2029   000B36  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2030   000B38  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2031   000B3A  6E02               	movwf	(labs@a+1)^0,c
  2032   000B3C  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2033   000B3E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2034   000B40  6E03               	movwf	(labs@a+2)^0,c
  2035   000B42  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2036   000B44  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2037   000B46  6E04               	movwf	(labs@a+3)^0,c
  2038   000B48  EC47  F016         	call	_labs	;wreg free
  2039   000B4C  BE04               	btfsc	(?_labs+3)^0,7,c
  2040   000B4E  EFB6  F005         	goto	u3230
  2041   000B52  5004               	movf	(?_labs+3)^0,w,c
  2042   000B54  1003               	iorwf	(?_labs+2)^0,w,c
  2043   000B56  1002               	iorwf	(?_labs+1)^0,w,c
  2044   000B58  E107               	bnz	u3231
  2045   000B5A  0E02               	movlw	2
  2046   000B5C  5C01               	subwf	?_labs^0,w,c
  2047   000B5E  B0D8               	btfsc	status,0,c
  2048   000B60  EFB4  F005         	goto	u3231
  2049   000B64  EFB6  F005         	goto	u3230
  2050   000B68                     u3231:
  2051   000B68  EFB8  F005         	goto	l3059
  2052   000B6C                     u3230:
  2053   000B6C  EF70  F005         	goto	l3049
  2054   000B70                     l3059:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2057   000B70  C084  F028         	movff	efgtoa@g,___flge@ff1
  2058   000B74  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2059   000B78  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2060   000B7C  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2061   000B80  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2062   000B84  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2063   000B88  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2064   000B8C  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2065   000B90  ECDD  F013         	call	___flge	;wreg free
  2066   000B94  A0D8               	btfss	status,0,c
  2067   000B96  EFCF  F005         	goto	u3241
  2068   000B9A  EFD1  F005         	goto	u3240
  2069   000B9E                     u3241:
  2070   000B9E  EF7A  F005         	goto	l3051
  2071   000BA2                     u3240:
  2072   000BA2                     l798:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2075   000BA2  C03A  F069         	movff	efgtoa@c,efgtoa@mode
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2078   000BA6  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2079   000BAA                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2081   000BAA  BE5E               	btfsc	(_prec+1)^0,7,c
  2082   000BAC  EFDA  F005         	goto	u3251
  2083   000BB0  EFDC  F005         	goto	u3250
  2084   000BB4                     u3251:
  2085   000BB4  EFE2  F005         	goto	l3065
  2086   000BB8                     u3250:
  2087   000BB8  C05D  F062         	movff	_prec,efgtoa@p
  2088   000BBC  C05E  F063         	movff	_prec+1,efgtoa@p+1
  2089   000BC0  EFE7  F005         	goto	l3067
  2090   000BC4                     l3065:
  2091   000BC4  0E00               	movlw	0
  2092   000BC6  0100               	movlb	0	; () banked
  2093   000BC8  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2094   000BCA  0E06               	movlw	6
  2095   000BCC  6F62               	movwf	efgtoa@p& (0+255),b
  2096   000BCE                     l3067:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2099   000BCE  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2100   000BD2  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2101   000BD6                     
  2102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2103   000BD6  0100               	movlb	0	; () banked
  2104   000BD8  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2105   000BDA  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2106   000BDC                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2109   000BDC  0E66               	movlw	102
  2110   000BDE  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2111   000BE0  A4D8               	btfss	status,2,c
  2112   000BE2  EFF5  F005         	goto	u3261
  2113   000BE6  EFF7  F005         	goto	u3260
  2114   000BEA                     u3261:
  2115   000BEA  EF17  F006         	goto	l3081
  2116   000BEE                     u3260:
  2117   000BEE                     
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2120   000BEE  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2121   000BF0  EFFE  F005         	goto	u3270
  2122   000BF4  EFFC  F005         	goto	u3271
  2123   000BF8                     u3271:
  2124   000BF8  EF0A  F006         	goto	l3077
  2125   000BFC                     u3270:
  2126   000BFC                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2129   000BFC  0E00               	movlw	0
  2130   000BFE  6F88               	movwf	efgtoa@u& (0+255),b
  2131   000C00  0E00               	movlw	0
  2132   000C02  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2133   000C04  0E80               	movlw	128
  2134   000C06  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2135   000C08  0E3F               	movlw	63
  2136   000C0A  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2139   000C0C  0E00               	movlw	0
  2140   000C0E  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2141   000C10  0E00               	movlw	0
  2142   000C12  6F6F               	movwf	efgtoa@e& (0+255),b
  2143   000C14                     l3077:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2147   000C14  0E67               	movlw	103
  2148   000C16  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2149   000C18  B4D8               	btfsc	status,2,c
  2150   000C1A  EF11  F006         	goto	u3281
  2151   000C1E  EF13  F006         	goto	u3280
  2152   000C22                     u3281:
  2153   000C22  EF17  F006         	goto	l3081
  2154   000C26                     u3280:
  2155   000C26                     
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2158   000C26  516F               	movf	efgtoa@e& (0+255),w,b
  2159   000C28  276D               	addwf	efgtoa@m& (0+255),f,b
  2160   000C2A  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2161   000C2C  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2162   000C2E                     l3081:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2166   000C2E  0E00               	movlw	0
  2167   000C30  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2168   000C32  0E00               	movlw	0
  2169   000C34  6F77               	movwf	efgtoa@i& (0+255),b
  2170   000C36                     
  2171                           ; BSR set to: 0
  2172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2173   000C36  C084  F079         	movff	efgtoa@g,efgtoa@h
  2174   000C3A  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2175   000C3E  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2176   000C42  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2177   000C46                     
  2178                           ; BSR set to: 0
  2179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2180   000C46  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2181   000C4A  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2182   000C4E  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2183   000C52  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2186   000C56  EFA8  F006         	goto	l3095
  2187   000C5A                     l3087:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2191   000C5A  C079  F001         	movff	efgtoa@h,___fldiv@b
  2192   000C5E  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2193   000C62  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2194   000C66  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2195   000C6A  C088  F005         	movff	efgtoa@u,___fldiv@a
  2196   000C6E  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2197   000C72  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2198   000C76  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2199   000C7A  EC7B  F00D         	call	___fldiv	;wreg free
  2200   000C7E  C001  F01A         	movff	?___fldiv,floorf@x
  2201   000C82  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2202   000C86  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2203   000C8A  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2204   000C8E  ECD2  F010         	call	_floorf	;wreg free
  2205   000C92  C01A  F07D         	movff	?_floorf,efgtoa@l
  2206   000C96  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2207   000C9A  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2208   000C9E  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2211   000CA2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2212   000CA6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2213   000CAA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2214   000CAE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2215   000CB2  EC5A  F013         	call	___fltol	;wreg free
  2216   000CB6  C001  F06B         	movff	?___fltol,efgtoa@d
  2217   000CBA  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2218   000CBE                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2220   000CBE  C079  F028         	movff	efgtoa@h,___flsub@b
  2221   000CC2  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2222   000CC6  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2223   000CCA  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2224   000CCE  C07D  F013         	movff	efgtoa@l,___flmul@a
  2225   000CD2  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2226   000CD6  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2227   000CDA  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2228   000CDE  C088  F00F         	movff	efgtoa@u,___flmul@b
  2229   000CE2  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2230   000CE6  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2231   000CEA  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2232   000CEE  EC66  F00B         	call	___flmul	;wreg free
  2233   000CF2  C00F  F02C         	movff	?___flmul,___flsub@a
  2234   000CF6  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2235   000CFA  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2236   000CFE  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2237   000D02  EC18  F017         	call	___flsub	;wreg free
  2238   000D06  C028  F079         	movff	?___flsub,efgtoa@h
  2239   000D0A  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2240   000D0E  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2241   000D12  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2242   000D16                     
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2244   000D16  C088  F001         	movff	efgtoa@u,___fldiv@b
  2245   000D1A  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2246   000D1E  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2247   000D22  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2248   000D26  0E00               	movlw	0
  2249   000D28  6E05               	movwf	___fldiv@a^0,c
  2250   000D2A  0E00               	movlw	0
  2251   000D2C  6E06               	movwf	(___fldiv@a+1)^0,c
  2252   000D2E  0E20               	movlw	32
  2253   000D30  6E07               	movwf	(___fldiv@a+2)^0,c
  2254   000D32  0E41               	movlw	65
  2255   000D34  6E08               	movwf	(___fldiv@a+3)^0,c
  2256   000D36  EC7B  F00D         	call	___fldiv	;wreg free
  2257   000D3A  C001  F088         	movff	?___fldiv,efgtoa@u
  2258   000D3E  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2259   000D42  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2260   000D46  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2261   000D4A                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2263   000D4A  0100               	movlb	0	; () banked
  2264   000D4C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2265   000D4E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2266   000D50                     l3095:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2270   000D50  516D               	movf	efgtoa@m& (0+255),w,b
  2271   000D52  5D77               	subwf	efgtoa@i& (0+255),w,b
  2272   000D54  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2273   000D56  0A80               	xorlw	128
  2274   000D58  6E3B               	movwf	??_efgtoa^0,c
  2275   000D5A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2276   000D5C  0A80               	xorlw	128
  2277   000D5E  583B               	subwfb	??_efgtoa^0,w,c
  2278   000D60  A0D8               	btfss	status,0,c
  2279   000D62  EFB5  F006         	goto	u3291
  2280   000D66  EFB7  F006         	goto	u3290
  2281   000D6A                     u3291:
  2282   000D6A  EF2D  F006         	goto	l3087
  2283   000D6E                     u3290:
  2284   000D6E                     
  2285                           ; BSR set to: 0
  2286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2287   000D6E  C088  F00F         	movff	efgtoa@u,___flmul@b
  2288   000D72  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2289   000D76  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2290   000D7A  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2291   000D7E  0E00               	movlw	0
  2292   000D80  6E13               	movwf	___flmul@a^0,c
  2293   000D82  0E00               	movlw	0
  2294   000D84  6E14               	movwf	(___flmul@a+1)^0,c
  2295   000D86  0EA0               	movlw	160
  2296   000D88  6E15               	movwf	(___flmul@a+2)^0,c
  2297   000D8A  0E40               	movlw	64
  2298   000D8C  6E16               	movwf	(___flmul@a+3)^0,c
  2299   000D8E  EC66  F00B         	call	___flmul	;wreg free
  2300   000D92  C00F  F07D         	movff	?___flmul,efgtoa@l
  2301   000D96  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  2302   000D9A  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  2303   000D9E  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  2304   000DA2                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2306   000DA2  C079  F028         	movff	efgtoa@h,___flge@ff1
  2307   000DA6  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2308   000DAA  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2309   000DAE  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2310   000DB2  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  2311   000DB6  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2312   000DBA  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2313   000DBE  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2314   000DC2  ECDD  F013         	call	___flge	;wreg free
  2315   000DC6  B0D8               	btfsc	status,0,c
  2316   000DC8  EFE8  F006         	goto	u3301
  2317   000DCC  EFEA  F006         	goto	u3300
  2318   000DD0                     u3301:
  2319   000DD0  EFF5  F006         	goto	l3103
  2320   000DD4                     u3300:
  2321   000DD4                     
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2323   000DD4  0E00               	movlw	0
  2324   000DD6  0100               	movlb	0	; () banked
  2325   000DD8  6F7D               	movwf	efgtoa@l& (0+255),b
  2326   000DDA  0E00               	movlw	0
  2327   000DDC  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2328   000DDE  0E00               	movlw	0
  2329   000DE0  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2330   000DE2  0E00               	movlw	0
  2331   000DE4  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2334   000DE6  EF1E  F007         	goto	l3109
  2335   000DEA                     l3103:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2338   000DEA  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2339   000DEE  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2340   000DF2  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2341   000DF6  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2342   000DFA  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2343   000DFE  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2344   000E02  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2345   000E06  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2346   000E0A  ECB5  F015         	call	___fleq	;wreg free
  2347   000E0E  A0D8               	btfss	status,0,c
  2348   000E10  EF0C  F007         	goto	u3311
  2349   000E14  EF0E  F007         	goto	u3310
  2350   000E18                     u3311:
  2351   000E18  EF1E  F007         	goto	l3109
  2352   000E1C                     u3310:
  2353   000E1C  0100               	movlb	0	; () banked
  2354   000E1E  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2355   000E20  EF14  F007         	goto	u3321
  2356   000E24  EF16  F007         	goto	u3320
  2357   000E28                     u3321:
  2358   000E28  EF1E  F007         	goto	l3109
  2359   000E2C                     u3320:
  2360   000E2C                     
  2361                           ; BSR set to: 0
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2363   000E2C  0E00               	movlw	0
  2364   000E2E  6F7D               	movwf	efgtoa@l& (0+255),b
  2365   000E30  0E00               	movlw	0
  2366   000E32  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2367   000E34  0E00               	movlw	0
  2368   000E36  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2369   000E38  0E00               	movlw	0
  2370   000E3A  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2371   000E3C                     l3109:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2374   000E3C  C084  F001         	movff	efgtoa@g,___fladd@b
  2375   000E40  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2376   000E44  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2377   000E48  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2378   000E4C  C07D  F005         	movff	efgtoa@l,___fladd@a
  2379   000E50  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2380   000E54  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2381   000E58  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2382   000E5C  EC06  F009         	call	___fladd	;wreg free
  2383   000E60  C001  F079         	movff	?___fladd,efgtoa@h
  2384   000E64  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2385   000E68  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2386   000E6C  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2387   000E70                     
  2388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2389   000E70  C079  F028         	movff	efgtoa@h,___flge@ff1
  2390   000E74  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2391   000E78  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2392   000E7C  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2393   000E80  0E00               	movlw	0
  2394   000E82  6E13               	movwf	___flmul@a^0,c
  2395   000E84  0E00               	movlw	0
  2396   000E86  6E14               	movwf	(___flmul@a+1)^0,c
  2397   000E88  0E20               	movlw	32
  2398   000E8A  6E15               	movwf	(___flmul@a+2)^0,c
  2399   000E8C  0E41               	movlw	65
  2400   000E8E  6E16               	movwf	(___flmul@a+3)^0,c
  2401   000E90  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2402   000E94  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2403   000E98  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2404   000E9C  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2405   000EA0  EC66  F00B         	call	___flmul	;wreg free
  2406   000EA4  C00F  F02C         	movff	?___flmul,___flge@ff2
  2407   000EA8  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2408   000EAC  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2409   000EB0  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2410   000EB4  ECDD  F013         	call	___flge	;wreg free
  2411   000EB8  A0D8               	btfss	status,0,c
  2412   000EBA  EF61  F007         	goto	u3331
  2413   000EBE  EF63  F007         	goto	u3330
  2414   000EC2                     u3331:
  2415   000EC2  EF8C  F007         	goto	l3121
  2416   000EC6                     u3330:
  2417   000EC6                     
  2418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2419   000EC6  0100               	movlb	0	; () banked
  2420   000EC8  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2421   000ECA  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2422   000ECC                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2425   000ECC  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2426   000ED0  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2427   000ED4  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2428   000ED8  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2429   000EDC  0E00               	movlw	0
  2430   000EDE  6E13               	movwf	___flmul@a^0,c
  2431   000EE0  0E00               	movlw	0
  2432   000EE2  6E14               	movwf	(___flmul@a+1)^0,c
  2433   000EE4  0E20               	movlw	32
  2434   000EE6  6E15               	movwf	(___flmul@a+2)^0,c
  2435   000EE8  0E41               	movlw	65
  2436   000EEA  6E16               	movwf	(___flmul@a+3)^0,c
  2437   000EEC  EC66  F00B         	call	___flmul	;wreg free
  2438   000EF0  C00F  F073         	movff	?___flmul,efgtoa@ou
  2439   000EF4  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2440   000EF8  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2441   000EFC  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2442   000F00                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2444   000F00  0E66               	movlw	102
  2445   000F02  0100               	movlb	0	; () banked
  2446   000F04  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2447   000F06  A4D8               	btfss	status,2,c
  2448   000F08  EF88  F007         	goto	u3341
  2449   000F0C  EF8A  F007         	goto	u3340
  2450   000F10                     u3341:
  2451   000F10  EF8C  F007         	goto	l3121
  2452   000F14                     u3340:
  2453   000F14                     
  2454                           ; BSR set to: 0
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2456   000F14  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2457   000F16  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2458   000F18                     l3121:
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2461   000F18  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2462   000F1C  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2463   000F20  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2464   000F24  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2465   000F28                     
  2466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2467   000F28  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2468   000F2C  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2469   000F30                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2471   000F30  0E00               	movlw	0
  2472   000F32  0100               	movlb	0	; () banked
  2473   000F34  6F68               	movwf	efgtoa@pp& (0+255),b
  2474   000F36                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2477   000F36  0E00               	movlw	0
  2478   000F38  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2479   000F3A  0E00               	movlw	0
  2480   000F3C  6F64               	movwf	efgtoa@t& (0+255),b
  2481   000F3E                     
  2482                           ; BSR set to: 0
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2484   000F3E  0E00               	movlw	0
  2485   000F40  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2486   000F42  0E00               	movlw	0
  2487   000F44  6F77               	movwf	efgtoa@i& (0+255),b
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2490   000F46  EF8A  F008         	goto	l3171
  2491   000F4A                     l3131:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2495   000F4A  C079  F001         	movff	efgtoa@h,___fldiv@b
  2496   000F4E  C07A  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2497   000F52  C07B  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2498   000F56  C07C  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2499   000F5A  C088  F005         	movff	efgtoa@u,___fldiv@a
  2500   000F5E  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2501   000F62  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2502   000F66  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2503   000F6A  EC7B  F00D         	call	___fldiv	;wreg free
  2504   000F6E  C001  F01A         	movff	?___fldiv,floorf@x
  2505   000F72  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2506   000F76  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2507   000F7A  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2508   000F7E  ECD2  F010         	call	_floorf	;wreg free
  2509   000F82  C01A  F07D         	movff	?_floorf,efgtoa@l
  2510   000F86  C01B  F07E         	movff	?_floorf+1,efgtoa@l+1
  2511   000F8A  C01C  F07F         	movff	?_floorf+2,efgtoa@l+2
  2512   000F8E  C01D  F080         	movff	?_floorf+3,efgtoa@l+3
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2515   000F92  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2516   000F96  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2517   000F9A  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2518   000F9E  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2519   000FA2  EC5A  F013         	call	___fltol	;wreg free
  2520   000FA6  BE02               	btfsc	(?___fltol+1)^0,7,c
  2521   000FA8  EFE1  F007         	goto	u3350
  2522   000FAC  5002               	movf	(?___fltol+1)^0,w,c
  2523   000FAE  E107               	bnz	u3351
  2524   000FB0  0E0A               	movlw	10
  2525   000FB2  5C01               	subwf	?___fltol^0,w,c
  2526   000FB4  B0D8               	btfsc	status,0,c
  2527   000FB6  EFDF  F007         	goto	u3351
  2528   000FBA  EFE1  F007         	goto	u3350
  2529   000FBE                     u3351:
  2530   000FBE  EFF1  F007         	goto	l3135
  2531   000FC2                     u3350:
  2532   000FC2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2533   000FC6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2534   000FCA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2535   000FCE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2536   000FD2  EC5A  F013         	call	___fltol	;wreg free
  2537   000FD6  C001  F06B         	movff	?___fltol,efgtoa@d
  2538   000FDA  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2539   000FDE  EFF6  F007         	goto	l828
  2540   000FE2                     l3135:
  2541   000FE2  0E00               	movlw	0
  2542   000FE4  0100               	movlb	0	; () banked
  2543   000FE6  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2544   000FE8  0E09               	movlw	9
  2545   000FEA  6F6B               	movwf	efgtoa@d& (0+255),b
  2546   000FEC                     l828:
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2549   000FEC  0100               	movlb	0	; () banked
  2550   000FEE  5168               	movf	efgtoa@pp& (0+255),w,b
  2551   000FF0  A4D8               	btfss	status,2,c
  2552   000FF2  EFFD  F007         	goto	u3361
  2553   000FF6  EFFF  F007         	goto	u3360
  2554   000FFA                     u3361:
  2555   000FFA  EF27  F008         	goto	l3155
  2556   000FFE                     u3360:
  2557   000FFE                     
  2558                           ; BSR set to: 0
  2559   000FFE  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2560   001000  EF06  F008         	goto	u3370
  2561   001004  EF04  F008         	goto	u3371
  2562   001008                     u3371:
  2563   001008  EF27  F008         	goto	l3155
  2564   00100C                     u3370:
  2565   00100C                     
  2566                           ; BSR set to: 0
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2568   00100C  0E00               	movlw	low _dbuf
  2569   00100E  2582               	addwf	efgtoa@n& (0+255),w,b
  2570   001010  6ED9               	movwf	fsr2l,c
  2571   001012  0E01               	movlw	high _dbuf
  2572   001014  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2573   001016  6EDA               	movwf	fsr2h,c
  2574   001018  0E2E               	movlw	46
  2575   00101A  6EDF               	movwf	indf2,c
  2576   00101C                     
  2577                           ; BSR set to: 0
  2578   00101C  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2579   00101E  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2580   001020                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2583   001020  0771               	decf	efgtoa@w& (0+255),f,b
  2584   001022  A0D8               	btfss	status,0,c
  2585   001024  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2586   001026                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2589   001026  0E01               	movlw	1
  2590   001028  6F68               	movwf	efgtoa@pp& (0+255),b
  2591   00102A  EF27  F008         	goto	l3155
  2592   00102E                     l3147:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2596   00102E  0E00               	movlw	low _dbuf
  2597   001030  2582               	addwf	efgtoa@n& (0+255),w,b
  2598   001032  6ED9               	movwf	fsr2l,c
  2599   001034  0E01               	movlw	high _dbuf
  2600   001036  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2601   001038  6EDA               	movwf	fsr2h,c
  2602   00103A  0E30               	movlw	48
  2603   00103C  6EDF               	movwf	indf2,c
  2604   00103E                     
  2605                           ; BSR set to: 0
  2606   00103E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2607   001040  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2608   001042                     
  2609                           ; BSR set to: 0
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2611   001042  0771               	decf	efgtoa@w& (0+255),f,b
  2612   001044  A0D8               	btfss	status,0,c
  2613   001046  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2614   001048                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2617   001048  0764               	decf	efgtoa@t& (0+255),f,b
  2618   00104A  A0D8               	btfss	status,0,c
  2619   00104C  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2620   00104E                     l3155:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2624   00104E  5164               	movf	efgtoa@t& (0+255),w,b
  2625   001050  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2626   001052  A4D8               	btfss	status,2,c
  2627   001054  EF2E  F008         	goto	u3381
  2628   001058  EF30  F008         	goto	u3380
  2629   00105C                     u3381:
  2630   00105C  EF17  F008         	goto	l3147
  2631   001060                     u3380:
  2632   001060                     
  2633                           ; BSR set to: 0
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2635   001060  0E00               	movlw	low _dbuf
  2636   001062  2582               	addwf	efgtoa@n& (0+255),w,b
  2637   001064  6ED9               	movwf	fsr2l,c
  2638   001066  0E01               	movlw	high _dbuf
  2639   001068  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2640   00106A  6EDA               	movwf	fsr2h,c
  2641   00106C  516B               	movf	efgtoa@d& (0+255),w,b
  2642   00106E  0F30               	addlw	48
  2643   001070  6EDF               	movwf	indf2,c
  2644   001072                     
  2645                           ; BSR set to: 0
  2646   001072  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2647   001074  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2648   001076                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2651   001076  0771               	decf	efgtoa@w& (0+255),f,b
  2652   001078  A0D8               	btfss	status,0,c
  2653   00107A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2654   00107C                     
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2657   00107C  C079  F028         	movff	efgtoa@h,___flsub@b
  2658   001080  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2659   001084  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2660   001088  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2661   00108C  C07D  F013         	movff	efgtoa@l,___flmul@a
  2662   001090  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2663   001094  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2664   001098  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2665   00109C  C088  F00F         	movff	efgtoa@u,___flmul@b
  2666   0010A0  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2667   0010A4  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2668   0010A8  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2669   0010AC  EC66  F00B         	call	___flmul	;wreg free
  2670   0010B0  C00F  F02C         	movff	?___flmul,___flsub@a
  2671   0010B4  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2672   0010B8  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2673   0010BC  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2674   0010C0  EC18  F017         	call	___flsub	;wreg free
  2675   0010C4  C028  F079         	movff	?___flsub,efgtoa@h
  2676   0010C8  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2677   0010CC  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2678   0010D0  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2679   0010D4                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2681   0010D4  C088  F001         	movff	efgtoa@u,___fldiv@b
  2682   0010D8  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2683   0010DC  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2684   0010E0  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2685   0010E4  0E00               	movlw	0
  2686   0010E6  6E05               	movwf	___fldiv@a^0,c
  2687   0010E8  0E00               	movlw	0
  2688   0010EA  6E06               	movwf	(___fldiv@a+1)^0,c
  2689   0010EC  0E20               	movlw	32
  2690   0010EE  6E07               	movwf	(___fldiv@a+2)^0,c
  2691   0010F0  0E41               	movlw	65
  2692   0010F2  6E08               	movwf	(___fldiv@a+3)^0,c
  2693   0010F4  EC7B  F00D         	call	___fldiv	;wreg free
  2694   0010F8  C001  F088         	movff	?___fldiv,efgtoa@u
  2695   0010FC  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  2696   001100  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2697   001104  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2698   001108                     
  2699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2700   001108  0100               	movlb	0	; () banked
  2701   00110A  0760               	decf	efgtoa@ne& (0+255),f,b
  2702   00110C  A0D8               	btfss	status,0,c
  2703   00110E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2704   001110                     
  2705                           ; BSR set to: 0
  2706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2707   001110  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2708   001112  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2709   001114                     l3171:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2713   001114  516D               	movf	efgtoa@m& (0+255),w,b
  2714   001116  5D77               	subwf	efgtoa@i& (0+255),w,b
  2715   001118  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2716   00111A  0A80               	xorlw	128
  2717   00111C  6E3B               	movwf	??_efgtoa^0,c
  2718   00111E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2719   001120  0A80               	xorlw	128
  2720   001122  583B               	subwfb	??_efgtoa^0,w,c
  2721   001124  B0D8               	btfsc	status,0,c
  2722   001126  EF97  F008         	goto	u3391
  2723   00112A  EF99  F008         	goto	u3390
  2724   00112E                     u3391:
  2725   00112E  EFA7  F008         	goto	l3175
  2726   001132                     u3390:
  2727   001132                     
  2728                           ; BSR set to: 0
  2729   001132  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2730   001134  EFA5  F008         	goto	u3401
  2731   001138  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2732   00113A  E109               	bnz	u3400
  2733   00113C  0E4B               	movlw	75
  2734   00113E  5D82               	subwf	efgtoa@n& (0+255),w,b
  2735   001140  A0D8               	btfss	status,0,c
  2736   001142  EFA5  F008         	goto	u3401
  2737   001146  EFA7  F008         	goto	u3400
  2738   00114A                     u3401:
  2739   00114A  EFA5  F007         	goto	l3131
  2740   00114E                     u3400:
  2741   00114E                     l3175:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2745   00114E  0E00               	movlw	0
  2746   001150  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2747   001152  0E4F               	movlw	79
  2748   001154  6F77               	movwf	efgtoa@i& (0+255),b
  2749   001156                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2752   001156  0E00               	movlw	low _dbuf
  2753   001158  2577               	addwf	efgtoa@i& (0+255),w,b
  2754   00115A  6ED9               	movwf	fsr2l,c
  2755   00115C  0E01               	movlw	high _dbuf
  2756   00115E  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2757   001160  6EDA               	movwf	fsr2h,c
  2758   001162  0E00               	movlw	0
  2759   001164  6EDF               	movwf	indf2,c
  2760   001166                     
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2763   001166  0E00               	movlw	low _dbuf
  2764   001168  6E3B               	movwf	??_efgtoa^0,c
  2765   00116A  0E01               	movlw	high _dbuf
  2766   00116C  6E3C               	movwf	(??_efgtoa+1)^0,c
  2767   00116E  5182               	movf	efgtoa@n& (0+255),w,b
  2768   001170  5E3B               	subwf	??_efgtoa^0,f,c
  2769   001172  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2770   001174  5A3C               	subwfb	(??_efgtoa+1)^0,f,c
  2771   001176  5177               	movf	efgtoa@i& (0+255),w,b
  2772   001178  243B               	addwf	??_efgtoa^0,w,c
  2773   00117A  6E01               	movwf	memcpy@d1^0,c
  2774   00117C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2775   00117E  203C               	addwfc	(??_efgtoa+1)^0,w,c
  2776   001180  6E02               	movwf	(memcpy@d1+1)^0,c
  2777   001182  0E00               	movlw	low _dbuf
  2778   001184  6E03               	movwf	memcpy@s1^0,c
  2779   001186  0E01               	movlw	high _dbuf
  2780   001188  6E04               	movwf	(memcpy@s1+1)^0,c
  2781   00118A  C082  F005         	movff	efgtoa@n,memcpy@n
  2782   00118E  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  2783   001192  ECCC  F016         	call	_memcpy	;wreg free
  2784   001196                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  2786   001196  0100               	movlb	0	; () banked
  2787   001198  5182               	movf	efgtoa@n& (0+255),w,b
  2788   00119A  5D77               	subwf	efgtoa@i& (0+255),w,b
  2789   00119C  6F82               	movwf	efgtoa@n& (0+255),b
  2790   00119E  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2791   0011A0  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2792   0011A2  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2793   0011A4                     
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  2796   0011A4  5181               	movf	efgtoa@sign& (0+255),w,b
  2797   0011A6  A4D8               	btfss	status,2,c
  2798   0011A8  EFD8  F008         	goto	u3411
  2799   0011AC  EFDB  F008         	goto	u3410
  2800   0011B0                     u3411:
  2801   0011B0  0E01               	movlw	1
  2802   0011B2  EFDC  F008         	goto	u3420
  2803   0011B6                     u3410:
  2804   0011B6  0E00               	movlw	0
  2805   0011B8                     u3420:
  2806   0011B8  6F77               	movwf	efgtoa@i& (0+255),b
  2807   0011BA  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  2808   0011BC                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  2811   0011BC  5181               	movf	efgtoa@sign& (0+255),w,b
  2812   0011BE  B4D8               	btfsc	status,2,c
  2813   0011C0  EFE4  F008         	goto	u3431
  2814   0011C4  EFE6  F008         	goto	u3430
  2815   0011C8                     u3431:
  2816   0011C8  EFF1  F008         	goto	l3189
  2817   0011CC                     u3430:
  2818   0011CC                     
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  2821   0011CC  0782               	decf	efgtoa@n& (0+255),f,b
  2822   0011CE  A0D8               	btfss	status,0,c
  2823   0011D0  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  2824   0011D2  0E00               	movlw	low _dbuf
  2825   0011D4  2582               	addwf	efgtoa@n& (0+255),w,b
  2826   0011D6  6ED9               	movwf	fsr2l,c
  2827   0011D8  0E01               	movlw	high _dbuf
  2828   0011DA  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2829   0011DC  6EDA               	movwf	fsr2h,c
  2830   0011DE  C081  FFDF         	movff	efgtoa@sign,indf2
  2831   0011E2                     l3189:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  2835   0011E2  5177               	movf	efgtoa@i& (0+255),w,b
  2836   0011E4  5F71               	subwf	efgtoa@w& (0+255),f,b
  2837   0011E6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2838   0011E8  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  2839   0011EA                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  2842   0011EA  C034  F011         	movff	efgtoa@fp,pad@fp
  2843   0011EE  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2844   0011F2  0E00               	movlw	low _dbuf
  2845   0011F4  2582               	addwf	efgtoa@n& (0+255),w,b
  2846   0011F6  6E13               	movwf	pad@buf^0,c
  2847   0011F8  0E01               	movlw	high _dbuf
  2848   0011FA  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2849   0011FC  6E14               	movwf	(pad@buf+1)^0,c
  2850   0011FE  C071  F015         	movff	efgtoa@w,pad@p
  2851   001202  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2852   001206  EC0A  F016         	call	_pad	;wreg free
  2853   00120A                     l795:
  2854   00120A  0012               	return		;funcret
  2855   00120C                     __end_of_efgtoa:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _strcpy *****************
  2859 ;; Defined at:
  2860 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2863 ;;		 -> dbuf(80), 
  2864 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2865 ;;		 -> STR_5(4), STR_2(4), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  d               2    6[COMRAM] PTR unsigned char 
  2868 ;;		 -> dbuf(80), 
  2869 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2870 ;;		 -> STR_5(4), STR_2(4), 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    0[COMRAM] PTR unsigned char 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2880 ;;      Params:         4       0       0       0       0       0       0       0       0
  2881 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2883 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        8 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_efgtoa
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text5
  2894   002F00                     __ptext5:
  2895                           	callstack 0
  2896   002F00                     _strcpy:
  2897                           	callstack 26
  2898   002F00  C003  F005         	movff	strcpy@src,strcpy@s
  2899   002F04  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  2900   002F08  C001  F007         	movff	strcpy@dest,strcpy@d
  2901   002F0C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  2902   002F10                     l2911:
  2903   002F10  C005  FFF6         	movff	strcpy@s,tblptrl
  2904   002F14  C006  FFF7         	movff	strcpy@s+1,tblptrh
  2905   002F18  4A05               	infsnz	strcpy@s^0,f,c
  2906   002F1A  2A06               	incf	(strcpy@s+1)^0,f,c
  2907   002F1C                     	if	0	;tblptru may be non-zero
  2908   002F1C                     	endif
  2909   002F1C                     	if	0	;tblptru may be non-zero
  2910   002F1C                     	endif
  2911   002F1C  C007  FFD9         	movff	strcpy@d,fsr2l
  2912   002F20  C008  FFDA         	movff	strcpy@d+1,fsr2h
  2913   002F24  4A07               	infsnz	strcpy@d^0,f,c
  2914   002F26  2A08               	incf	(strcpy@d+1)^0,f,c
  2915   002F28  0008               	tblrd		*
  2916   002F2A  CFF5 FFDF          	movff	tablat,indf2
  2917   002F2E  50DF               	movf	indf2,w,c
  2918   002F30  A4D8               	btfss	status,2,c
  2919   002F32  EF9D  F017         	goto	u2951
  2920   002F36  EF9F  F017         	goto	u2950
  2921   002F3A                     u2951:
  2922   002F3A  EF88  F017         	goto	l2911
  2923   002F3E                     u2950:
  2924   002F3E  0012               	return		;funcret
  2925   002F40                     __end_of_strcpy:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function _pad *****************
  2929 ;; Defined at:
  2930 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2933 ;;		 -> sprintf@f(11), 
  2934 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2935 ;;		 -> dbuf(80), 
  2936 ;;  p               2   20[COMRAM] int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  w               2   25[COMRAM] int 
  2939 ;;  i               2   23[COMRAM] int 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2949 ;;      Params:         6       0       0       0       0       0       0       0       0
  2950 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2951 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2952 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2953 ;;Total ram usage:       11 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 3
  2956 ;; This function calls:
  2957 ;;		_fputc
  2958 ;;		_fputs
  2959 ;; This function is called by:
  2960 ;;		_efgtoa
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text6
  2965   002C14                     __ptext6:
  2966                           	callstack 0
  2967   002C14                     _pad:
  2968                           	callstack 23
  2969   002C14                     
  2970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2971   002C14  BE16               	btfsc	(pad@p+1)^0,7,c
  2972   002C16  EF0F  F016         	goto	u2861
  2973   002C1A  EF11  F016         	goto	u2860
  2974   002C1E                     u2861:
  2975   002C1E  EF17  F016         	goto	l2877
  2976   002C22                     u2860:
  2977   002C22  C015  F01A         	movff	pad@p,pad@w
  2978   002C26  C016  F01B         	movff	pad@p+1,pad@w+1
  2979   002C2A  EF1B  F016         	goto	l780
  2980   002C2E                     l2877:
  2981   002C2E  0E00               	movlw	0
  2982   002C30  6E1B               	movwf	(pad@w+1)^0,c
  2983   002C32  0E00               	movlw	0
  2984   002C34  6E1A               	movwf	pad@w^0,c
  2985   002C36                     l780:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2988   002C36  0E00               	movlw	0
  2989   002C38  6E19               	movwf	(pad@i+1)^0,c
  2990   002C3A  0E00               	movlw	0
  2991   002C3C  6E18               	movwf	pad@i^0,c
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2994   002C3E  EF2D  F016         	goto	l2883
  2995   002C42                     l2879:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2998   002C42  0E00               	movlw	0
  2999   002C44  6E02               	movwf	(fputc@c+1)^0,c
  3000   002C46  0E20               	movlw	32
  3001   002C48  6E01               	movwf	fputc@c^0,c
  3002   002C4A  C011  F003         	movff	pad@fp,fputc@fp
  3003   002C4E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3004   002C52  EC50  F015         	call	_fputc	;wreg free
  3005   002C56                     
  3006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3007   002C56  4A18               	infsnz	pad@i^0,f,c
  3008   002C58  2A19               	incf	(pad@i+1)^0,f,c
  3009   002C5A                     l2883:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3012   002C5A  501A               	movf	pad@w^0,w,c
  3013   002C5C  5C18               	subwf	pad@i^0,w,c
  3014   002C5E  5019               	movf	(pad@i+1)^0,w,c
  3015   002C60  0A80               	xorlw	128
  3016   002C62  6E17               	movwf	??_pad^0,c
  3017   002C64  501B               	movf	(pad@w+1)^0,w,c
  3018   002C66  0A80               	xorlw	128
  3019   002C68  5817               	subwfb	??_pad^0,w,c
  3020   002C6A  A0D8               	btfss	status,0,c
  3021   002C6C  EF3A  F016         	goto	u2871
  3022   002C70  EF3C  F016         	goto	u2870
  3023   002C74                     u2871:
  3024   002C74  EF21  F016         	goto	l2879
  3025   002C78                     u2870:
  3026   002C78                     
  3027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3028   002C78  C013  F00A         	movff	pad@buf,fputs@s
  3029   002C7C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3030   002C80  C011  F00C         	movff	pad@fp,fputs@fp
  3031   002C84  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3032   002C88  EC5E  F017         	call	_fputs	;wreg free
  3033   002C8C  0012               	return		;funcret
  3034   002C8E                     __end_of_pad:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _fputs *****************
  3038 ;; Defined at:
  3039 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3042 ;;		 -> dbuf(80), 
  3043 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3044 ;;		 -> sprintf@f(11), 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  i               2   14[COMRAM] int 
  3047 ;;  c               1   13[COMRAM] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  2    9[COMRAM] int 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3057 ;;      Params:         4       0       0       0       0       0       0       0       0
  3058 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3060 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3061 ;;Total ram usage:        7 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 2
  3064 ;; This function calls:
  3065 ;;		_fputc
  3066 ;; This function is called by:
  3067 ;;		_pad
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text7
  3072   002EBC                     __ptext7:
  3073                           	callstack 0
  3074   002EBC                     _fputs:
  3075                           	callstack 23
  3076   002EBC  0E00               	movlw	0
  3077   002EBE  6E10               	movwf	(fputs@i+1)^0,c
  3078   002EC0  0E00               	movlw	0
  3079   002EC2  6E0F               	movwf	fputs@i^0,c
  3080   002EC4  EF6F  F017         	goto	l2501
  3081   002EC8                     l2497:
  3082   002EC8  C00E  F001         	movff	fputs@c,fputc@c
  3083   002ECC  6A02               	clrf	(fputc@c+1)^0,c
  3084   002ECE  C00C  F003         	movff	fputs@fp,fputc@fp
  3085   002ED2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3086   002ED6  EC50  F015         	call	_fputc	;wreg free
  3087   002EDA  4A0F               	infsnz	fputs@i^0,f,c
  3088   002EDC  2A10               	incf	(fputs@i+1)^0,f,c
  3089   002EDE                     l2501:
  3090   002EDE  500F               	movf	fputs@i^0,w,c
  3091   002EE0  240A               	addwf	fputs@s^0,w,c
  3092   002EE2  6ED9               	movwf	fsr2l,c
  3093   002EE4  5010               	movf	(fputs@i+1)^0,w,c
  3094   002EE6  200B               	addwfc	(fputs@s+1)^0,w,c
  3095   002EE8  6EDA               	movwf	fsr2h,c
  3096   002EEA  50DF               	movf	indf2,w,c
  3097   002EEC  6E0E               	movwf	fputs@c^0,c
  3098   002EEE  500E               	movf	fputs@c^0,w,c
  3099   002EF0  A4D8               	btfss	status,2,c
  3100   002EF2  EF7D  F017         	goto	u2271
  3101   002EF6  EF7F  F017         	goto	u2270
  3102   002EFA                     u2271:
  3103   002EFA  EF64  F017         	goto	l2497
  3104   002EFE                     u2270:
  3105   002EFE  0012               	return		;funcret
  3106   002F00                     __end_of_fputs:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _fputc *****************
  3110 ;; Defined at:
  3111 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  c               2    0[COMRAM] int 
  3114 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3115 ;;		 -> sprintf@f(11), 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2    0[COMRAM] int 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3127 ;;      Params:         4       0       0       0       0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3129 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3130 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3131 ;;Total ram usage:        9 bytes
  3132 ;; Hardware stack levels used: 1
  3133 ;; Hardware stack levels required when called: 1
  3134 ;; This function calls:
  3135 ;;		_putch
  3136 ;; This function is called by:
  3137 ;;		_pad
  3138 ;;		_vfpfcnvrt
  3139 ;;		_fputs
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text8
  3144   002AA0                     __ptext8:
  3145                           	callstack 0
  3146   002AA0                     _fputc:
  3147                           	callstack 26
  3148   002AA0  5003               	movf	fputc@fp^0,w,c
  3149   002AA2  1004               	iorwf	(fputc@fp+1)^0,w,c
  3150   002AA4  B4D8               	btfsc	status,2,c
  3151   002AA6  EF57  F015         	goto	u1841
  3152   002AAA  EF59  F015         	goto	u1840
  3153   002AAE                     u1841:
  3154   002AAE  EF62  F015         	goto	l2283
  3155   002AB2                     u1840:
  3156   002AB2  5003               	movf	fputc@fp^0,w,c
  3157   002AB4  1004               	iorwf	(fputc@fp+1)^0,w,c
  3158   002AB6  A4D8               	btfss	status,2,c
  3159   002AB8  EF60  F015         	goto	u1851
  3160   002ABC  EF62  F015         	goto	u1850
  3161   002AC0                     u1851:
  3162   002AC0  EF67  F015         	goto	l2285
  3163   002AC4                     u1850:
  3164   002AC4                     l2283:
  3165   002AC4  5001               	movf	fputc@c^0,w,c
  3166   002AC6  EC5C  F018         	call	_putch
  3167   002ACA  EFB4  F015         	goto	l958
  3168   002ACE                     l2285:
  3169   002ACE  EE20 F009          	lfsr	2,9
  3170   002AD2  5003               	movf	fputc@fp^0,w,c
  3171   002AD4  26D9               	addwf	fsr2l,f,c
  3172   002AD6  5004               	movf	(fputc@fp+1)^0,w,c
  3173   002AD8  22DA               	addwfc	fsr2h,f,c
  3174   002ADA  50DE               	movf	postinc2,w,c
  3175   002ADC  10DE               	iorwf	postinc2,w,c
  3176   002ADE  B4D8               	btfsc	status,2,c
  3177   002AE0  EF74  F015         	goto	u1861
  3178   002AE4  EF76  F015         	goto	u1860
  3179   002AE8                     u1861:
  3180   002AE8  EF91  F015         	goto	l2289
  3181   002AEC                     u1860:
  3182   002AEC  EE20 F009          	lfsr	2,9
  3183   002AF0  5003               	movf	fputc@fp^0,w,c
  3184   002AF2  26D9               	addwf	fsr2l,f,c
  3185   002AF4  5004               	movf	(fputc@fp+1)^0,w,c
  3186   002AF6  22DA               	addwfc	fsr2h,f,c
  3187   002AF8  EE10 F003          	lfsr	1,3
  3188   002AFC  5003               	movf	fputc@fp^0,w,c
  3189   002AFE  26E1               	addwf	fsr1l,f,c
  3190   002B00  5004               	movf	(fputc@fp+1)^0,w,c
  3191   002B02  22E2               	addwfc	fsr1h,f,c
  3192   002B04  50DE               	movf	postinc2,w,c
  3193   002B06  5CE6               	subwf	postinc1,w,c
  3194   002B08  50E6               	movf	postinc1,w,c
  3195   002B0A  0A80               	xorlw	128
  3196   002B0C  6E09               	movwf	(??_fputc+4)^0,c
  3197   002B0E  50DE               	movf	postinc2,w,c
  3198   002B10  0A80               	xorlw	128
  3199   002B12  5809               	subwfb	(??_fputc+4)^0,w,c
  3200   002B14  B0D8               	btfsc	status,0,c
  3201   002B16  EF8F  F015         	goto	u1871
  3202   002B1A  EF91  F015         	goto	u1870
  3203   002B1E                     u1871:
  3204   002B1E  EFB4  F015         	goto	l958
  3205   002B22                     u1870:
  3206   002B22                     l2289:
  3207   002B22  EE20 F003          	lfsr	2,3
  3208   002B26  5003               	movf	fputc@fp^0,w,c
  3209   002B28  26D9               	addwf	fsr2l,f,c
  3210   002B2A  5004               	movf	(fputc@fp+1)^0,w,c
  3211   002B2C  22DA               	addwfc	fsr2h,f,c
  3212   002B2E  CFDE F005          	movff	postinc2,??_fputc
  3213   002B32  CFDD F006          	movff	postdec2,??_fputc+1
  3214   002B36  C003  FFD9         	movff	fputc@fp,fsr2l
  3215   002B3A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3216   002B3E  CFDE F007          	movff	postinc2,??_fputc+2
  3217   002B42  CFDD F008          	movff	postdec2,??_fputc+3
  3218   002B46  5005               	movf	??_fputc^0,w,c
  3219   002B48  2407               	addwf	(??_fputc+2)^0,w,c
  3220   002B4A  6ED9               	movwf	fsr2l,c
  3221   002B4C  5006               	movf	(??_fputc+1)^0,w,c
  3222   002B4E  2008               	addwfc	(??_fputc+3)^0,w,c
  3223   002B50  6EDA               	movwf	fsr2h,c
  3224   002B52  C001  FFDF         	movff	fputc@c,indf2
  3225   002B56  EE20 F003          	lfsr	2,3
  3226   002B5A  5003               	movf	fputc@fp^0,w,c
  3227   002B5C  26D9               	addwf	fsr2l,f,c
  3228   002B5E  5004               	movf	(fputc@fp+1)^0,w,c
  3229   002B60  22DA               	addwfc	fsr2h,f,c
  3230   002B62  2ADE               	incf	postinc2,f,c
  3231   002B64  0E00               	movlw	0
  3232   002B66  22DD               	addwfc	postdec2,f,c
  3233   002B68                     l958:
  3234   002B68  0012               	return		;funcret
  3235   002B6A                     __end_of_fputc:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _putch *****************
  3239 ;; Defined at:
  3240 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  c               1    wreg     unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  c               1    0[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3254 ;;      Params:         0       0       0       0       0       0       0       0       0
  3255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3257 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3258 ;;Total ram usage:        0 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_fputc
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text9
  3268   0030B8                     __ptext9:
  3269                           	callstack 0
  3270   0030B8                     _putch:
  3271                           	callstack 26
  3272   0030B8  0012               	return		;funcret
  3273   0030BA                     __end_of_putch:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _memcpy *****************
  3277 ;; Defined at:
  3278 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  d1              2    0[COMRAM] PTR void 
  3281 ;;		 -> dbuf(80), 
  3282 ;;  s1              2    2[COMRAM] PTR const void 
  3283 ;;		 -> dbuf(80), 
  3284 ;;  n               2    4[COMRAM] unsigned int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3287 ;;		 -> dbuf(80), 
  3288 ;;  d               2    6[COMRAM] PTR unsigned char 
  3289 ;;		 -> dbuf(80), 
  3290 ;;  tmp             1   10[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  2    0[COMRAM] PTR void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         6       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:       11 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_efgtoa
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text10
  3314   002D98                     __ptext10:
  3315                           	callstack 0
  3316   002D98                     _memcpy:
  3317                           	callstack 26
  3318   002D98  C003  F009         	movff	memcpy@s1,memcpy@s
  3319   002D9C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3320   002DA0  C001  F007         	movff	memcpy@d1,memcpy@d
  3321   002DA4  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3322   002DA8  EFE6  F016         	goto	l2955
  3323   002DAC                     l2947:
  3324   002DAC  C009  FFD9         	movff	memcpy@s,fsr2l
  3325   002DB0  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3326   002DB4  50DF               	movf	indf2,w,c
  3327   002DB6  6E0B               	movwf	memcpy@tmp^0,c
  3328   002DB8  4A09               	infsnz	memcpy@s^0,f,c
  3329   002DBA  2A0A               	incf	(memcpy@s+1)^0,f,c
  3330   002DBC  C007  FFD9         	movff	memcpy@d,fsr2l
  3331   002DC0  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3332   002DC4  C00B  FFDF         	movff	memcpy@tmp,indf2
  3333   002DC8  4A07               	infsnz	memcpy@d^0,f,c
  3334   002DCA  2A08               	incf	(memcpy@d+1)^0,f,c
  3335   002DCC                     l2955:
  3336   002DCC  0605               	decf	memcpy@n^0,f,c
  3337   002DCE  A0D8               	btfss	status,0,c
  3338   002DD0  0606               	decf	(memcpy@n+1)^0,f,c
  3339   002DD2  2805               	incf	memcpy@n^0,w,c
  3340   002DD4  E106               	bnz	u3071
  3341   002DD6  2806               	incf	(memcpy@n+1)^0,w,c
  3342   002DD8  A4D8               	btfss	status,2,c
  3343   002DDA  EFF1  F016         	goto	u3071
  3344   002DDE  EFF3  F016         	goto	u3070
  3345   002DE2                     u3071:
  3346   002DE2  EFD6  F016         	goto	l2947
  3347   002DE6                     u3070:
  3348   002DE6  0012               	return		;funcret
  3349   002DE8                     __end_of_memcpy:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _labs *****************
  3353 ;; Defined at:
  3354 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  a               4    0[COMRAM] long 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  4    0[COMRAM] long 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         4       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        8 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_efgtoa
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text11
  3382   002C8E                     __ptext11:
  3383                           	callstack 0
  3384   002C8E                     _labs:
  3385                           	callstack 26
  3386   002C8E  BE04               	btfsc	(labs@a+3)^0,7,c
  3387   002C90  EF56  F016         	goto	u2960
  3388   002C94  5004               	movf	(labs@a+3)^0,w,c
  3389   002C96  1003               	iorwf	(labs@a+2)^0,w,c
  3390   002C98  1002               	iorwf	(labs@a+1)^0,w,c
  3391   002C9A  E106               	bnz	u2961
  3392   002C9C  0401               	decf	labs@a^0,w,c
  3393   002C9E  B0D8               	btfsc	status,0,c
  3394   002CA0  EF54  F016         	goto	u2961
  3395   002CA4  EF56  F016         	goto	u2960
  3396   002CA8                     u2961:
  3397   002CA8  EF71  F016         	goto	l937
  3398   002CAC                     u2960:
  3399   002CAC  C001  F005         	movff	labs@a,??_labs
  3400   002CB0  C002  F006         	movff	labs@a+1,??_labs+1
  3401   002CB4  C003  F007         	movff	labs@a+2,??_labs+2
  3402   002CB8  C004  F008         	movff	labs@a+3,??_labs+3
  3403   002CBC  1E05               	comf	??_labs^0,f,c
  3404   002CBE  1E06               	comf	(??_labs+1)^0,f,c
  3405   002CC0  1E07               	comf	(??_labs+2)^0,f,c
  3406   002CC2  1E08               	comf	(??_labs+3)^0,f,c
  3407   002CC4  2A05               	incf	??_labs^0,f,c
  3408   002CC6  0E00               	movlw	0
  3409   002CC8  2206               	addwfc	(??_labs+1)^0,f,c
  3410   002CCA  2207               	addwfc	(??_labs+2)^0,f,c
  3411   002CCC  2208               	addwfc	(??_labs+3)^0,f,c
  3412   002CCE  C005  F001         	movff	??_labs,?_labs
  3413   002CD2  C006  F002         	movff	??_labs+1,?_labs+1
  3414   002CD6  C007  F003         	movff	??_labs+2,?_labs+2
  3415   002CDA  C008  F004         	movff	??_labs+3,?_labs+3
  3416   002CDE  EF79  F016         	goto	l940
  3417   002CE2                     l937:
  3418   002CE2  C001  F001         	movff	labs@a,?_labs
  3419   002CE6  C002  F002         	movff	labs@a+1,?_labs+1
  3420   002CEA  C003  F003         	movff	labs@a+2,?_labs+2
  3421   002CEE  C004  F004         	movff	labs@a+3,?_labs+3
  3422   002CF2                     l940:
  3423   002CF2  0012               	return		;funcret
  3424   002CF4                     __end_of_labs:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _floorf *****************
  3428 ;; Defined at:
  3429 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  x               4   25[COMRAM] float 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  u               4   41[COMRAM] struct .
  3434 ;;  m               4   35[COMRAM] unsigned long 
  3435 ;;  e               2   39[COMRAM] int 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  4   25[COMRAM] float 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3445 ;;      Params:         4       0       0       0       0       0       0       0       0
  3446 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3447 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3448 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3449 ;;Total ram usage:       20 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_efgtoa
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text12
  3459   0021A4                     __ptext12:
  3460                           	callstack 0
  3461   0021A4                     _floorf:
  3462                           	callstack 26
  3463   0021A4  C0B0  F02A         	movff	floorf@F526,floorf@u
  3464   0021A8  C0B1  F02B         	movff	floorf@F526+1,floorf@u+1
  3465   0021AC  C0B2  F02C         	movff	floorf@F526+2,floorf@u+2
  3466   0021B0  C0B3  F02D         	movff	floorf@F526+3,floorf@u+3
  3467   0021B4  C01A  F02A         	movff	floorf@x,floorf@u
  3468   0021B8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  3469   0021BC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  3470   0021C0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  3471   0021C4  0E81               	movlw	129
  3472   0021C6  6E1E               	movwf	??_floorf^0,c
  3473   0021C8  0EFF               	movlw	255
  3474   0021CA  6E1F               	movwf	(??_floorf+1)^0,c
  3475   0021CC  C02A  F020         	movff	floorf@u,??_floorf+2
  3476   0021D0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  3477   0021D4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  3478   0021D8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  3479   0021DC  0E18               	movlw	24
  3480   0021DE  EFF6  F010         	goto	u2970
  3481   0021E2                     u2975:
  3482   0021E2  90D8               	bcf	status,0,c
  3483   0021E4  3223               	rrcf	(??_floorf+5)^0,f,c
  3484   0021E6  3222               	rrcf	(??_floorf+4)^0,f,c
  3485   0021E8  3221               	rrcf	(??_floorf+3)^0,f,c
  3486   0021EA  3220               	rrcf	(??_floorf+2)^0,f,c
  3487   0021EC                     u2970:
  3488   0021EC  2EE8               	decfsz	wreg,f,c
  3489   0021EE  EFF1  F010         	goto	u2975
  3490   0021F2  5020               	movf	(??_floorf+2)^0,w,c
  3491   0021F4  241E               	addwf	??_floorf^0,w,c
  3492   0021F6  6E28               	movwf	floorf@e^0,c
  3493   0021F8  0E00               	movlw	0
  3494   0021FA  201F               	addwfc	(??_floorf+1)^0,w,c
  3495   0021FC  6E29               	movwf	(floorf@e+1)^0,c
  3496   0021FE  BE29               	btfsc	(floorf@e+1)^0,7,c
  3497   002200  EF0B  F011         	goto	u2981
  3498   002204  5029               	movf	(floorf@e+1)^0,w,c
  3499   002206  E109               	bnz	u2980
  3500   002208  0E17               	movlw	23
  3501   00220A  5C28               	subwf	floorf@e^0,w,c
  3502   00220C  A0D8               	btfss	status,0,c
  3503   00220E  EF0B  F011         	goto	u2981
  3504   002212  EF0D  F011         	goto	u2980
  3505   002216                     u2981:
  3506   002216  EF17  F011         	goto	l2923
  3507   00221A                     u2980:
  3508   00221A                     l2921:
  3509   00221A  C01A  F01A         	movff	floorf@x,?_floorf
  3510   00221E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  3511   002222  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  3512   002226  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  3513   00222A  EFDA  F011         	goto	l912
  3514   00222E                     l2923:
  3515   00222E  BE29               	btfsc	(floorf@e+1)^0,7,c
  3516   002230  EF1C  F011         	goto	u2991
  3517   002234  EF1E  F011         	goto	u2990
  3518   002238                     u2991:
  3519   002238  EF8E  F011         	goto	l2933
  3520   00223C                     u2990:
  3521   00223C  C028  F01E         	movff	floorf@e,??_floorf
  3522   002240  0EFF               	movlw	255
  3523   002242  6E1F               	movwf	(??_floorf+1)^0,c
  3524   002244  0EFF               	movlw	255
  3525   002246  6E20               	movwf	(??_floorf+2)^0,c
  3526   002248  0E7F               	movlw	127
  3527   00224A  6E21               	movwf	(??_floorf+3)^0,c
  3528   00224C  0E00               	movlw	0
  3529   00224E  6E22               	movwf	(??_floorf+4)^0,c
  3530   002250                     u3005:
  3531   002250  661E               	tstfsz	??_floorf^0,c
  3532   002252  EF2D  F011         	goto	u3006
  3533   002256  EF35  F011         	goto	u3007
  3534   00225A                     u3006:
  3535   00225A  3422               	rlcf	(??_floorf+4)^0,w,c
  3536   00225C  3222               	rrcf	(??_floorf+4)^0,f,c
  3537   00225E  3221               	rrcf	(??_floorf+3)^0,f,c
  3538   002260  3220               	rrcf	(??_floorf+2)^0,f,c
  3539   002262  321F               	rrcf	(??_floorf+1)^0,f,c
  3540   002264  2E1E               	decfsz	??_floorf^0,f,c
  3541   002266  EF28  F011         	goto	u3005
  3542   00226A                     u3007:
  3543   00226A  C01F  F024         	movff	??_floorf+1,floorf@m
  3544   00226E  C020  F025         	movff	??_floorf+2,floorf@m+1
  3545   002272  C021  F026         	movff	??_floorf+3,floorf@m+2
  3546   002276  C022  F027         	movff	??_floorf+4,floorf@m+3
  3547   00227A  5024               	movf	floorf@m^0,w,c
  3548   00227C  142A               	andwf	floorf@u^0,w,c
  3549   00227E  6E1E               	movwf	??_floorf^0,c
  3550   002280  5025               	movf	(floorf@m+1)^0,w,c
  3551   002282  142B               	andwf	(floorf@u+1)^0,w,c
  3552   002284  6E1F               	movwf	(??_floorf+1)^0,c
  3553   002286  5026               	movf	(floorf@m+2)^0,w,c
  3554   002288  142C               	andwf	(floorf@u+2)^0,w,c
  3555   00228A  6E20               	movwf	(??_floorf+2)^0,c
  3556   00228C  5027               	movf	(floorf@m+3)^0,w,c
  3557   00228E  142D               	andwf	(floorf@u+3)^0,w,c
  3558   002290  6E21               	movwf	(??_floorf+3)^0,c
  3559   002292  501E               	movf	??_floorf^0,w,c
  3560   002294  101F               	iorwf	(??_floorf+1)^0,w,c
  3561   002296  1020               	iorwf	(??_floorf+2)^0,w,c
  3562   002298  1021               	iorwf	(??_floorf+3)^0,w,c
  3563   00229A  A4D8               	btfss	status,2,c
  3564   00229C  EF52  F011         	goto	u3011
  3565   0022A0  EF54  F011         	goto	u3010
  3566   0022A4                     u3011:
  3567   0022A4  EF56  F011         	goto	l2929
  3568   0022A8                     u3010:
  3569   0022A8  EF0D  F011         	goto	l2921
  3570   0022AC                     l2929:
  3571   0022AC  C02A  F01E         	movff	floorf@u,??_floorf
  3572   0022B0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3573   0022B4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3574   0022B8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3575   0022BC  0E20               	movlw	32
  3576   0022BE  EF66  F011         	goto	u3020
  3577   0022C2                     u3025:
  3578   0022C2  90D8               	bcf	status,0,c
  3579   0022C4  3221               	rrcf	(??_floorf+3)^0,f,c
  3580   0022C6  3220               	rrcf	(??_floorf+2)^0,f,c
  3581   0022C8  321F               	rrcf	(??_floorf+1)^0,f,c
  3582   0022CA  321E               	rrcf	??_floorf^0,f,c
  3583   0022CC                     u3020:
  3584   0022CC  2EE8               	decfsz	wreg,f,c
  3585   0022CE  EF61  F011         	goto	u3025
  3586   0022D2  501E               	movf	??_floorf^0,w,c
  3587   0022D4  101F               	iorwf	(??_floorf+1)^0,w,c
  3588   0022D6  1020               	iorwf	(??_floorf+2)^0,w,c
  3589   0022D8  1021               	iorwf	(??_floorf+3)^0,w,c
  3590   0022DA  B4D8               	btfsc	status,2,c
  3591   0022DC  EF72  F011         	goto	u3031
  3592   0022E0  EF74  F011         	goto	u3030
  3593   0022E4                     u3031:
  3594   0022E4  EF7C  F011         	goto	l915
  3595   0022E8                     u3030:
  3596   0022E8  5024               	movf	floorf@m^0,w,c
  3597   0022EA  262A               	addwf	floorf@u^0,f,c
  3598   0022EC  5025               	movf	(floorf@m+1)^0,w,c
  3599   0022EE  222B               	addwfc	(floorf@u+1)^0,f,c
  3600   0022F0  5026               	movf	(floorf@m+2)^0,w,c
  3601   0022F2  222C               	addwfc	(floorf@u+2)^0,f,c
  3602   0022F4  5027               	movf	(floorf@m+3)^0,w,c
  3603   0022F6  222D               	addwfc	(floorf@u+3)^0,f,c
  3604   0022F8                     l915:
  3605   0022F8  1C24               	comf	floorf@m^0,w,c
  3606   0022FA  6E1E               	movwf	??_floorf^0,c
  3607   0022FC  1C25               	comf	(floorf@m+1)^0,w,c
  3608   0022FE  6E1F               	movwf	(??_floorf+1)^0,c
  3609   002300  1C26               	comf	(floorf@m+2)^0,w,c
  3610   002302  6E20               	movwf	(??_floorf+2)^0,c
  3611   002304  1C27               	comf	(floorf@m+3)^0,w,c
  3612   002306  6E21               	movwf	(??_floorf+3)^0,c
  3613   002308  501E               	movf	??_floorf^0,w,c
  3614   00230A  162A               	andwf	floorf@u^0,f,c
  3615   00230C  501F               	movf	(??_floorf+1)^0,w,c
  3616   00230E  162B               	andwf	(floorf@u+1)^0,f,c
  3617   002310  5020               	movf	(??_floorf+2)^0,w,c
  3618   002312  162C               	andwf	(floorf@u+2)^0,f,c
  3619   002314  5021               	movf	(??_floorf+3)^0,w,c
  3620   002316  162D               	andwf	(floorf@u+3)^0,f,c
  3621   002318  EFD2  F011         	goto	l2941
  3622   00231C                     l2933:
  3623   00231C  C02A  F01E         	movff	floorf@u,??_floorf
  3624   002320  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  3625   002324  C02C  F020         	movff	floorf@u+2,??_floorf+2
  3626   002328  C02D  F021         	movff	floorf@u+3,??_floorf+3
  3627   00232C  0E20               	movlw	32
  3628   00232E  EF9E  F011         	goto	u3040
  3629   002332                     u3045:
  3630   002332  90D8               	bcf	status,0,c
  3631   002334  3221               	rrcf	(??_floorf+3)^0,f,c
  3632   002336  3220               	rrcf	(??_floorf+2)^0,f,c
  3633   002338  321F               	rrcf	(??_floorf+1)^0,f,c
  3634   00233A  321E               	rrcf	??_floorf^0,f,c
  3635   00233C                     u3040:
  3636   00233C  2EE8               	decfsz	wreg,f,c
  3637   00233E  EF99  F011         	goto	u3045
  3638   002342  501E               	movf	??_floorf^0,w,c
  3639   002344  101F               	iorwf	(??_floorf+1)^0,w,c
  3640   002346  1020               	iorwf	(??_floorf+2)^0,w,c
  3641   002348  1021               	iorwf	(??_floorf+3)^0,w,c
  3642   00234A  A4D8               	btfss	status,2,c
  3643   00234C  EFAA  F011         	goto	u3051
  3644   002350  EFAC  F011         	goto	u3050
  3645   002354                     u3051:
  3646   002354  EFB6  F011         	goto	l2937
  3647   002358                     u3050:
  3648   002358  0E00               	movlw	0
  3649   00235A  6E2A               	movwf	floorf@u^0,c
  3650   00235C  0E00               	movlw	0
  3651   00235E  6E2B               	movwf	(floorf@u+1)^0,c
  3652   002360  0E00               	movlw	0
  3653   002362  6E2C               	movwf	(floorf@u+2)^0,c
  3654   002364  0E00               	movlw	0
  3655   002366  6E2D               	movwf	(floorf@u+3)^0,c
  3656   002368  EFD2  F011         	goto	l2941
  3657   00236C                     l2937:
  3658   00236C  90D8               	bcf	status,0,c
  3659   00236E  342A               	rlcf	floorf@u^0,w,c
  3660   002370  6E1E               	movwf	??_floorf^0,c
  3661   002372  342B               	rlcf	(floorf@u+1)^0,w,c
  3662   002374  6E1F               	movwf	(??_floorf+1)^0,c
  3663   002376  342C               	rlcf	(floorf@u+2)^0,w,c
  3664   002378  6E20               	movwf	(??_floorf+2)^0,c
  3665   00237A  342D               	rlcf	(floorf@u+3)^0,w,c
  3666   00237C  6E21               	movwf	(??_floorf+3)^0,c
  3667   00237E  501E               	movf	??_floorf^0,w,c
  3668   002380  101F               	iorwf	(??_floorf+1)^0,w,c
  3669   002382  1020               	iorwf	(??_floorf+2)^0,w,c
  3670   002384  1021               	iorwf	(??_floorf+3)^0,w,c
  3671   002386  B4D8               	btfsc	status,2,c
  3672   002388  EFC8  F011         	goto	u3061
  3673   00238C  EFCA  F011         	goto	u3060
  3674   002390                     u3061:
  3675   002390  EFD2  F011         	goto	l2941
  3676   002394                     u3060:
  3677   002394  0E00               	movlw	0
  3678   002396  6E2A               	movwf	floorf@u^0,c
  3679   002398  0E00               	movlw	0
  3680   00239A  6E2B               	movwf	(floorf@u+1)^0,c
  3681   00239C  0E80               	movlw	128
  3682   00239E  6E2C               	movwf	(floorf@u+2)^0,c
  3683   0023A0  0EBF               	movlw	191
  3684   0023A2  6E2D               	movwf	(floorf@u+3)^0,c
  3685   0023A4                     l2941:
  3686   0023A4  C02A  F01A         	movff	floorf@u,?_floorf
  3687   0023A8  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  3688   0023AC  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  3689   0023B0  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  3690   0023B4                     l912:
  3691   0023B4  0012               	return		;funcret
  3692   0023B6                     __end_of_floorf:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function ___fpclassifyf *****************
  3696 ;; Defined at:
  3697 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  x               4    0[COMRAM] float 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  u               4   10[COMRAM] struct .
  3702 ;;  e               2    8[COMRAM] int 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  2    0[COMRAM] int 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3712 ;;      Params:         4       0       0       0       0       0       0       0       0
  3713 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3714 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3715 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3716 ;;Total ram usage:       14 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_efgtoa
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text13
  3726   0028BE                     __ptext13:
  3727                           	callstack 0
  3728   0028BE                     ___fpclassifyf:
  3729                           	callstack 26
  3730   0028BE  C0B4  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3731   0028C2  C0B5  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3732   0028C6  C0B6  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3733   0028CA  C0B7  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3734   0028CE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3735   0028D2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3736   0028D6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3737   0028DA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3738   0028DE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3739   0028E2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3740   0028E6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3741   0028EA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3742   0028EE  0E18               	movlw	24
  3743   0028F0  EF7F  F014         	goto	u2880
  3744   0028F4                     u2885:
  3745   0028F4  90D8               	bcf	status,0,c
  3746   0028F6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3747   0028F8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3748   0028FA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3749   0028FC  3205               	rrcf	??___fpclassifyf^0,f,c
  3750   0028FE                     u2880:
  3751   0028FE  2EE8               	decfsz	wreg,f,c
  3752   002900  EF7A  F014         	goto	u2885
  3753   002904  5005               	movf	??___fpclassifyf^0,w,c
  3754   002906  6E09               	movwf	___fpclassifyf@e^0,c
  3755   002908  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3756   00290A  5009               	movf	___fpclassifyf@e^0,w,c
  3757   00290C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3758   00290E  A4D8               	btfss	status,2,c
  3759   002910  EF8C  F014         	goto	u2891
  3760   002914  EF8E  F014         	goto	u2890
  3761   002918                     u2891:
  3762   002918  EFAE  F014         	goto	l2899
  3763   00291C                     u2890:
  3764   00291C  90D8               	bcf	status,0,c
  3765   00291E  340B               	rlcf	___fpclassifyf@u^0,w,c
  3766   002920  6E05               	movwf	??___fpclassifyf^0,c
  3767   002922  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3768   002924  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3769   002926  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3770   002928  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3771   00292A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3772   00292C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3773   00292E  5005               	movf	??___fpclassifyf^0,w,c
  3774   002930  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3775   002932  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3776   002934  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3777   002936  A4D8               	btfss	status,2,c
  3778   002938  EFA0  F014         	goto	u2901
  3779   00293C  EFA2  F014         	goto	u2900
  3780   002940                     u2901:
  3781   002940  EFA8  F014         	goto	l2895
  3782   002944                     u2900:
  3783   002944  0E00               	movlw	0
  3784   002946  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3785   002948  0E02               	movlw	2
  3786   00294A  6E01               	movwf	?___fpclassifyf^0,c
  3787   00294C  EFDD  F014         	goto	l880
  3788   002950                     l2895:
  3789   002950  0E00               	movlw	0
  3790   002952  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3791   002954  0E03               	movlw	3
  3792   002956  6E01               	movwf	?___fpclassifyf^0,c
  3793   002958  EFDD  F014         	goto	l880
  3794   00295C                     l2899:
  3795   00295C  2809               	incf	___fpclassifyf@e^0,w,c
  3796   00295E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3797   002960  A4D8               	btfss	status,2,c
  3798   002962  EFB5  F014         	goto	u2911
  3799   002966  EFB7  F014         	goto	u2910
  3800   00296A                     u2911:
  3801   00296A  EFD9  F014         	goto	l2905
  3802   00296E                     u2910:
  3803   00296E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3804   002972  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3805   002976  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3806   00297A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3807   00297E  0E09               	movlw	9
  3808   002980                     u2925:
  3809   002980  90D8               	bcf	status,0,c
  3810   002982  3605               	rlcf	??___fpclassifyf^0,f,c
  3811   002984  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  3812   002986  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  3813   002988  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  3814   00298A  2EE8               	decfsz	wreg,f,c
  3815   00298C  EFC0  F014         	goto	u2925
  3816   002990  5005               	movf	??___fpclassifyf^0,w,c
  3817   002992  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3818   002994  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3819   002996  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3820   002998  B4D8               	btfsc	status,2,c
  3821   00299A  EFD1  F014         	goto	u2931
  3822   00299E  EFD4  F014         	goto	u2930
  3823   0029A2                     u2931:
  3824   0029A2  0E01               	movlw	1
  3825   0029A4  EFD5  F014         	goto	u2940
  3826   0029A8                     u2930:
  3827   0029A8  0E00               	movlw	0
  3828   0029AA                     u2940:
  3829   0029AA  6E01               	movwf	?___fpclassifyf^0,c
  3830   0029AC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  3831   0029AE  EFDD  F014         	goto	l880
  3832   0029B2                     l2905:
  3833   0029B2  0E00               	movlw	0
  3834   0029B4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3835   0029B6  0E04               	movlw	4
  3836   0029B8  6E01               	movwf	?___fpclassifyf^0,c
  3837   0029BA                     l880:
  3838   0029BA  0012               	return		;funcret
  3839   0029BC                     __end_of___fpclassifyf:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function ___fltol *****************
  3843 ;; Defined at:
  3844 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  f1              4    0[COMRAM] int 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  exp1            1    9[COMRAM] unsigned char 
  3849 ;;  sign1           1    8[COMRAM] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  4    0[COMRAM] long 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3859 ;;      Params:         4       0       0       0       0       0       0       0       0
  3860 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3861 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3862 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3863 ;;Total ram usage:       10 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_efgtoa
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text14
  3873   0026B4                     __ptext14:
  3874                           	callstack 0
  3875   0026B4                     ___fltol:
  3876                           	callstack 26
  3877   0026B4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3878   0026B6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3879   0026B8  6E0A               	movwf	___fltol@exp1^0,c
  3880   0026BA  500A               	movf	___fltol@exp1^0,w,c
  3881   0026BC  A4D8               	btfss	status,2,c
  3882   0026BE  EF63  F013         	goto	u2791
  3883   0026C2  EF65  F013         	goto	u2790
  3884   0026C6                     u2791:
  3885   0026C6  EF6F  F013         	goto	l2835
  3886   0026CA                     u2790:
  3887   0026CA                     l2831:
  3888   0026CA  0E00               	movlw	0
  3889   0026CC  6E01               	movwf	?___fltol^0,c
  3890   0026CE  0E00               	movlw	0
  3891   0026D0  6E02               	movwf	(?___fltol+1)^0,c
  3892   0026D2  0E00               	movlw	0
  3893   0026D4  6E03               	movwf	(?___fltol+2)^0,c
  3894   0026D6  0E00               	movlw	0
  3895   0026D8  6E04               	movwf	(?___fltol+3)^0,c
  3896   0026DA  EFDC  F013         	goto	l365
  3897   0026DE                     l2835:
  3898   0026DE  C001  F005         	movff	___fltol@f1,??___fltol
  3899   0026E2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3900   0026E6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3901   0026EA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3902   0026EE  0E20               	movlw	32
  3903   0026F0  EF7F  F013         	goto	u2800
  3904   0026F4                     u2805:
  3905   0026F4  90D8               	bcf	status,0,c
  3906   0026F6  3208               	rrcf	(??___fltol+3)^0,f,c
  3907   0026F8  3207               	rrcf	(??___fltol+2)^0,f,c
  3908   0026FA  3206               	rrcf	(??___fltol+1)^0,f,c
  3909   0026FC  3205               	rrcf	??___fltol^0,f,c
  3910   0026FE                     u2800:
  3911   0026FE  2EE8               	decfsz	wreg,f,c
  3912   002700  EF7A  F013         	goto	u2805
  3913   002704  5005               	movf	??___fltol^0,w,c
  3914   002706  6E09               	movwf	___fltol@sign1^0,c
  3915   002708  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3916   00270A  0EFF               	movlw	255
  3917   00270C  1601               	andwf	___fltol@f1^0,f,c
  3918   00270E  0EFF               	movlw	255
  3919   002710  1602               	andwf	(___fltol@f1+1)^0,f,c
  3920   002712  0EFF               	movlw	255
  3921   002714  1603               	andwf	(___fltol@f1+2)^0,f,c
  3922   002716  0E00               	movlw	0
  3923   002718  1604               	andwf	(___fltol@f1+3)^0,f,c
  3924   00271A  0E96               	movlw	150
  3925   00271C  5E0A               	subwf	___fltol@exp1^0,f,c
  3926   00271E  BE0A               	btfsc	___fltol@exp1^0,7,c
  3927   002720  EF96  F013         	goto	u2810
  3928   002724  EF94  F013         	goto	u2811
  3929   002728                     u2811:
  3930   002728  EFAC  F013         	goto	l2855
  3931   00272C                     u2810:
  3932   00272C  500A               	movf	___fltol@exp1^0,w,c
  3933   00272E  0A80               	xorlw	128
  3934   002730  0F97               	addlw	151
  3935   002732  B0D8               	btfsc	status,0,c
  3936   002734  EF9E  F013         	goto	u2821
  3937   002738  EFA0  F013         	goto	u2820
  3938   00273C                     u2821:
  3939   00273C  EFA2  F013         	goto	l2851
  3940   002740                     u2820:
  3941   002740  EF65  F013         	goto	l2831
  3942   002744                     l2851:
  3943   002744  90D8               	bcf	status,0,c
  3944   002746  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3945   002748  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3946   00274A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3947   00274C  3201               	rrcf	___fltol@f1^0,f,c
  3948   00274E  3E0A               	incfsz	___fltol@exp1^0,f,c
  3949   002750  EFA2  F013         	goto	l2851
  3950   002754  EFC4  F013         	goto	l2865
  3951   002758                     l2855:
  3952   002758  0E1F               	movlw	31
  3953   00275A  640A               	cpfsgt	___fltol@exp1^0,c
  3954   00275C  EFB2  F013         	goto	u2831
  3955   002760  EFB4  F013         	goto	u2830
  3956   002764                     u2831:
  3957   002764  EFBC  F013         	goto	l2863
  3958   002768                     u2830:
  3959   002768  EF65  F013         	goto	l2831
  3960   00276C                     l2861:
  3961   00276C  90D8               	bcf	status,0,c
  3962   00276E  3601               	rlcf	___fltol@f1^0,f,c
  3963   002770  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3964   002772  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3965   002774  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3966   002776  060A               	decf	___fltol@exp1^0,f,c
  3967   002778                     l2863:
  3968   002778  500A               	movf	___fltol@exp1^0,w,c
  3969   00277A  A4D8               	btfss	status,2,c
  3970   00277C  EFC2  F013         	goto	u2841
  3971   002780  EFC4  F013         	goto	u2840
  3972   002784                     u2841:
  3973   002784  EFB6  F013         	goto	l2861
  3974   002788                     u2840:
  3975   002788                     l2865:
  3976   002788  5009               	movf	___fltol@sign1^0,w,c
  3977   00278A  B4D8               	btfsc	status,2,c
  3978   00278C  EFCA  F013         	goto	u2851
  3979   002790  EFCC  F013         	goto	u2850
  3980   002794                     u2851:
  3981   002794  EFD4  F013         	goto	l2869
  3982   002798                     u2850:
  3983   002798  1E04               	comf	(___fltol@f1+3)^0,f,c
  3984   00279A  1E03               	comf	(___fltol@f1+2)^0,f,c
  3985   00279C  1E02               	comf	(___fltol@f1+1)^0,f,c
  3986   00279E  6C01               	negf	___fltol@f1^0,c
  3987   0027A0  0E00               	movlw	0
  3988   0027A2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3989   0027A4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3990   0027A6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3991   0027A8                     l2869:
  3992   0027A8  C001  F001         	movff	___fltol@f1,?___fltol
  3993   0027AC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3994   0027B0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3995   0027B4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3996   0027B8                     l365:
  3997   0027B8  0012               	return		;funcret
  3998   0027BA                     __end_of___fltol:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function ___flsub *****************
  4002 ;; Defined at:
  4003 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  b               4   39[COMRAM] long 
  4006 ;;  a               4   43[COMRAM] long 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  4   39[COMRAM] long 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4018 ;;      Params:         8       0       0       0       0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4021 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4022 ;;Total ram usage:        8 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 1
  4025 ;; This function calls:
  4026 ;;		___fladd
  4027 ;; This function is called by:
  4028 ;;		_efgtoa
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text15
  4033   002E30                     __ptext15:
  4034                           	callstack 0
  4035   002E30                     ___flsub:
  4036                           	callstack 25
  4037   002E30  0E00               	movlw	0
  4038   002E32  1A2C               	xorwf	___flsub@a^0,f,c
  4039   002E34  0E00               	movlw	0
  4040   002E36  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4041   002E38  0E00               	movlw	0
  4042   002E3A  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4043   002E3C  0E80               	movlw	128
  4044   002E3E  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4045   002E40  C028  F001         	movff	___flsub@b,___fladd@b
  4046   002E44  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4047   002E48  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4048   002E4C  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4049   002E50  C02C  F005         	movff	___flsub@a,___fladd@a
  4050   002E54  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4051   002E58  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4052   002E5C  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4053   002E60  EC06  F009         	call	___fladd	;wreg free
  4054   002E64  C001  F028         	movff	?___fladd,?___flsub
  4055   002E68  C002  F029         	movff	?___fladd+1,?___flsub+1
  4056   002E6C  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4057   002E70  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4058   002E74  0012               	return		;funcret
  4059   002E76                     __end_of___flsub:
  4060                           	callstack 0
  4061                           
  4062 ;; *************** function ___fladd *****************
  4063 ;; Defined at:
  4064 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  b               4    0[COMRAM] long 
  4067 ;;  a               4    4[COMRAM] long 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  grs             1   15[COMRAM] unsigned char 
  4070 ;;  bexp            1   14[COMRAM] unsigned char 
  4071 ;;  aexp            1   13[COMRAM] unsigned char 
  4072 ;;  signs           1   12[COMRAM] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  4    0[COMRAM] unsigned char 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4082 ;;      Params:         8       0       0       0       0       0       0       0       0
  4083 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4084 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4085 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4086 ;;Total ram usage:       16 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		___flsub
  4092 ;;		_efgtoa
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text16
  4097   00120C                     __ptext16:
  4098                           	callstack 0
  4099   00120C                     ___fladd:
  4100                           	callstack 25
  4101   00120C  5004               	movf	(___fladd@b+3)^0,w,c
  4102   00120E  0B80               	andlw	128
  4103   001210  6E0D               	movwf	___fladd@signs^0,c
  4104   001212  5004               	movf	(___fladd@b+3)^0,w,c
  4105   001214  2404               	addwf	(___fladd@b+3)^0,w,c
  4106   001216  6E0F               	movwf	___fladd@bexp^0,c
  4107   001218  AE03               	btfss	(___fladd@b+2)^0,7,c
  4108   00121A  EF11  F009         	goto	u1881
  4109   00121E  EF13  F009         	goto	u1880
  4110   001222                     u1881:
  4111   001222  EF14  F009         	goto	l2299
  4112   001226                     u1880:
  4113   001226  800F               	bsf	___fladd@bexp^0,0,c
  4114   001228                     l2299:
  4115   001228  500F               	movf	___fladd@bexp^0,w,c
  4116   00122A  B4D8               	btfsc	status,2,c
  4117   00122C  EF1A  F009         	goto	u1891
  4118   001230  EF1C  F009         	goto	u1890
  4119   001234                     u1891:
  4120   001234  EF31  F009         	goto	l2309
  4121   001238                     u1890:
  4122   001238  280F               	incf	___fladd@bexp^0,w,c
  4123   00123A  A4D8               	btfss	status,2,c
  4124   00123C  EF22  F009         	goto	u1901
  4125   001240  EF24  F009         	goto	u1900
  4126   001244                     u1901:
  4127   001244  EF2C  F009         	goto	l2305
  4128   001248                     u1900:
  4129   001248  0E00               	movlw	0
  4130   00124A  6E01               	movwf	___fladd@b^0,c
  4131   00124C  0E00               	movlw	0
  4132   00124E  6E02               	movwf	(___fladd@b+1)^0,c
  4133   001250  0E00               	movlw	0
  4134   001252  6E03               	movwf	(___fladd@b+2)^0,c
  4135   001254  0E00               	movlw	0
  4136   001256  6E04               	movwf	(___fladd@b+3)^0,c
  4137   001258                     l2305:
  4138   001258  8E03               	bsf	(___fladd@b+2)^0,7,c
  4139   00125A  0E00               	movlw	0
  4140   00125C  6E04               	movwf	(___fladd@b+3)^0,c
  4141   00125E  EF39  F009         	goto	l2311
  4142   001262                     l2309:
  4143   001262  0E00               	movlw	0
  4144   001264  6E01               	movwf	___fladd@b^0,c
  4145   001266  0E00               	movlw	0
  4146   001268  6E02               	movwf	(___fladd@b+1)^0,c
  4147   00126A  0E00               	movlw	0
  4148   00126C  6E03               	movwf	(___fladd@b+2)^0,c
  4149   00126E  0E00               	movlw	0
  4150   001270  6E04               	movwf	(___fladd@b+3)^0,c
  4151   001272                     l2311:
  4152   001272  5008               	movf	(___fladd@a+3)^0,w,c
  4153   001274  0B80               	andlw	128
  4154   001276  6E0E               	movwf	___fladd@aexp^0,c
  4155   001278  500D               	movf	___fladd@signs^0,w,c
  4156   00127A  180E               	xorwf	___fladd@aexp^0,w,c
  4157   00127C  B4D8               	btfsc	status,2,c
  4158   00127E  EF43  F009         	goto	u1911
  4159   001282  EF45  F009         	goto	u1910
  4160   001286                     u1911:
  4161   001286  EF46  F009         	goto	l2317
  4162   00128A                     u1910:
  4163   00128A  8C0D               	bsf	___fladd@signs^0,6,c
  4164   00128C                     l2317:
  4165   00128C  5008               	movf	(___fladd@a+3)^0,w,c
  4166   00128E  2408               	addwf	(___fladd@a+3)^0,w,c
  4167   001290  6E0E               	movwf	___fladd@aexp^0,c
  4168   001292  AE07               	btfss	(___fladd@a+2)^0,7,c
  4169   001294  EF4E  F009         	goto	u1921
  4170   001298  EF50  F009         	goto	u1920
  4171   00129C                     u1921:
  4172   00129C  EF51  F009         	goto	l2323
  4173   0012A0                     u1920:
  4174   0012A0  800E               	bsf	___fladd@aexp^0,0,c
  4175   0012A2                     l2323:
  4176   0012A2  500E               	movf	___fladd@aexp^0,w,c
  4177   0012A4  B4D8               	btfsc	status,2,c
  4178   0012A6  EF57  F009         	goto	u1931
  4179   0012AA  EF59  F009         	goto	u1930
  4180   0012AE                     u1931:
  4181   0012AE  EF6E  F009         	goto	l2333
  4182   0012B2                     u1930:
  4183   0012B2  280E               	incf	___fladd@aexp^0,w,c
  4184   0012B4  A4D8               	btfss	status,2,c
  4185   0012B6  EF5F  F009         	goto	u1941
  4186   0012BA  EF61  F009         	goto	u1940
  4187   0012BE                     u1941:
  4188   0012BE  EF69  F009         	goto	l2329
  4189   0012C2                     u1940:
  4190   0012C2  0E00               	movlw	0
  4191   0012C4  6E05               	movwf	___fladd@a^0,c
  4192   0012C6  0E00               	movlw	0
  4193   0012C8  6E06               	movwf	(___fladd@a+1)^0,c
  4194   0012CA  0E00               	movlw	0
  4195   0012CC  6E07               	movwf	(___fladd@a+2)^0,c
  4196   0012CE  0E00               	movlw	0
  4197   0012D0  6E08               	movwf	(___fladd@a+3)^0,c
  4198   0012D2                     l2329:
  4199   0012D2  8E07               	bsf	(___fladd@a+2)^0,7,c
  4200   0012D4  0E00               	movlw	0
  4201   0012D6  6E08               	movwf	(___fladd@a+3)^0,c
  4202   0012D8  EF76  F009         	goto	l2335
  4203   0012DC                     l2333:
  4204   0012DC  0E00               	movlw	0
  4205   0012DE  6E05               	movwf	___fladd@a^0,c
  4206   0012E0  0E00               	movlw	0
  4207   0012E2  6E06               	movwf	(___fladd@a+1)^0,c
  4208   0012E4  0E00               	movlw	0
  4209   0012E6  6E07               	movwf	(___fladd@a+2)^0,c
  4210   0012E8  0E00               	movlw	0
  4211   0012EA  6E08               	movwf	(___fladd@a+3)^0,c
  4212   0012EC                     l2335:
  4213   0012EC  500F               	movf	___fladd@bexp^0,w,c
  4214   0012EE  5C0E               	subwf	___fladd@aexp^0,w,c
  4215   0012F0  B0D8               	btfsc	status,0,c
  4216   0012F2  EF7D  F009         	goto	u1951
  4217   0012F6  EF7F  F009         	goto	u1950
  4218   0012FA                     u1951:
  4219   0012FA  EFA6  F009         	goto	l2371
  4220   0012FE                     u1950:
  4221   0012FE  AC0D               	btfss	___fladd@signs^0,6,c
  4222   001300  EF84  F009         	goto	u1961
  4223   001304  EF86  F009         	goto	u1960
  4224   001308                     u1961:
  4225   001308  EF88  F009         	goto	l2341
  4226   00130C                     u1960:
  4227   00130C  0E80               	movlw	128
  4228   00130E  1A0D               	xorwf	___fladd@signs^0,f,c
  4229   001310                     l2341:
  4230   001310  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4231   001314  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4232   001318  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4233   00131C  C001  F010         	movff	___fladd@b,___fladd@grs
  4234   001320  C005  F001         	movff	___fladd@a,___fladd@b
  4235   001324  C010  F005         	movff	___fladd@grs,___fladd@a
  4236   001328  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4237   00132C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4238   001330  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4239   001334  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4240   001338  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4241   00133C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4242   001340  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4243   001344  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4244   001348  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4245   00134C                     l2371:
  4246   00134C  0E00               	movlw	0
  4247   00134E  6E10               	movwf	___fladd@grs^0,c
  4248   001350  500F               	movf	___fladd@bexp^0,w,c
  4249   001352  C00E  F009         	movff	___fladd@aexp,??___fladd
  4250   001356  6A0A               	clrf	(??___fladd+1)^0,c
  4251   001358  5E09               	subwf	??___fladd^0,f,c
  4252   00135A  0E00               	movlw	0
  4253   00135C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4254   00135E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4255   001360  EFBB  F009         	goto	u1971
  4256   001364  500A               	movf	(??___fladd+1)^0,w,c
  4257   001366  E109               	bnz	u1970
  4258   001368  0E1A               	movlw	26
  4259   00136A  5C09               	subwf	??___fladd^0,w,c
  4260   00136C  A0D8               	btfss	status,0,c
  4261   00136E  EFBB  F009         	goto	u1971
  4262   001372  EFBD  F009         	goto	u1970
  4263   001376                     u1971:
  4264   001376  EFF4  F009         	goto	l597
  4265   00137A                     u1970:
  4266   00137A  5001               	movf	___fladd@b^0,w,c
  4267   00137C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4268   00137E  1003               	iorwf	(___fladd@b+2)^0,w,c
  4269   001380  1004               	iorwf	(___fladd@b+3)^0,w,c
  4270   001382  A4D8               	btfss	status,2,c
  4271   001384  EFC6  F009         	goto	u1981
  4272   001388  EFC9  F009         	goto	u1980
  4273   00138C                     u1981:
  4274   00138C  0E01               	movlw	1
  4275   00138E  EFCA  F009         	goto	u1990
  4276   001392                     u1980:
  4277   001392  0E00               	movlw	0
  4278   001394                     u1990:
  4279   001394  6E10               	movwf	___fladd@grs^0,c
  4280   001396  0E00               	movlw	0
  4281   001398  6E01               	movwf	___fladd@b^0,c
  4282   00139A  0E00               	movlw	0
  4283   00139C  6E02               	movwf	(___fladd@b+1)^0,c
  4284   00139E  0E00               	movlw	0
  4285   0013A0  6E03               	movwf	(___fladd@b+2)^0,c
  4286   0013A2  0E00               	movlw	0
  4287   0013A4  6E04               	movwf	(___fladd@b+3)^0,c
  4288   0013A6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4289   0013AA  EFFD  F009         	goto	l596
  4290   0013AE                     l598:
  4291   0013AE  A010               	btfss	___fladd@grs^0,0,c
  4292   0013B0  EFDC  F009         	goto	u2001
  4293   0013B4  EFDE  F009         	goto	u2000
  4294   0013B8                     u2001:
  4295   0013B8  EFE4  F009         	goto	l2383
  4296   0013BC                     u2000:
  4297   0013BC  90D8               	bcf	status,0,c
  4298   0013BE  3010               	rrcf	___fladd@grs^0,w,c
  4299   0013C0  0901               	iorlw	1
  4300   0013C2  6E10               	movwf	___fladd@grs^0,c
  4301   0013C4  EFE6  F009         	goto	l2385
  4302   0013C8                     l2383:
  4303   0013C8  90D8               	bcf	status,0,c
  4304   0013CA  3210               	rrcf	___fladd@grs^0,f,c
  4305   0013CC                     l2385:
  4306   0013CC  A001               	btfss	___fladd@b^0,0,c
  4307   0013CE  EFEB  F009         	goto	u2011
  4308   0013D2  EFED  F009         	goto	u2010
  4309   0013D6                     u2011:
  4310   0013D6  EFEE  F009         	goto	l2389
  4311   0013DA                     u2010:
  4312   0013DA  8E10               	bsf	___fladd@grs^0,7,c
  4313   0013DC                     l2389:
  4314   0013DC  3404               	rlcf	(___fladd@b+3)^0,w,c
  4315   0013DE  3204               	rrcf	(___fladd@b+3)^0,f,c
  4316   0013E0  3203               	rrcf	(___fladd@b+2)^0,f,c
  4317   0013E2  3202               	rrcf	(___fladd@b+1)^0,f,c
  4318   0013E4  3201               	rrcf	___fladd@b^0,f,c
  4319   0013E6  2A0F               	incf	___fladd@bexp^0,f,c
  4320   0013E8                     l597:
  4321   0013E8  500E               	movf	___fladd@aexp^0,w,c
  4322   0013EA  5C0F               	subwf	___fladd@bexp^0,w,c
  4323   0013EC  A0D8               	btfss	status,0,c
  4324   0013EE  EFFB  F009         	goto	u2021
  4325   0013F2  EFFD  F009         	goto	u2020
  4326   0013F6                     u2021:
  4327   0013F6  EFD7  F009         	goto	l598
  4328   0013FA                     u2020:
  4329   0013FA                     l596:
  4330   0013FA  BC0D               	btfsc	___fladd@signs^0,6,c
  4331   0013FC  EF02  F00A         	goto	u2031
  4332   001400  EF04  F00A         	goto	u2030
  4333   001404                     u2031:
  4334   001404  EF44  F00A         	goto	l2417
  4335   001408                     u2030:
  4336   001408  500F               	movf	___fladd@bexp^0,w,c
  4337   00140A  A4D8               	btfss	status,2,c
  4338   00140C  EF0A  F00A         	goto	u2041
  4339   001410  EF0C  F00A         	goto	u2040
  4340   001414                     u2041:
  4341   001414  EF16  F00A         	goto	l2399
  4342   001418                     u2040:
  4343   001418  0E00               	movlw	0
  4344   00141A  6E01               	movwf	?___fladd^0,c
  4345   00141C  0E00               	movlw	0
  4346   00141E  6E02               	movwf	(?___fladd+1)^0,c
  4347   001420  0E00               	movlw	0
  4348   001422  6E03               	movwf	(?___fladd+2)^0,c
  4349   001424  0E00               	movlw	0
  4350   001426  6E04               	movwf	(?___fladd+3)^0,c
  4351   001428  EF65  F00B         	goto	l605
  4352   00142C                     l2399:
  4353   00142C  5005               	movf	___fladd@a^0,w,c
  4354   00142E  2601               	addwf	___fladd@b^0,f,c
  4355   001430  5006               	movf	(___fladd@a+1)^0,w,c
  4356   001432  2202               	addwfc	(___fladd@b+1)^0,f,c
  4357   001434  5007               	movf	(___fladd@a+2)^0,w,c
  4358   001436  2203               	addwfc	(___fladd@b+2)^0,f,c
  4359   001438  5008               	movf	(___fladd@a+3)^0,w,c
  4360   00143A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4361   00143C  A004               	btfss	(___fladd@b+3)^0,0,c
  4362   00143E  EF23  F00A         	goto	u2051
  4363   001442  EF25  F00A         	goto	u2050
  4364   001446                     u2051:
  4365   001446  EFD1  F00A         	goto	l2453
  4366   00144A                     u2050:
  4367   00144A  A010               	btfss	___fladd@grs^0,0,c
  4368   00144C  EF2A  F00A         	goto	u2061
  4369   001450  EF2C  F00A         	goto	u2060
  4370   001454                     u2061:
  4371   001454  EF32  F00A         	goto	l2407
  4372   001458                     u2060:
  4373   001458  90D8               	bcf	status,0,c
  4374   00145A  3010               	rrcf	___fladd@grs^0,w,c
  4375   00145C  0901               	iorlw	1
  4376   00145E  6E10               	movwf	___fladd@grs^0,c
  4377   001460  EF34  F00A         	goto	l2409
  4378   001464                     l2407:
  4379   001464  90D8               	bcf	status,0,c
  4380   001466  3210               	rrcf	___fladd@grs^0,f,c
  4381   001468                     l2409:
  4382   001468  A001               	btfss	___fladd@b^0,0,c
  4383   00146A  EF39  F00A         	goto	u2071
  4384   00146E  EF3B  F00A         	goto	u2070
  4385   001472                     u2071:
  4386   001472  EF3C  F00A         	goto	l2413
  4387   001476                     u2070:
  4388   001476  8E10               	bsf	___fladd@grs^0,7,c
  4389   001478                     l2413:
  4390   001478  3404               	rlcf	(___fladd@b+3)^0,w,c
  4391   00147A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4392   00147C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4393   00147E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4394   001480  3201               	rrcf	___fladd@b^0,f,c
  4395   001482  2A0F               	incf	___fladd@bexp^0,f,c
  4396   001484  EFD1  F00A         	goto	l2453
  4397   001488                     l2417:
  4398   001488  5005               	movf	___fladd@a^0,w,c
  4399   00148A  5C01               	subwf	___fladd@b^0,w,c
  4400   00148C  5006               	movf	(___fladd@a+1)^0,w,c
  4401   00148E  5802               	subwfb	(___fladd@b+1)^0,w,c
  4402   001490  5007               	movf	(___fladd@a+2)^0,w,c
  4403   001492  5803               	subwfb	(___fladd@b+2)^0,w,c
  4404   001494  5004               	movf	(___fladd@b+3)^0,w,c
  4405   001496  0A80               	xorlw	128
  4406   001498  6E09               	movwf	??___fladd^0,c
  4407   00149A  5008               	movf	(___fladd@a+3)^0,w,c
  4408   00149C  0A80               	xorlw	128
  4409   00149E  5809               	subwfb	??___fladd^0,w,c
  4410   0014A0  B0D8               	btfsc	status,0,c
  4411   0014A2  EF55  F00A         	goto	u2081
  4412   0014A6  EF57  F00A         	goto	u2080
  4413   0014AA                     u2081:
  4414   0014AA  EF82  F00A         	goto	l2427
  4415   0014AE                     u2080:
  4416   0014AE  5001               	movf	___fladd@b^0,w,c
  4417   0014B0  5C05               	subwf	___fladd@a^0,w,c
  4418   0014B2  6E09               	movwf	??___fladd^0,c
  4419   0014B4  5002               	movf	(___fladd@b+1)^0,w,c
  4420   0014B6  5806               	subwfb	(___fladd@a+1)^0,w,c
  4421   0014B8  6E0A               	movwf	(??___fladd+1)^0,c
  4422   0014BA  5003               	movf	(___fladd@b+2)^0,w,c
  4423   0014BC  5807               	subwfb	(___fladd@a+2)^0,w,c
  4424   0014BE  6E0B               	movwf	(??___fladd+2)^0,c
  4425   0014C0  5004               	movf	(___fladd@b+3)^0,w,c
  4426   0014C2  5808               	subwfb	(___fladd@a+3)^0,w,c
  4427   0014C4  6E0C               	movwf	(??___fladd+3)^0,c
  4428   0014C6  0EFF               	movlw	255
  4429   0014C8  2409               	addwf	??___fladd^0,w,c
  4430   0014CA  6E01               	movwf	___fladd@b^0,c
  4431   0014CC  0EFF               	movlw	255
  4432   0014CE  200A               	addwfc	(??___fladd+1)^0,w,c
  4433   0014D0  6E02               	movwf	(___fladd@b+1)^0,c
  4434   0014D2  0EFF               	movlw	255
  4435   0014D4  200B               	addwfc	(??___fladd+2)^0,w,c
  4436   0014D6  6E03               	movwf	(___fladd@b+2)^0,c
  4437   0014D8  0EFF               	movlw	255
  4438   0014DA  200C               	addwfc	(??___fladd+3)^0,w,c
  4439   0014DC  6E04               	movwf	(___fladd@b+3)^0,c
  4440   0014DE  0E80               	movlw	128
  4441   0014E0  1A0D               	xorwf	___fladd@signs^0,f,c
  4442   0014E2  6C10               	negf	___fladd@grs^0,c
  4443   0014E4  5010               	movf	___fladd@grs^0,w,c
  4444   0014E6  A4D8               	btfss	status,2,c
  4445   0014E8  EF78  F00A         	goto	u2091
  4446   0014EC  EF7A  F00A         	goto	u2090
  4447   0014F0                     u2091:
  4448   0014F0  EF8A  F00A         	goto	l613
  4449   0014F4                     u2090:
  4450   0014F4  0E01               	movlw	1
  4451   0014F6  2601               	addwf	___fladd@b^0,f,c
  4452   0014F8  0E00               	movlw	0
  4453   0014FA  2202               	addwfc	(___fladd@b+1)^0,f,c
  4454   0014FC  2203               	addwfc	(___fladd@b+2)^0,f,c
  4455   0014FE  2204               	addwfc	(___fladd@b+3)^0,f,c
  4456   001500  EF8A  F00A         	goto	l613
  4457   001504                     l2427:
  4458   001504  5005               	movf	___fladd@a^0,w,c
  4459   001506  5E01               	subwf	___fladd@b^0,f,c
  4460   001508  5006               	movf	(___fladd@a+1)^0,w,c
  4461   00150A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4462   00150C  5007               	movf	(___fladd@a+2)^0,w,c
  4463   00150E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4464   001510  5008               	movf	(___fladd@a+3)^0,w,c
  4465   001512  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4466   001514                     l613:
  4467   001514  5001               	movf	___fladd@b^0,w,c
  4468   001516  1002               	iorwf	(___fladd@b+1)^0,w,c
  4469   001518  1003               	iorwf	(___fladd@b+2)^0,w,c
  4470   00151A  1004               	iorwf	(___fladd@b+3)^0,w,c
  4471   00151C  A4D8               	btfss	status,2,c
  4472   00151E  EF93  F00A         	goto	u2101
  4473   001522  EF95  F00A         	goto	u2100
  4474   001526                     u2101:
  4475   001526  EFCA  F00A         	goto	l2451
  4476   00152A                     u2100:
  4477   00152A  5010               	movf	___fladd@grs^0,w,c
  4478   00152C  A4D8               	btfss	status,2,c
  4479   00152E  EF9B  F00A         	goto	u2111
  4480   001532  EF9D  F00A         	goto	u2110
  4481   001536                     u2111:
  4482   001536  EFCA  F00A         	goto	l2451
  4483   00153A                     u2110:
  4484   00153A  0E00               	movlw	0
  4485   00153C  6E01               	movwf	?___fladd^0,c
  4486   00153E  0E00               	movlw	0
  4487   001540  6E02               	movwf	(?___fladd+1)^0,c
  4488   001542  0E00               	movlw	0
  4489   001544  6E03               	movwf	(?___fladd+2)^0,c
  4490   001546  0E00               	movlw	0
  4491   001548  6E04               	movwf	(?___fladd+3)^0,c
  4492   00154A  EF65  F00B         	goto	l605
  4493   00154E                     l2435:
  4494   00154E  90D8               	bcf	status,0,c
  4495   001550  3601               	rlcf	___fladd@b^0,f,c
  4496   001552  3602               	rlcf	(___fladd@b+1)^0,f,c
  4497   001554  3603               	rlcf	(___fladd@b+2)^0,f,c
  4498   001556  3604               	rlcf	(___fladd@b+3)^0,f,c
  4499   001558  AE10               	btfss	___fladd@grs^0,7,c
  4500   00155A  EFB1  F00A         	goto	u2121
  4501   00155E  EFB3  F00A         	goto	u2120
  4502   001562                     u2121:
  4503   001562  EFB4  F00A         	goto	l2441
  4504   001566                     u2120:
  4505   001566  8001               	bsf	___fladd@b^0,0,c
  4506   001568                     l2441:
  4507   001568  A010               	btfss	___fladd@grs^0,0,c
  4508   00156A  EFB9  F00A         	goto	u2131
  4509   00156E  EFBB  F00A         	goto	u2130
  4510   001572                     u2131:
  4511   001572  EFBF  F00A         	goto	l2445
  4512   001576                     u2130:
  4513   001576  80D8               	bsf	status,0,c
  4514   001578  3610               	rlcf	___fladd@grs^0,f,c
  4515   00157A  EFC1  F00A         	goto	l2447
  4516   00157E                     l2445:
  4517   00157E  90D8               	bcf	status,0,c
  4518   001580  3610               	rlcf	___fladd@grs^0,f,c
  4519   001582                     l2447:
  4520   001582  500F               	movf	___fladd@bexp^0,w,c
  4521   001584  B4D8               	btfsc	status,2,c
  4522   001586  EFC7  F00A         	goto	u2141
  4523   00158A  EFC9  F00A         	goto	u2140
  4524   00158E                     u2141:
  4525   00158E  EFCA  F00A         	goto	l2451
  4526   001592                     u2140:
  4527   001592  060F               	decf	___fladd@bexp^0,f,c
  4528   001594                     l2451:
  4529   001594  AE03               	btfss	(___fladd@b+2)^0,7,c
  4530   001596  EFCF  F00A         	goto	u2151
  4531   00159A  EFD1  F00A         	goto	u2150
  4532   00159E                     u2151:
  4533   00159E  EFA7  F00A         	goto	l2435
  4534   0015A2                     u2150:
  4535   0015A2                     l2453:
  4536   0015A2  0E00               	movlw	0
  4537   0015A4  6E0E               	movwf	___fladd@aexp^0,c
  4538   0015A6  AE10               	btfss	___fladd@grs^0,7,c
  4539   0015A8  EFD8  F00A         	goto	u2161
  4540   0015AC  EFDA  F00A         	goto	u2160
  4541   0015B0                     u2161:
  4542   0015B0  EFF2  F00A         	goto	l622
  4543   0015B4                     u2160:
  4544   0015B4  C010  F009         	movff	___fladd@grs,??___fladd
  4545   0015B8  0E7F               	movlw	127
  4546   0015BA  1609               	andwf	??___fladd^0,f,c
  4547   0015BC  B4D8               	btfsc	status,2,c
  4548   0015BE  EFE3  F00A         	goto	u2171
  4549   0015C2  EFE5  F00A         	goto	u2170
  4550   0015C6                     u2171:
  4551   0015C6  EFE9  F00A         	goto	l623
  4552   0015CA                     u2170:
  4553   0015CA                     l2459:
  4554   0015CA  0E01               	movlw	1
  4555   0015CC  6E0E               	movwf	___fladd@aexp^0,c
  4556   0015CE  EFF2  F00A         	goto	l622
  4557   0015D2                     l623:
  4558   0015D2  A001               	btfss	___fladd@b^0,0,c
  4559   0015D4  EFEE  F00A         	goto	u2181
  4560   0015D8  EFF0  F00A         	goto	u2180
  4561   0015DC                     u2181:
  4562   0015DC  EFF2  F00A         	goto	l622
  4563   0015E0                     u2180:
  4564   0015E0  EFE5  F00A         	goto	l2459
  4565   0015E4                     l622:
  4566   0015E4  500E               	movf	___fladd@aexp^0,w,c
  4567   0015E6  B4D8               	btfsc	status,2,c
  4568   0015E8  EFF8  F00A         	goto	u2191
  4569   0015EC  EFFA  F00A         	goto	u2190
  4570   0015F0                     u2191:
  4571   0015F0  EF25  F00B         	goto	l2471
  4572   0015F4                     u2190:
  4573   0015F4  0E01               	movlw	1
  4574   0015F6  2601               	addwf	___fladd@b^0,f,c
  4575   0015F8  0E00               	movlw	0
  4576   0015FA  2202               	addwfc	(___fladd@b+1)^0,f,c
  4577   0015FC  2203               	addwfc	(___fladd@b+2)^0,f,c
  4578   0015FE  2204               	addwfc	(___fladd@b+3)^0,f,c
  4579   001600  A004               	btfss	(___fladd@b+3)^0,0,c
  4580   001602  EF05  F00B         	goto	u2201
  4581   001606  EF07  F00B         	goto	u2200
  4582   00160A                     u2201:
  4583   00160A  EF25  F00B         	goto	l2471
  4584   00160E                     u2200:
  4585   00160E  C001  F009         	movff	___fladd@b,??___fladd
  4586   001612  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4587   001616  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4588   00161A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4589   00161E  340C               	rlcf	(??___fladd+3)^0,w,c
  4590   001620  320C               	rrcf	(??___fladd+3)^0,f,c
  4591   001622  320B               	rrcf	(??___fladd+2)^0,f,c
  4592   001624  320A               	rrcf	(??___fladd+1)^0,f,c
  4593   001626  3209               	rrcf	??___fladd^0,f,c
  4594   001628  C009  F001         	movff	??___fladd,___fladd@b
  4595   00162C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4596   001630  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4597   001634  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4598   001638  280F               	incf	___fladd@bexp^0,w,c
  4599   00163A  B4D8               	btfsc	status,2,c
  4600   00163C  EF22  F00B         	goto	u2211
  4601   001640  EF24  F00B         	goto	u2210
  4602   001644                     u2211:
  4603   001644  EF25  F00B         	goto	l2471
  4604   001648                     u2210:
  4605   001648  2A0F               	incf	___fladd@bexp^0,f,c
  4606   00164A                     l2471:
  4607   00164A  280F               	incf	___fladd@bexp^0,w,c
  4608   00164C  B4D8               	btfsc	status,2,c
  4609   00164E  EF2B  F00B         	goto	u2221
  4610   001652  EF2D  F00B         	goto	u2220
  4611   001656                     u2221:
  4612   001656  EF35  F00B         	goto	l2475
  4613   00165A                     u2220:
  4614   00165A  500F               	movf	___fladd@bexp^0,w,c
  4615   00165C  A4D8               	btfss	status,2,c
  4616   00165E  EF33  F00B         	goto	u2231
  4617   001662  EF35  F00B         	goto	u2230
  4618   001666                     u2231:
  4619   001666  EF47  F00B         	goto	l2479
  4620   00166A                     u2230:
  4621   00166A                     l2475:
  4622   00166A  0E00               	movlw	0
  4623   00166C  6E01               	movwf	___fladd@b^0,c
  4624   00166E  0E00               	movlw	0
  4625   001670  6E02               	movwf	(___fladd@b+1)^0,c
  4626   001672  0E00               	movlw	0
  4627   001674  6E03               	movwf	(___fladd@b+2)^0,c
  4628   001676  0E00               	movlw	0
  4629   001678  6E04               	movwf	(___fladd@b+3)^0,c
  4630   00167A  500F               	movf	___fladd@bexp^0,w,c
  4631   00167C  A4D8               	btfss	status,2,c
  4632   00167E  EF43  F00B         	goto	u2241
  4633   001682  EF45  F00B         	goto	u2240
  4634   001686                     u2241:
  4635   001686  EF47  F00B         	goto	l2479
  4636   00168A                     u2240:
  4637   00168A  0E00               	movlw	0
  4638   00168C  6E0D               	movwf	___fladd@signs^0,c
  4639   00168E                     l2479:
  4640   00168E  A00F               	btfss	___fladd@bexp^0,0,c
  4641   001690  EF4C  F00B         	goto	u2251
  4642   001694  EF4E  F00B         	goto	u2250
  4643   001698                     u2251:
  4644   001698  EF51  F00B         	goto	l2483
  4645   00169C                     u2250:
  4646   00169C  8E03               	bsf	(___fladd@b+2)^0,7,c
  4647   00169E  EF52  F00B         	goto	l2485
  4648   0016A2                     l2483:
  4649   0016A2  9E03               	bcf	(___fladd@b+2)^0,7,c
  4650   0016A4                     l2485:
  4651   0016A4  90D8               	bcf	status,0,c
  4652   0016A6  300F               	rrcf	___fladd@bexp^0,w,c
  4653   0016A8  6E04               	movwf	(___fladd@b+3)^0,c
  4654   0016AA  AE0D               	btfss	___fladd@signs^0,7,c
  4655   0016AC  EF5A  F00B         	goto	u2261
  4656   0016B0  EF5C  F00B         	goto	u2260
  4657   0016B4                     u2261:
  4658   0016B4  EF5D  F00B         	goto	l2491
  4659   0016B8                     u2260:
  4660   0016B8  8E04               	bsf	(___fladd@b+3)^0,7,c
  4661   0016BA                     l2491:
  4662   0016BA  C001  F001         	movff	___fladd@b,?___fladd
  4663   0016BE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4664   0016C2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4665   0016C6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4666   0016CA                     l605:
  4667   0016CA  0012               	return		;funcret
  4668   0016CC                     __end_of___fladd:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function ___flneg *****************
  4672 ;; Defined at:
  4673 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  f1              4    0[COMRAM] unsigned char 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  4    0[COMRAM] unsigned char 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4687 ;;      Params:         4       0       0       0       0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4690 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4691 ;;Total ram usage:        4 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_efgtoa
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text17
  4701   002F40                     __ptext17:
  4702                           	callstack 0
  4703   002F40                     ___flneg:
  4704                           	callstack 26
  4705   002F40  5001               	movf	___flneg@f1^0,w,c
  4706   002F42  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4707   002F44  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4708   002F46  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4709   002F48  B4D8               	btfsc	status,2,c
  4710   002F4A  EFA9  F017         	goto	u2781
  4711   002F4E  EFAB  F017         	goto	u2780
  4712   002F52                     u2781:
  4713   002F52  EFB3  F017         	goto	l2825
  4714   002F56                     u2780:
  4715   002F56  0E00               	movlw	0
  4716   002F58  1A01               	xorwf	___flneg@f1^0,f,c
  4717   002F5A  0E00               	movlw	0
  4718   002F5C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4719   002F5E  0E00               	movlw	0
  4720   002F60  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4721   002F62  0E80               	movlw	128
  4722   002F64  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4723   002F66                     l2825:
  4724   002F66  C001  F001         	movff	___flneg@f1,?___flneg
  4725   002F6A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4726   002F6E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4727   002F72  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4728   002F76  0012               	return		;funcret
  4729   002F78                     __end_of___flneg:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function ___flmul *****************
  4733 ;; Defined at:
  4734 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  b               4   14[COMRAM] unsigned char 
  4737 ;;  a               4   18[COMRAM] unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  prod            4   33[COMRAM] struct .
  4740 ;;  grs             4   27[COMRAM] unsigned long 
  4741 ;;  temp            2   37[COMRAM] struct .
  4742 ;;  bexp            1   32[COMRAM] unsigned char 
  4743 ;;  aexp            1   31[COMRAM] unsigned char 
  4744 ;;  sign            1   26[COMRAM] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  4   14[COMRAM] unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0, prodl, prodh
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4754 ;;      Params:         8       0       0       0       0       0       0       0       0
  4755 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4756 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4757 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4758 ;;Total ram usage:       25 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;;		_efgtoa
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text18
  4769   0016CC                     __ptext18:
  4770                           	callstack 0
  4771   0016CC                     ___flmul:
  4772                           	callstack 26
  4773   0016CC  5012               	movf	(___flmul@b+3)^0,w,c
  4774   0016CE  0B80               	andlw	128
  4775   0016D0  6E1B               	movwf	___flmul@sign^0,c
  4776   0016D2  5012               	movf	(___flmul@b+3)^0,w,c
  4777   0016D4  2412               	addwf	(___flmul@b+3)^0,w,c
  4778   0016D6  6E21               	movwf	___flmul@bexp^0,c
  4779   0016D8  AE11               	btfss	(___flmul@b+2)^0,7,c
  4780   0016DA  EF71  F00B         	goto	u2511
  4781   0016DE  EF73  F00B         	goto	u2510
  4782   0016E2                     u2511:
  4783   0016E2  EF74  F00B         	goto	l2653
  4784   0016E6                     u2510:
  4785   0016E6  8021               	bsf	___flmul@bexp^0,0,c
  4786   0016E8                     l2653:
  4787   0016E8  5021               	movf	___flmul@bexp^0,w,c
  4788   0016EA  B4D8               	btfsc	status,2,c
  4789   0016EC  EF7A  F00B         	goto	u2521
  4790   0016F0  EF7C  F00B         	goto	u2520
  4791   0016F4                     u2521:
  4792   0016F4  EF8F  F00B         	goto	l2661
  4793   0016F8                     u2520:
  4794   0016F8  2821               	incf	___flmul@bexp^0,w,c
  4795   0016FA  A4D8               	btfss	status,2,c
  4796   0016FC  EF82  F00B         	goto	u2531
  4797   001700  EF84  F00B         	goto	u2530
  4798   001704                     u2531:
  4799   001704  EF8C  F00B         	goto	l2659
  4800   001708                     u2530:
  4801   001708  0E00               	movlw	0
  4802   00170A  6E0F               	movwf	___flmul@b^0,c
  4803   00170C  0E00               	movlw	0
  4804   00170E  6E10               	movwf	(___flmul@b+1)^0,c
  4805   001710  0E00               	movlw	0
  4806   001712  6E11               	movwf	(___flmul@b+2)^0,c
  4807   001714  0E00               	movlw	0
  4808   001716  6E12               	movwf	(___flmul@b+3)^0,c
  4809   001718                     l2659:
  4810   001718  8E11               	bsf	(___flmul@b+2)^0,7,c
  4811   00171A  EF97  F00B         	goto	l2663
  4812   00171E                     l2661:
  4813   00171E  0E00               	movlw	0
  4814   001720  6E0F               	movwf	___flmul@b^0,c
  4815   001722  0E00               	movlw	0
  4816   001724  6E10               	movwf	(___flmul@b+1)^0,c
  4817   001726  0E00               	movlw	0
  4818   001728  6E11               	movwf	(___flmul@b+2)^0,c
  4819   00172A  0E00               	movlw	0
  4820   00172C  6E12               	movwf	(___flmul@b+3)^0,c
  4821   00172E                     l2663:
  4822   00172E  5016               	movf	(___flmul@a+3)^0,w,c
  4823   001730  0B80               	andlw	128
  4824   001732  1A1B               	xorwf	___flmul@sign^0,f,c
  4825   001734  5016               	movf	(___flmul@a+3)^0,w,c
  4826   001736  2416               	addwf	(___flmul@a+3)^0,w,c
  4827   001738  6E20               	movwf	___flmul@aexp^0,c
  4828   00173A  AE15               	btfss	(___flmul@a+2)^0,7,c
  4829   00173C  EFA2  F00B         	goto	u2541
  4830   001740  EFA4  F00B         	goto	u2540
  4831   001744                     u2541:
  4832   001744  EFA5  F00B         	goto	l2671
  4833   001748                     u2540:
  4834   001748  8020               	bsf	___flmul@aexp^0,0,c
  4835   00174A                     l2671:
  4836   00174A  5020               	movf	___flmul@aexp^0,w,c
  4837   00174C  B4D8               	btfsc	status,2,c
  4838   00174E  EFAB  F00B         	goto	u2551
  4839   001752  EFAD  F00B         	goto	u2550
  4840   001756                     u2551:
  4841   001756  EFC0  F00B         	goto	l2679
  4842   00175A                     u2550:
  4843   00175A  2820               	incf	___flmul@aexp^0,w,c
  4844   00175C  A4D8               	btfss	status,2,c
  4845   00175E  EFB3  F00B         	goto	u2561
  4846   001762  EFB5  F00B         	goto	u2560
  4847   001766                     u2561:
  4848   001766  EFBD  F00B         	goto	l2677
  4849   00176A                     u2560:
  4850   00176A  0E00               	movlw	0
  4851   00176C  6E13               	movwf	___flmul@a^0,c
  4852   00176E  0E00               	movlw	0
  4853   001770  6E14               	movwf	(___flmul@a+1)^0,c
  4854   001772  0E00               	movlw	0
  4855   001774  6E15               	movwf	(___flmul@a+2)^0,c
  4856   001776  0E00               	movlw	0
  4857   001778  6E16               	movwf	(___flmul@a+3)^0,c
  4858   00177A                     l2677:
  4859   00177A  8E15               	bsf	(___flmul@a+2)^0,7,c
  4860   00177C  EFC8  F00B         	goto	l682
  4861   001780                     l2679:
  4862   001780  0E00               	movlw	0
  4863   001782  6E13               	movwf	___flmul@a^0,c
  4864   001784  0E00               	movlw	0
  4865   001786  6E14               	movwf	(___flmul@a+1)^0,c
  4866   001788  0E00               	movlw	0
  4867   00178A  6E15               	movwf	(___flmul@a+2)^0,c
  4868   00178C  0E00               	movlw	0
  4869   00178E  6E16               	movwf	(___flmul@a+3)^0,c
  4870   001790                     l682:
  4871   001790  5020               	movf	___flmul@aexp^0,w,c
  4872   001792  B4D8               	btfsc	status,2,c
  4873   001794  EFCE  F00B         	goto	u2571
  4874   001798  EFD0  F00B         	goto	u2570
  4875   00179C                     u2571:
  4876   00179C  EFD8  F00B         	goto	l2683
  4877   0017A0                     u2570:
  4878   0017A0  5021               	movf	___flmul@bexp^0,w,c
  4879   0017A2  A4D8               	btfss	status,2,c
  4880   0017A4  EFD6  F00B         	goto	u2581
  4881   0017A8  EFD8  F00B         	goto	u2580
  4882   0017AC                     u2581:
  4883   0017AC  EFE2  F00B         	goto	l2687
  4884   0017B0                     u2580:
  4885   0017B0                     l2683:
  4886   0017B0  0E00               	movlw	0
  4887   0017B2  6E0F               	movwf	?___flmul^0,c
  4888   0017B4  0E00               	movlw	0
  4889   0017B6  6E10               	movwf	(?___flmul+1)^0,c
  4890   0017B8  0E00               	movlw	0
  4891   0017BA  6E11               	movwf	(?___flmul+2)^0,c
  4892   0017BC  0E00               	movlw	0
  4893   0017BE  6E12               	movwf	(?___flmul+3)^0,c
  4894   0017C0  EF7A  F00D         	goto	l686
  4895   0017C4                     l2687:
  4896   0017C4  5015               	movf	(___flmul@a+2)^0,w,c
  4897   0017C6  020F               	mulwf	___flmul@b^0,c
  4898   0017C8  CFF3 F026          	movff	prodl,___flmul@temp
  4899   0017CC  CFF4 F027          	movff	prodh,___flmul@temp+1
  4900   0017D0  5026               	movf	___flmul@temp^0,w,c
  4901   0017D2  6E1C               	movwf	___flmul@grs^0,c
  4902   0017D4  6A1D               	clrf	(___flmul@grs+1)^0,c
  4903   0017D6  6A1E               	clrf	(___flmul@grs+2)^0,c
  4904   0017D8  6A1F               	clrf	(___flmul@grs+3)^0,c
  4905   0017DA  5027               	movf	(___flmul@temp+1)^0,w,c
  4906   0017DC  6E22               	movwf	___flmul@prod^0,c
  4907   0017DE  6A23               	clrf	(___flmul@prod+1)^0,c
  4908   0017E0  6A24               	clrf	(___flmul@prod+2)^0,c
  4909   0017E2  6A25               	clrf	(___flmul@prod+3)^0,c
  4910   0017E4  5014               	movf	(___flmul@a+1)^0,w,c
  4911   0017E6  0210               	mulwf	(___flmul@b+1)^0,c
  4912   0017E8  CFF3 F026          	movff	prodl,___flmul@temp
  4913   0017EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  4914   0017F0  5026               	movf	___flmul@temp^0,w,c
  4915   0017F2  261C               	addwf	___flmul@grs^0,f,c
  4916   0017F4  0E00               	movlw	0
  4917   0017F6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4918   0017F8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4919   0017FA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4920   0017FC  5027               	movf	(___flmul@temp+1)^0,w,c
  4921   0017FE  2622               	addwf	___flmul@prod^0,f,c
  4922   001800  0E00               	movlw	0
  4923   001802  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4924   001804  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4925   001806  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4926   001808  5013               	movf	___flmul@a^0,w,c
  4927   00180A  0211               	mulwf	(___flmul@b+2)^0,c
  4928   00180C  CFF3 F026          	movff	prodl,___flmul@temp
  4929   001810  CFF4 F027          	movff	prodh,___flmul@temp+1
  4930   001814  5026               	movf	___flmul@temp^0,w,c
  4931   001816  261C               	addwf	___flmul@grs^0,f,c
  4932   001818  0E00               	movlw	0
  4933   00181A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4934   00181C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4935   00181E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4936   001820  5027               	movf	(___flmul@temp+1)^0,w,c
  4937   001822  2622               	addwf	___flmul@prod^0,f,c
  4938   001824  0E00               	movlw	0
  4939   001826  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4940   001828  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4941   00182A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4942   00182C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4943   001830  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4944   001834  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4945   001838  6A1C               	clrf	___flmul@grs^0,c
  4946   00183A  5013               	movf	___flmul@a^0,w,c
  4947   00183C  0210               	mulwf	(___flmul@b+1)^0,c
  4948   00183E  CFF3 F026          	movff	prodl,___flmul@temp
  4949   001842  CFF4 F027          	movff	prodh,___flmul@temp+1
  4950   001846  5026               	movf	___flmul@temp^0,w,c
  4951   001848  261C               	addwf	___flmul@grs^0,f,c
  4952   00184A  5027               	movf	(___flmul@temp+1)^0,w,c
  4953   00184C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4954   00184E  0E00               	movlw	0
  4955   001850  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4956   001852  0E00               	movlw	0
  4957   001854  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4958   001856  5014               	movf	(___flmul@a+1)^0,w,c
  4959   001858  020F               	mulwf	___flmul@b^0,c
  4960   00185A  CFF3 F026          	movff	prodl,___flmul@temp
  4961   00185E  CFF4 F027          	movff	prodh,___flmul@temp+1
  4962   001862  5026               	movf	___flmul@temp^0,w,c
  4963   001864  261C               	addwf	___flmul@grs^0,f,c
  4964   001866  5027               	movf	(___flmul@temp+1)^0,w,c
  4965   001868  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4966   00186A  0E00               	movlw	0
  4967   00186C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4968   00186E  0E00               	movlw	0
  4969   001870  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4970   001872  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4971   001876  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4972   00187A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4973   00187E  6A1C               	clrf	___flmul@grs^0,c
  4974   001880  5013               	movf	___flmul@a^0,w,c
  4975   001882  020F               	mulwf	___flmul@b^0,c
  4976   001884  CFF3 F026          	movff	prodl,___flmul@temp
  4977   001888  CFF4 F027          	movff	prodh,___flmul@temp+1
  4978   00188C  5026               	movf	___flmul@temp^0,w,c
  4979   00188E  261C               	addwf	___flmul@grs^0,f,c
  4980   001890  5027               	movf	(___flmul@temp+1)^0,w,c
  4981   001892  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4982   001894  0E00               	movlw	0
  4983   001896  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4984   001898  0E00               	movlw	0
  4985   00189A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4986   00189C  5015               	movf	(___flmul@a+2)^0,w,c
  4987   00189E  0210               	mulwf	(___flmul@b+1)^0,c
  4988   0018A0  CFF3 F026          	movff	prodl,___flmul@temp
  4989   0018A4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4990   0018A8  5026               	movf	___flmul@temp^0,w,c
  4991   0018AA  2622               	addwf	___flmul@prod^0,f,c
  4992   0018AC  5027               	movf	(___flmul@temp+1)^0,w,c
  4993   0018AE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4994   0018B0  0E00               	movlw	0
  4995   0018B2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4996   0018B4  0E00               	movlw	0
  4997   0018B6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4998   0018B8  5014               	movf	(___flmul@a+1)^0,w,c
  4999   0018BA  0211               	mulwf	(___flmul@b+2)^0,c
  5000   0018BC  CFF3 F026          	movff	prodl,___flmul@temp
  5001   0018C0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5002   0018C4  5026               	movf	___flmul@temp^0,w,c
  5003   0018C6  2622               	addwf	___flmul@prod^0,f,c
  5004   0018C8  5027               	movf	(___flmul@temp+1)^0,w,c
  5005   0018CA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5006   0018CC  0E00               	movlw	0
  5007   0018CE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5008   0018D0  0E00               	movlw	0
  5009   0018D2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5010   0018D4  5015               	movf	(___flmul@a+2)^0,w,c
  5011   0018D6  0211               	mulwf	(___flmul@b+2)^0,c
  5012   0018D8  CFF3 F026          	movff	prodl,___flmul@temp
  5013   0018DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5014   0018E0  5026               	movf	___flmul@temp^0,w,c
  5015   0018E2  6E17               	movwf	??___flmul^0,c
  5016   0018E4  5027               	movf	(___flmul@temp+1)^0,w,c
  5017   0018E6  6E18               	movwf	(??___flmul+1)^0,c
  5018   0018E8  6A19               	clrf	(??___flmul+2)^0,c
  5019   0018EA  6A1A               	clrf	(??___flmul+3)^0,c
  5020   0018EC  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5021   0018F0  C018  F019         	movff	??___flmul+1,??___flmul+2
  5022   0018F4  C017  F018         	movff	??___flmul,??___flmul+1
  5023   0018F8  6A17               	clrf	??___flmul^0,c
  5024   0018FA  5017               	movf	??___flmul^0,w,c
  5025   0018FC  2622               	addwf	___flmul@prod^0,f,c
  5026   0018FE  5018               	movf	(??___flmul+1)^0,w,c
  5027   001900  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5028   001902  5019               	movf	(??___flmul+2)^0,w,c
  5029   001904  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5030   001906  501A               	movf	(??___flmul+3)^0,w,c
  5031   001908  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5032   00190A  C01C  F017         	movff	___flmul@grs,??___flmul
  5033   00190E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5034   001912  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5035   001916  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5036   00191A  0E19               	movlw	25
  5037   00191C  EF95  F00C         	goto	u2590
  5038   001920                     u2595:
  5039   001920  90D8               	bcf	status,0,c
  5040   001922  321A               	rrcf	(??___flmul+3)^0,f,c
  5041   001924  3219               	rrcf	(??___flmul+2)^0,f,c
  5042   001926  3218               	rrcf	(??___flmul+1)^0,f,c
  5043   001928  3217               	rrcf	??___flmul^0,f,c
  5044   00192A                     u2590:
  5045   00192A  2EE8               	decfsz	wreg,f,c
  5046   00192C  EF90  F00C         	goto	u2595
  5047   001930  5017               	movf	??___flmul^0,w,c
  5048   001932  2622               	addwf	___flmul@prod^0,f,c
  5049   001934  5018               	movf	(??___flmul+1)^0,w,c
  5050   001936  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5051   001938  5019               	movf	(??___flmul+2)^0,w,c
  5052   00193A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5053   00193C  501A               	movf	(??___flmul+3)^0,w,c
  5054   00193E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5055   001940  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5056   001944  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5057   001948  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5058   00194C  6A1C               	clrf	___flmul@grs^0,c
  5059   00194E  5020               	movf	___flmul@aexp^0,w,c
  5060   001950  C021  F017         	movff	___flmul@bexp,??___flmul
  5061   001954  6A18               	clrf	(??___flmul+1)^0,c
  5062   001956  2617               	addwf	??___flmul^0,f,c
  5063   001958  0E00               	movlw	0
  5064   00195A  2218               	addwfc	(??___flmul+1)^0,f,c
  5065   00195C  0E82               	movlw	130
  5066   00195E  2417               	addwf	??___flmul^0,w,c
  5067   001960  6E26               	movwf	___flmul@temp^0,c
  5068   001962  0EFF               	movlw	255
  5069   001964  2018               	addwfc	(??___flmul+1)^0,w,c
  5070   001966  6E27               	movwf	(___flmul@temp+1)^0,c
  5071   001968  EFCB  F00C         	goto	l2735
  5072   00196C                     l2729:
  5073   00196C  90D8               	bcf	status,0,c
  5074   00196E  3622               	rlcf	___flmul@prod^0,f,c
  5075   001970  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5076   001972  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5077   001974  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5078   001976  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5079   001978  EFC0  F00C         	goto	u2601
  5080   00197C  EFC2  F00C         	goto	u2600
  5081   001980                     u2601:
  5082   001980  EFC3  F00C         	goto	l689
  5083   001984                     u2600:
  5084   001984  8022               	bsf	___flmul@prod^0,0,c
  5085   001986                     l689:
  5086   001986  90D8               	bcf	status,0,c
  5087   001988  361C               	rlcf	___flmul@grs^0,f,c
  5088   00198A  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5089   00198C  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5090   00198E  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5091   001990  0626               	decf	___flmul@temp^0,f,c
  5092   001992  A0D8               	btfss	status,0,c
  5093   001994  0627               	decf	(___flmul@temp+1)^0,f,c
  5094   001996                     l2735:
  5095   001996  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5096   001998  EFD0  F00C         	goto	u2611
  5097   00199C  EFD2  F00C         	goto	u2610
  5098   0019A0                     u2611:
  5099   0019A0  EFB6  F00C         	goto	l2729
  5100   0019A4                     u2610:
  5101   0019A4  0E00               	movlw	0
  5102   0019A6  6E20               	movwf	___flmul@aexp^0,c
  5103   0019A8  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5104   0019AA  EFD9  F00C         	goto	u2621
  5105   0019AE  EFDB  F00C         	goto	u2620
  5106   0019B2                     u2621:
  5107   0019B2  EFFF  F00C         	goto	l691
  5108   0019B6                     u2620:
  5109   0019B6  0EFF               	movlw	255
  5110   0019B8  141C               	andwf	___flmul@grs^0,w,c
  5111   0019BA  6E17               	movwf	??___flmul^0,c
  5112   0019BC  0EFF               	movlw	255
  5113   0019BE  141D               	andwf	(___flmul@grs+1)^0,w,c
  5114   0019C0  6E18               	movwf	(??___flmul+1)^0,c
  5115   0019C2  0EFF               	movlw	255
  5116   0019C4  141E               	andwf	(___flmul@grs+2)^0,w,c
  5117   0019C6  6E19               	movwf	(??___flmul+2)^0,c
  5118   0019C8  0E7F               	movlw	127
  5119   0019CA  141F               	andwf	(___flmul@grs+3)^0,w,c
  5120   0019CC  6E1A               	movwf	(??___flmul+3)^0,c
  5121   0019CE  5017               	movf	??___flmul^0,w,c
  5122   0019D0  1018               	iorwf	(??___flmul+1)^0,w,c
  5123   0019D2  1019               	iorwf	(??___flmul+2)^0,w,c
  5124   0019D4  101A               	iorwf	(??___flmul+3)^0,w,c
  5125   0019D6  B4D8               	btfsc	status,2,c
  5126   0019D8  EFF0  F00C         	goto	u2631
  5127   0019DC  EFF2  F00C         	goto	u2630
  5128   0019E0                     u2631:
  5129   0019E0  EFF6  F00C         	goto	l692
  5130   0019E4                     u2630:
  5131   0019E4                     l2743:
  5132   0019E4  0E01               	movlw	1
  5133   0019E6  6E20               	movwf	___flmul@aexp^0,c
  5134   0019E8  EFFF  F00C         	goto	l691
  5135   0019EC                     l692:
  5136   0019EC  A022               	btfss	___flmul@prod^0,0,c
  5137   0019EE  EFFB  F00C         	goto	u2641
  5138   0019F2  EFFD  F00C         	goto	u2640
  5139   0019F6                     u2641:
  5140   0019F6  EFFF  F00C         	goto	l691
  5141   0019FA                     u2640:
  5142   0019FA  EFF2  F00C         	goto	l2743
  5143   0019FE                     l691:
  5144   0019FE  5020               	movf	___flmul@aexp^0,w,c
  5145   001A00  B4D8               	btfsc	status,2,c
  5146   001A02  EF05  F00D         	goto	u2651
  5147   001A06  EF07  F00D         	goto	u2650
  5148   001A0A                     u2651:
  5149   001A0A  EF2B  F00D         	goto	l2755
  5150   001A0E                     u2650:
  5151   001A0E  0E01               	movlw	1
  5152   001A10  2622               	addwf	___flmul@prod^0,f,c
  5153   001A12  0E00               	movlw	0
  5154   001A14  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5155   001A16  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5156   001A18  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5157   001A1A  A025               	btfss	(___flmul@prod+3)^0,0,c
  5158   001A1C  EF12  F00D         	goto	u2661
  5159   001A20  EF14  F00D         	goto	u2660
  5160   001A24                     u2661:
  5161   001A24  EF2B  F00D         	goto	l2755
  5162   001A28                     u2660:
  5163   001A28  C022  F017         	movff	___flmul@prod,??___flmul
  5164   001A2C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5165   001A30  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5166   001A34  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5167   001A38  341A               	rlcf	(??___flmul+3)^0,w,c
  5168   001A3A  321A               	rrcf	(??___flmul+3)^0,f,c
  5169   001A3C  3219               	rrcf	(??___flmul+2)^0,f,c
  5170   001A3E  3218               	rrcf	(??___flmul+1)^0,f,c
  5171   001A40  3217               	rrcf	??___flmul^0,f,c
  5172   001A42  C017  F022         	movff	??___flmul,___flmul@prod
  5173   001A46  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5174   001A4A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5175   001A4E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5176   001A52  4A26               	infsnz	___flmul@temp^0,f,c
  5177   001A54  2A27               	incf	(___flmul@temp+1)^0,f,c
  5178   001A56                     l2755:
  5179   001A56  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5180   001A58  EF36  F00D         	goto	u2671
  5181   001A5C  5027               	movf	(___flmul@temp+1)^0,w,c
  5182   001A5E  E108               	bnz	u2670
  5183   001A60  2826               	incf	___flmul@temp^0,w,c
  5184   001A62  A0D8               	btfss	status,0,c
  5185   001A64  EF36  F00D         	goto	u2671
  5186   001A68  EF38  F00D         	goto	u2670
  5187   001A6C                     u2671:
  5188   001A6C  EF42  F00D         	goto	l2759
  5189   001A70                     u2670:
  5190   001A70  0E00               	movlw	0
  5191   001A72  6E22               	movwf	___flmul@prod^0,c
  5192   001A74  0E00               	movlw	0
  5193   001A76  6E23               	movwf	(___flmul@prod+1)^0,c
  5194   001A78  0E80               	movlw	128
  5195   001A7A  6E24               	movwf	(___flmul@prod+2)^0,c
  5196   001A7C  0E7F               	movlw	127
  5197   001A7E  6E25               	movwf	(___flmul@prod+3)^0,c
  5198   001A80  EF70  F00D         	goto	l2771
  5199   001A84                     l2759:
  5200   001A84  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5201   001A86  EF4F  F00D         	goto	u2680
  5202   001A8A  5027               	movf	(___flmul@temp+1)^0,w,c
  5203   001A8C  E106               	bnz	u2681
  5204   001A8E  0426               	decf	___flmul@temp^0,w,c
  5205   001A90  B0D8               	btfsc	status,0,c
  5206   001A92  EF4D  F00D         	goto	u2681
  5207   001A96  EF4F  F00D         	goto	u2680
  5208   001A9A                     u2681:
  5209   001A9A  EF5B  F00D         	goto	l699
  5210   001A9E                     u2680:
  5211   001A9E  0E00               	movlw	0
  5212   001AA0  6E22               	movwf	___flmul@prod^0,c
  5213   001AA2  0E00               	movlw	0
  5214   001AA4  6E23               	movwf	(___flmul@prod+1)^0,c
  5215   001AA6  0E00               	movlw	0
  5216   001AA8  6E24               	movwf	(___flmul@prod+2)^0,c
  5217   001AAA  0E00               	movlw	0
  5218   001AAC  6E25               	movwf	(___flmul@prod+3)^0,c
  5219   001AAE  0E00               	movlw	0
  5220   001AB0  6E1B               	movwf	___flmul@sign^0,c
  5221   001AB2  EF70  F00D         	goto	l2771
  5222   001AB6                     l699:
  5223   001AB6  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5224   001ABA  0EFF               	movlw	255
  5225   001ABC  1622               	andwf	___flmul@prod^0,f,c
  5226   001ABE  0EFF               	movlw	255
  5227   001AC0  1623               	andwf	(___flmul@prod+1)^0,f,c
  5228   001AC2  0E7F               	movlw	127
  5229   001AC4  1624               	andwf	(___flmul@prod+2)^0,f,c
  5230   001AC6  0E00               	movlw	0
  5231   001AC8  1625               	andwf	(___flmul@prod+3)^0,f,c
  5232   001ACA  A021               	btfss	___flmul@bexp^0,0,c
  5233   001ACC  EF6A  F00D         	goto	u2691
  5234   001AD0  EF6C  F00D         	goto	u2690
  5235   001AD4                     u2691:
  5236   001AD4  EF6D  F00D         	goto	l2769
  5237   001AD8                     u2690:
  5238   001AD8  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5239   001ADA                     l2769:
  5240   001ADA  90D8               	bcf	status,0,c
  5241   001ADC  3021               	rrcf	___flmul@bexp^0,w,c
  5242   001ADE  6E25               	movwf	(___flmul@prod+3)^0,c
  5243   001AE0                     l2771:
  5244   001AE0  501B               	movf	___flmul@sign^0,w,c
  5245   001AE2  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5246   001AE4  C022  F00F         	movff	___flmul@prod,?___flmul
  5247   001AE8  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5248   001AEC  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5249   001AF0  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5250   001AF4                     l686:
  5251   001AF4  0012               	return		;funcret
  5252   001AF6                     __end_of___flmul:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function ___flge *****************
  5256 ;; Defined at:
  5257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  ff1             4   39[COMRAM] unsigned char 
  5260 ;;  ff2             4   43[COMRAM] unsigned char 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;		None               void
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5272 ;;      Params:         8       0       0       0       0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5274 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5275 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5276 ;;Total ram usage:       12 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_efgtoa
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text19
  5286   0027BA                     __ptext19:
  5287                           	callstack 0
  5288   0027BA                     ___flge:
  5289                           	callstack 26
  5290   0027BA  0E00               	movlw	0
  5291   0027BC  1428               	andwf	___flge@ff1^0,w,c
  5292   0027BE  6E30               	movwf	??___flge^0,c
  5293   0027C0  0E00               	movlw	0
  5294   0027C2  1429               	andwf	(___flge@ff1+1)^0,w,c
  5295   0027C4  6E31               	movwf	(??___flge+1)^0,c
  5296   0027C6  0E80               	movlw	128
  5297   0027C8  142A               	andwf	(___flge@ff1+2)^0,w,c
  5298   0027CA  6E32               	movwf	(??___flge+2)^0,c
  5299   0027CC  0E7F               	movlw	127
  5300   0027CE  142B               	andwf	(___flge@ff1+3)^0,w,c
  5301   0027D0  6E33               	movwf	(??___flge+3)^0,c
  5302   0027D2  5030               	movf	??___flge^0,w,c
  5303   0027D4  1031               	iorwf	(??___flge+1)^0,w,c
  5304   0027D6  1032               	iorwf	(??___flge+2)^0,w,c
  5305   0027D8  1033               	iorwf	(??___flge+3)^0,w,c
  5306   0027DA  A4D8               	btfss	status,2,c
  5307   0027DC  EFF2  F013         	goto	u2731
  5308   0027E0  EFF4  F013         	goto	u2730
  5309   0027E4                     u2731:
  5310   0027E4  EFFC  F013         	goto	l2803
  5311   0027E8                     u2730:
  5312   0027E8  0E00               	movlw	0
  5313   0027EA  6E28               	movwf	___flge@ff1^0,c
  5314   0027EC  0E00               	movlw	0
  5315   0027EE  6E29               	movwf	(___flge@ff1+1)^0,c
  5316   0027F0  0E00               	movlw	0
  5317   0027F2  6E2A               	movwf	(___flge@ff1+2)^0,c
  5318   0027F4  0E00               	movlw	0
  5319   0027F6  6E2B               	movwf	(___flge@ff1+3)^0,c
  5320   0027F8                     l2803:
  5321   0027F8  0E00               	movlw	0
  5322   0027FA  142C               	andwf	___flge@ff2^0,w,c
  5323   0027FC  6E30               	movwf	??___flge^0,c
  5324   0027FE  0E00               	movlw	0
  5325   002800  142D               	andwf	(___flge@ff2+1)^0,w,c
  5326   002802  6E31               	movwf	(??___flge+1)^0,c
  5327   002804  0E80               	movlw	128
  5328   002806  142E               	andwf	(___flge@ff2+2)^0,w,c
  5329   002808  6E32               	movwf	(??___flge+2)^0,c
  5330   00280A  0E7F               	movlw	127
  5331   00280C  142F               	andwf	(___flge@ff2+3)^0,w,c
  5332   00280E  6E33               	movwf	(??___flge+3)^0,c
  5333   002810  5030               	movf	??___flge^0,w,c
  5334   002812  1031               	iorwf	(??___flge+1)^0,w,c
  5335   002814  1032               	iorwf	(??___flge+2)^0,w,c
  5336   002816  1033               	iorwf	(??___flge+3)^0,w,c
  5337   002818  A4D8               	btfss	status,2,c
  5338   00281A  EF11  F014         	goto	u2741
  5339   00281E  EF13  F014         	goto	u2740
  5340   002822                     u2741:
  5341   002822  EF1B  F014         	goto	l2807
  5342   002826                     u2740:
  5343   002826  0E00               	movlw	0
  5344   002828  6E2C               	movwf	___flge@ff2^0,c
  5345   00282A  0E00               	movlw	0
  5346   00282C  6E2D               	movwf	(___flge@ff2+1)^0,c
  5347   00282E  0E00               	movlw	0
  5348   002830  6E2E               	movwf	(___flge@ff2+2)^0,c
  5349   002832  0E00               	movlw	0
  5350   002834  6E2F               	movwf	(___flge@ff2+3)^0,c
  5351   002836                     l2807:
  5352   002836  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5353   002838  EF20  F014         	goto	u2751
  5354   00283C  EF22  F014         	goto	u2750
  5355   002840                     u2751:
  5356   002840  EF2B  F014         	goto	l2811
  5357   002844                     u2750:
  5358   002844  6C28               	negf	___flge@ff1^0,c
  5359   002846  1E29               	comf	(___flge@ff1+1)^0,f,c
  5360   002848  B0D8               	btfsc	status,0,c
  5361   00284A  2A29               	incf	(___flge@ff1+1)^0,f,c
  5362   00284C  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5363   00284E  B0D8               	btfsc	status,0,c
  5364   002850  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5365   002852  0E80               	movlw	128
  5366   002854  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5367   002856                     l2811:
  5368   002856  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5369   002858  EF30  F014         	goto	u2761
  5370   00285C  EF32  F014         	goto	u2760
  5371   002860                     u2761:
  5372   002860  EF3B  F014         	goto	l333
  5373   002864                     u2760:
  5374   002864  6C2C               	negf	___flge@ff2^0,c
  5375   002866  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5376   002868  B0D8               	btfsc	status,0,c
  5377   00286A  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5378   00286C  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5379   00286E  B0D8               	btfsc	status,0,c
  5380   002870  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5381   002872  0E80               	movlw	128
  5382   002874  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5383   002876                     l333:
  5384   002876  0E00               	movlw	0
  5385   002878  1A28               	xorwf	___flge@ff1^0,f,c
  5386   00287A  0E00               	movlw	0
  5387   00287C  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5388   00287E  0E00               	movlw	0
  5389   002880  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5390   002882  0E80               	movlw	128
  5391   002884  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5392   002886  0E00               	movlw	0
  5393   002888  1A2C               	xorwf	___flge@ff2^0,f,c
  5394   00288A  0E00               	movlw	0
  5395   00288C  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5396   00288E  0E00               	movlw	0
  5397   002890  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5398   002892  0E80               	movlw	128
  5399   002894  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5400   002896  502C               	movf	___flge@ff2^0,w,c
  5401   002898  5C28               	subwf	___flge@ff1^0,w,c
  5402   00289A  502D               	movf	(___flge@ff2+1)^0,w,c
  5403   00289C  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5404   00289E  502E               	movf	(___flge@ff2+2)^0,w,c
  5405   0028A0  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5406   0028A2  502F               	movf	(___flge@ff2+3)^0,w,c
  5407   0028A4  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5408   0028A6  B0D8               	btfsc	status,0,c
  5409   0028A8  EF58  F014         	goto	u2771
  5410   0028AC  EF5A  F014         	goto	u2770
  5411   0028B0                     u2771:
  5412   0028B0  EF5D  F014         	goto	l2817
  5413   0028B4                     u2770:
  5414   0028B4  90D8               	bcf	status,0,c
  5415   0028B6  EF5E  F014         	goto	l338
  5416   0028BA                     l2817:
  5417   0028BA  80D8               	bsf	status,0,c
  5418   0028BC                     l338:
  5419   0028BC  0012               	return		;funcret
  5420   0028BE                     __end_of___flge:
  5421                           	callstack 0
  5422                           
  5423 ;; *************** function ___fleq *****************
  5424 ;; Defined at:
  5425 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  ff1             4    0[COMRAM] unsigned char 
  5428 ;;  ff2             4    4[COMRAM] unsigned char 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;		None               void
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5440 ;;      Params:         8       0       0       0       0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5442 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5443 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5444 ;;Total ram usage:       12 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		_efgtoa
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text20
  5454   002B6A                     __ptext20:
  5455                           	callstack 0
  5456   002B6A                     ___fleq:
  5457                           	callstack 26
  5458   002B6A  0E00               	movlw	0
  5459   002B6C  1401               	andwf	___fleq@ff1^0,w,c
  5460   002B6E  6E09               	movwf	??___fleq^0,c
  5461   002B70  0E00               	movlw	0
  5462   002B72  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5463   002B74  6E0A               	movwf	(??___fleq+1)^0,c
  5464   002B76  0E80               	movlw	128
  5465   002B78  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5466   002B7A  6E0B               	movwf	(??___fleq+2)^0,c
  5467   002B7C  0E7F               	movlw	127
  5468   002B7E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5469   002B80  6E0C               	movwf	(??___fleq+3)^0,c
  5470   002B82  5009               	movf	??___fleq^0,w,c
  5471   002B84  100A               	iorwf	(??___fleq+1)^0,w,c
  5472   002B86  100B               	iorwf	(??___fleq+2)^0,w,c
  5473   002B88  100C               	iorwf	(??___fleq+3)^0,w,c
  5474   002B8A  A4D8               	btfss	status,2,c
  5475   002B8C  EFCA  F015         	goto	u2701
  5476   002B90  EFCC  F015         	goto	u2700
  5477   002B94                     u2701:
  5478   002B94  EFD4  F015         	goto	l2787
  5479   002B98                     u2700:
  5480   002B98  0E00               	movlw	0
  5481   002B9A  6E01               	movwf	___fleq@ff1^0,c
  5482   002B9C  0E00               	movlw	0
  5483   002B9E  6E02               	movwf	(___fleq@ff1+1)^0,c
  5484   002BA0  0E00               	movlw	0
  5485   002BA2  6E03               	movwf	(___fleq@ff1+2)^0,c
  5486   002BA4  0E00               	movlw	0
  5487   002BA6  6E04               	movwf	(___fleq@ff1+3)^0,c
  5488   002BA8                     l2787:
  5489   002BA8  0E00               	movlw	0
  5490   002BAA  1405               	andwf	___fleq@ff2^0,w,c
  5491   002BAC  6E09               	movwf	??___fleq^0,c
  5492   002BAE  0E00               	movlw	0
  5493   002BB0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5494   002BB2  6E0A               	movwf	(??___fleq+1)^0,c
  5495   002BB4  0E80               	movlw	128
  5496   002BB6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5497   002BB8  6E0B               	movwf	(??___fleq+2)^0,c
  5498   002BBA  0E7F               	movlw	127
  5499   002BBC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5500   002BBE  6E0C               	movwf	(??___fleq+3)^0,c
  5501   002BC0  5009               	movf	??___fleq^0,w,c
  5502   002BC2  100A               	iorwf	(??___fleq+1)^0,w,c
  5503   002BC4  100B               	iorwf	(??___fleq+2)^0,w,c
  5504   002BC6  100C               	iorwf	(??___fleq+3)^0,w,c
  5505   002BC8  A4D8               	btfss	status,2,c
  5506   002BCA  EFE9  F015         	goto	u2711
  5507   002BCE  EFEB  F015         	goto	u2710
  5508   002BD2                     u2711:
  5509   002BD2  EFF3  F015         	goto	l2791
  5510   002BD6                     u2710:
  5511   002BD6  0E00               	movlw	0
  5512   002BD8  6E05               	movwf	___fleq@ff2^0,c
  5513   002BDA  0E00               	movlw	0
  5514   002BDC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5515   002BDE  0E00               	movlw	0
  5516   002BE0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5517   002BE2  0E00               	movlw	0
  5518   002BE4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5519   002BE6                     l2791:
  5520   002BE6  5005               	movf	___fleq@ff2^0,w,c
  5521   002BE8  1801               	xorwf	___fleq@ff1^0,w,c
  5522   002BEA  E10F               	bnz	u2720
  5523   002BEC  5006               	movf	(___fleq@ff2+1)^0,w,c
  5524   002BEE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5525   002BF0  E10C               	bnz	u2720
  5526   002BF2  5007               	movf	(___fleq@ff2+2)^0,w,c
  5527   002BF4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5528   002BF6  E109               	bnz	u2720
  5529   002BF8  5008               	movf	(___fleq@ff2+3)^0,w,c
  5530   002BFA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5531   002BFC  B4D8               	btfsc	status,2,c
  5532   002BFE  EF03  F016         	goto	u2721
  5533   002C02  EF05  F016         	goto	u2720
  5534   002C06                     u2721:
  5535   002C06  EF08  F016         	goto	l2795
  5536   002C0A                     u2720:
  5537   002C0A  90D8               	bcf	status,0,c
  5538   002C0C  EF09  F016         	goto	l327
  5539   002C10                     l2795:
  5540   002C10  80D8               	bsf	status,0,c
  5541   002C12                     l327:
  5542   002C12  0012               	return		;funcret
  5543   002C14                     __end_of___fleq:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function ___fldiv *****************
  5547 ;; Defined at:
  5548 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  b               4    0[COMRAM] unsigned char 
  5551 ;;  a               4    4[COMRAM] unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  grs             4   19[COMRAM] unsigned long 
  5554 ;;  rem             4   12[COMRAM] unsigned long 
  5555 ;;  new_exp         2   17[COMRAM] short 
  5556 ;;  aexp            1   24[COMRAM] unsigned char 
  5557 ;;  bexp            1   23[COMRAM] unsigned char 
  5558 ;;  sign            1   16[COMRAM] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  4    0[COMRAM] unsigned char 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5568 ;;      Params:         8       0       0       0       0       0       0       0       0
  5569 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5570 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5571 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5572 ;;Total ram usage:       25 bytes
  5573 ;; Hardware stack levels used: 1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_efgtoa
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text21
  5582   001AF6                     __ptext21:
  5583                           	callstack 0
  5584   001AF6                     ___fldiv:
  5585                           	callstack 26
  5586   001AF6  5004               	movf	(___fldiv@b+3)^0,w,c
  5587   001AF8  0B80               	andlw	128
  5588   001AFA  6E11               	movwf	___fldiv@sign^0,c
  5589   001AFC  5004               	movf	(___fldiv@b+3)^0,w,c
  5590   001AFE  2404               	addwf	(___fldiv@b+3)^0,w,c
  5591   001B00  6E18               	movwf	___fldiv@bexp^0,c
  5592   001B02  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5593   001B04  EF86  F00D         	goto	u2281
  5594   001B08  EF88  F00D         	goto	u2280
  5595   001B0C                     u2281:
  5596   001B0C  EF89  F00D         	goto	l2515
  5597   001B10                     u2280:
  5598   001B10  8018               	bsf	___fldiv@bexp^0,0,c
  5599   001B12                     l2515:
  5600   001B12  5018               	movf	___fldiv@bexp^0,w,c
  5601   001B14  B4D8               	btfsc	status,2,c
  5602   001B16  EF8F  F00D         	goto	u2291
  5603   001B1A  EF91  F00D         	goto	u2290
  5604   001B1E                     u2291:
  5605   001B1E  EFA6  F00D         	goto	l2525
  5606   001B22                     u2290:
  5607   001B22  2818               	incf	___fldiv@bexp^0,w,c
  5608   001B24  A4D8               	btfss	status,2,c
  5609   001B26  EF97  F00D         	goto	u2301
  5610   001B2A  EF99  F00D         	goto	u2300
  5611   001B2E                     u2301:
  5612   001B2E  EFA1  F00D         	goto	l2521
  5613   001B32                     u2300:
  5614   001B32  0E00               	movlw	0
  5615   001B34  6E01               	movwf	___fldiv@b^0,c
  5616   001B36  0E00               	movlw	0
  5617   001B38  6E02               	movwf	(___fldiv@b+1)^0,c
  5618   001B3A  0E00               	movlw	0
  5619   001B3C  6E03               	movwf	(___fldiv@b+2)^0,c
  5620   001B3E  0E00               	movlw	0
  5621   001B40  6E04               	movwf	(___fldiv@b+3)^0,c
  5622   001B42                     l2521:
  5623   001B42  8E03               	bsf	(___fldiv@b+2)^0,7,c
  5624   001B44  0E00               	movlw	0
  5625   001B46  6E04               	movwf	(___fldiv@b+3)^0,c
  5626   001B48  EFAE  F00D         	goto	l2527
  5627   001B4C                     l2525:
  5628   001B4C  0E00               	movlw	0
  5629   001B4E  6E01               	movwf	___fldiv@b^0,c
  5630   001B50  0E00               	movlw	0
  5631   001B52  6E02               	movwf	(___fldiv@b+1)^0,c
  5632   001B54  0E00               	movlw	0
  5633   001B56  6E03               	movwf	(___fldiv@b+2)^0,c
  5634   001B58  0E00               	movlw	0
  5635   001B5A  6E04               	movwf	(___fldiv@b+3)^0,c
  5636   001B5C                     l2527:
  5637   001B5C  5008               	movf	(___fldiv@a+3)^0,w,c
  5638   001B5E  0B80               	andlw	128
  5639   001B60  1A11               	xorwf	___fldiv@sign^0,f,c
  5640   001B62  5008               	movf	(___fldiv@a+3)^0,w,c
  5641   001B64  2408               	addwf	(___fldiv@a+3)^0,w,c
  5642   001B66  6E19               	movwf	___fldiv@aexp^0,c
  5643   001B68  AE07               	btfss	(___fldiv@a+2)^0,7,c
  5644   001B6A  EFB9  F00D         	goto	u2311
  5645   001B6E  EFBB  F00D         	goto	u2310
  5646   001B72                     u2311:
  5647   001B72  EFBC  F00D         	goto	l2535
  5648   001B76                     u2310:
  5649   001B76  8019               	bsf	___fldiv@aexp^0,0,c
  5650   001B78                     l2535:
  5651   001B78  5019               	movf	___fldiv@aexp^0,w,c
  5652   001B7A  B4D8               	btfsc	status,2,c
  5653   001B7C  EFC2  F00D         	goto	u2321
  5654   001B80  EFC4  F00D         	goto	u2320
  5655   001B84                     u2321:
  5656   001B84  EFD9  F00D         	goto	l2545
  5657   001B88                     u2320:
  5658   001B88  2819               	incf	___fldiv@aexp^0,w,c
  5659   001B8A  A4D8               	btfss	status,2,c
  5660   001B8C  EFCA  F00D         	goto	u2331
  5661   001B90  EFCC  F00D         	goto	u2330
  5662   001B94                     u2331:
  5663   001B94  EFD4  F00D         	goto	l2541
  5664   001B98                     u2330:
  5665   001B98  0E00               	movlw	0
  5666   001B9A  6E05               	movwf	___fldiv@a^0,c
  5667   001B9C  0E00               	movlw	0
  5668   001B9E  6E06               	movwf	(___fldiv@a+1)^0,c
  5669   001BA0  0E00               	movlw	0
  5670   001BA2  6E07               	movwf	(___fldiv@a+2)^0,c
  5671   001BA4  0E00               	movlw	0
  5672   001BA6  6E08               	movwf	(___fldiv@a+3)^0,c
  5673   001BA8                     l2541:
  5674   001BA8  8E07               	bsf	(___fldiv@a+2)^0,7,c
  5675   001BAA  0E00               	movlw	0
  5676   001BAC  6E08               	movwf	(___fldiv@a+3)^0,c
  5677   001BAE  EFE1  F00D         	goto	l2547
  5678   001BB2                     l2545:
  5679   001BB2  0E00               	movlw	0
  5680   001BB4  6E05               	movwf	___fldiv@a^0,c
  5681   001BB6  0E00               	movlw	0
  5682   001BB8  6E06               	movwf	(___fldiv@a+1)^0,c
  5683   001BBA  0E00               	movlw	0
  5684   001BBC  6E07               	movwf	(___fldiv@a+2)^0,c
  5685   001BBE  0E00               	movlw	0
  5686   001BC0  6E08               	movwf	(___fldiv@a+3)^0,c
  5687   001BC2                     l2547:
  5688   001BC2  5005               	movf	___fldiv@a^0,w,c
  5689   001BC4  1006               	iorwf	(___fldiv@a+1)^0,w,c
  5690   001BC6  1007               	iorwf	(___fldiv@a+2)^0,w,c
  5691   001BC8  1008               	iorwf	(___fldiv@a+3)^0,w,c
  5692   001BCA  A4D8               	btfss	status,2,c
  5693   001BCC  EFEA  F00D         	goto	u2341
  5694   001BD0  EFEC  F00D         	goto	u2340
  5695   001BD4                     u2341:
  5696   001BD4  EF04  F00E         	goto	l2559
  5697   001BD8                     u2340:
  5698   001BD8  0E00               	movlw	0
  5699   001BDA  6E01               	movwf	___fldiv@b^0,c
  5700   001BDC  0E00               	movlw	0
  5701   001BDE  6E02               	movwf	(___fldiv@b+1)^0,c
  5702   001BE0  0E00               	movlw	0
  5703   001BE2  6E03               	movwf	(___fldiv@b+2)^0,c
  5704   001BE4  0E00               	movlw	0
  5705   001BE6  6E04               	movwf	(___fldiv@b+3)^0,c
  5706   001BE8  0E80               	movlw	128
  5707   001BEA  1203               	iorwf	(___fldiv@b+2)^0,f,c
  5708   001BEC  0E7F               	movlw	127
  5709   001BEE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5710   001BF0                     l2553:
  5711   001BF0  5011               	movf	___fldiv@sign^0,w,c
  5712   001BF2  1204               	iorwf	(___fldiv@b+3)^0,f,c
  5713   001BF4  C001  F001         	movff	___fldiv@b,?___fldiv
  5714   001BF8  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  5715   001BFC  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  5716   001C00  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  5717   001C04  EF47  F00F         	goto	l650
  5718   001C08                     l2559:
  5719   001C08  5018               	movf	___fldiv@bexp^0,w,c
  5720   001C0A  A4D8               	btfss	status,2,c
  5721   001C0C  EF0A  F00E         	goto	u2351
  5722   001C10  EF0C  F00E         	goto	u2350
  5723   001C14                     u2351:
  5724   001C14  EF16  F00E         	goto	l2567
  5725   001C18                     u2350:
  5726   001C18  0E00               	movlw	0
  5727   001C1A  6E01               	movwf	?___fldiv^0,c
  5728   001C1C  0E00               	movlw	0
  5729   001C1E  6E02               	movwf	(?___fldiv+1)^0,c
  5730   001C20  0E00               	movlw	0
  5731   001C22  6E03               	movwf	(?___fldiv+2)^0,c
  5732   001C24  0E00               	movlw	0
  5733   001C26  6E04               	movwf	(?___fldiv+3)^0,c
  5734   001C28  EF47  F00F         	goto	l650
  5735   001C2C                     l2567:
  5736   001C2C  5019               	movf	___fldiv@aexp^0,w,c
  5737   001C2E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  5738   001C32  6A0A               	clrf	(??___fldiv+1)^0,c
  5739   001C34  5E09               	subwf	??___fldiv^0,f,c
  5740   001C36  0E00               	movlw	0
  5741   001C38  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  5742   001C3A  0E7F               	movlw	127
  5743   001C3C  2409               	addwf	??___fldiv^0,w,c
  5744   001C3E  6E12               	movwf	___fldiv@new_exp^0,c
  5745   001C40  0E00               	movlw	0
  5746   001C42  200A               	addwfc	(??___fldiv+1)^0,w,c
  5747   001C44  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5748   001C46  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  5749   001C4A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  5750   001C4E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  5751   001C52  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  5752   001C56  0E00               	movlw	0
  5753   001C58  6E01               	movwf	___fldiv@b^0,c
  5754   001C5A  0E00               	movlw	0
  5755   001C5C  6E02               	movwf	(___fldiv@b+1)^0,c
  5756   001C5E  0E00               	movlw	0
  5757   001C60  6E03               	movwf	(___fldiv@b+2)^0,c
  5758   001C62  0E00               	movlw	0
  5759   001C64  6E04               	movwf	(___fldiv@b+3)^0,c
  5760   001C66  0E00               	movlw	0
  5761   001C68  6E14               	movwf	___fldiv@grs^0,c
  5762   001C6A  0E00               	movlw	0
  5763   001C6C  6E15               	movwf	(___fldiv@grs+1)^0,c
  5764   001C6E  0E00               	movlw	0
  5765   001C70  6E16               	movwf	(___fldiv@grs+2)^0,c
  5766   001C72  0E00               	movlw	0
  5767   001C74  6E17               	movwf	(___fldiv@grs+3)^0,c
  5768   001C76  0E00               	movlw	0
  5769   001C78  6E19               	movwf	___fldiv@aexp^0,c
  5770   001C7A  EF77  F00E         	goto	l652
  5771   001C7E                     l2577:
  5772   001C7E  5019               	movf	___fldiv@aexp^0,w,c
  5773   001C80  B4D8               	btfsc	status,2,c
  5774   001C82  EF45  F00E         	goto	u2361
  5775   001C86  EF47  F00E         	goto	u2360
  5776   001C8A                     u2361:
  5777   001C8A  EF5E  F00E         	goto	l2585
  5778   001C8E                     u2360:
  5779   001C8E  90D8               	bcf	status,0,c
  5780   001C90  360D               	rlcf	___fldiv@rem^0,f,c
  5781   001C92  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  5782   001C94  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  5783   001C96  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  5784   001C98  90D8               	bcf	status,0,c
  5785   001C9A  3601               	rlcf	___fldiv@b^0,f,c
  5786   001C9C  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5787   001C9E  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5788   001CA0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5789   001CA2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5790   001CA4  EF56  F00E         	goto	u2371
  5791   001CA8  EF58  F00E         	goto	u2370
  5792   001CAC                     u2371:
  5793   001CAC  EF59  F00E         	goto	l655
  5794   001CB0                     u2370:
  5795   001CB0  8001               	bsf	___fldiv@b^0,0,c
  5796   001CB2                     l655:
  5797   001CB2  90D8               	bcf	status,0,c
  5798   001CB4  3614               	rlcf	___fldiv@grs^0,f,c
  5799   001CB6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5800   001CB8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5801   001CBA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5802   001CBC                     l2585:
  5803   001CBC  5005               	movf	___fldiv@a^0,w,c
  5804   001CBE  5C0D               	subwf	___fldiv@rem^0,w,c
  5805   001CC0  5006               	movf	(___fldiv@a+1)^0,w,c
  5806   001CC2  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  5807   001CC4  5007               	movf	(___fldiv@a+2)^0,w,c
  5808   001CC6  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  5809   001CC8  5008               	movf	(___fldiv@a+3)^0,w,c
  5810   001CCA  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  5811   001CCC  A0D8               	btfss	status,0,c
  5812   001CCE  EF6B  F00E         	goto	u2381
  5813   001CD2  EF6D  F00E         	goto	u2380
  5814   001CD6                     u2381:
  5815   001CD6  EF76  F00E         	goto	l2591
  5816   001CDA                     u2380:
  5817   001CDA  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  5818   001CDC  5005               	movf	___fldiv@a^0,w,c
  5819   001CDE  5E0D               	subwf	___fldiv@rem^0,f,c
  5820   001CE0  5006               	movf	(___fldiv@a+1)^0,w,c
  5821   001CE2  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  5822   001CE4  5007               	movf	(___fldiv@a+2)^0,w,c
  5823   001CE6  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  5824   001CE8  5008               	movf	(___fldiv@a+3)^0,w,c
  5825   001CEA  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  5826   001CEC                     l2591:
  5827   001CEC  2A19               	incf	___fldiv@aexp^0,f,c
  5828   001CEE                     l652:
  5829   001CEE  0E19               	movlw	25
  5830   001CF0  6419               	cpfsgt	___fldiv@aexp^0,c
  5831   001CF2  EF7D  F00E         	goto	u2391
  5832   001CF6  EF7F  F00E         	goto	u2390
  5833   001CFA                     u2391:
  5834   001CFA  EF3F  F00E         	goto	l2577
  5835   001CFE                     u2390:
  5836   001CFE  500D               	movf	___fldiv@rem^0,w,c
  5837   001D00  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  5838   001D02  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  5839   001D04  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  5840   001D06  B4D8               	btfsc	status,2,c
  5841   001D08  EF88  F00E         	goto	u2401
  5842   001D0C  EF8A  F00E         	goto	u2400
  5843   001D10                     u2401:
  5844   001D10  EFA2  F00E         	goto	l2603
  5845   001D14                     u2400:
  5846   001D14  8014               	bsf	___fldiv@grs^0,0,c
  5847   001D16  EFA2  F00E         	goto	l2603
  5848   001D1A                     l2597:
  5849   001D1A  90D8               	bcf	status,0,c
  5850   001D1C  3601               	rlcf	___fldiv@b^0,f,c
  5851   001D1E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  5852   001D20  3603               	rlcf	(___fldiv@b+2)^0,f,c
  5853   001D22  3604               	rlcf	(___fldiv@b+3)^0,f,c
  5854   001D24  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5855   001D26  EF97  F00E         	goto	u2411
  5856   001D2A  EF99  F00E         	goto	u2410
  5857   001D2E                     u2411:
  5858   001D2E  EF9A  F00E         	goto	l661
  5859   001D32                     u2410:
  5860   001D32  8001               	bsf	___fldiv@b^0,0,c
  5861   001D34                     l661:
  5862   001D34  90D8               	bcf	status,0,c
  5863   001D36  3614               	rlcf	___fldiv@grs^0,f,c
  5864   001D38  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  5865   001D3A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  5866   001D3C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  5867   001D3E  0612               	decf	___fldiv@new_exp^0,f,c
  5868   001D40  A0D8               	btfss	status,0,c
  5869   001D42  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  5870   001D44                     l2603:
  5871   001D44  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5872   001D46  EFA7  F00E         	goto	u2421
  5873   001D4A  EFA9  F00E         	goto	u2420
  5874   001D4E                     u2421:
  5875   001D4E  EF8D  F00E         	goto	l2597
  5876   001D52                     u2420:
  5877   001D52  0E00               	movlw	0
  5878   001D54  6E19               	movwf	___fldiv@aexp^0,c
  5879   001D56  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  5880   001D58  EFB0  F00E         	goto	u2431
  5881   001D5C  EFB2  F00E         	goto	u2430
  5882   001D60                     u2431:
  5883   001D60  EFD6  F00E         	goto	l663
  5884   001D64                     u2430:
  5885   001D64  0EFF               	movlw	255
  5886   001D66  1414               	andwf	___fldiv@grs^0,w,c
  5887   001D68  6E09               	movwf	??___fldiv^0,c
  5888   001D6A  0EFF               	movlw	255
  5889   001D6C  1415               	andwf	(___fldiv@grs+1)^0,w,c
  5890   001D6E  6E0A               	movwf	(??___fldiv+1)^0,c
  5891   001D70  0EFF               	movlw	255
  5892   001D72  1416               	andwf	(___fldiv@grs+2)^0,w,c
  5893   001D74  6E0B               	movwf	(??___fldiv+2)^0,c
  5894   001D76  0E7F               	movlw	127
  5895   001D78  1417               	andwf	(___fldiv@grs+3)^0,w,c
  5896   001D7A  6E0C               	movwf	(??___fldiv+3)^0,c
  5897   001D7C  5009               	movf	??___fldiv^0,w,c
  5898   001D7E  100A               	iorwf	(??___fldiv+1)^0,w,c
  5899   001D80  100B               	iorwf	(??___fldiv+2)^0,w,c
  5900   001D82  100C               	iorwf	(??___fldiv+3)^0,w,c
  5901   001D84  B4D8               	btfsc	status,2,c
  5902   001D86  EFC7  F00E         	goto	u2441
  5903   001D8A  EFC9  F00E         	goto	u2440
  5904   001D8E                     u2441:
  5905   001D8E  EFCD  F00E         	goto	l664
  5906   001D92                     u2440:
  5907   001D92                     l2611:
  5908   001D92  0E01               	movlw	1
  5909   001D94  6E19               	movwf	___fldiv@aexp^0,c
  5910   001D96  EFD6  F00E         	goto	l663
  5911   001D9A                     l664:
  5912   001D9A  A001               	btfss	___fldiv@b^0,0,c
  5913   001D9C  EFD2  F00E         	goto	u2451
  5914   001DA0  EFD4  F00E         	goto	u2450
  5915   001DA4                     u2451:
  5916   001DA4  EFD6  F00E         	goto	l663
  5917   001DA8                     u2450:
  5918   001DA8  EFC9  F00E         	goto	l2611
  5919   001DAC                     l663:
  5920   001DAC  5019               	movf	___fldiv@aexp^0,w,c
  5921   001DAE  B4D8               	btfsc	status,2,c
  5922   001DB0  EFDC  F00E         	goto	u2461
  5923   001DB4  EFDE  F00E         	goto	u2460
  5924   001DB8                     u2461:
  5925   001DB8  EF02  F00F         	goto	l2623
  5926   001DBC                     u2460:
  5927   001DBC  0E01               	movlw	1
  5928   001DBE  2601               	addwf	___fldiv@b^0,f,c
  5929   001DC0  0E00               	movlw	0
  5930   001DC2  2202               	addwfc	(___fldiv@b+1)^0,f,c
  5931   001DC4  2203               	addwfc	(___fldiv@b+2)^0,f,c
  5932   001DC6  2204               	addwfc	(___fldiv@b+3)^0,f,c
  5933   001DC8  A004               	btfss	(___fldiv@b+3)^0,0,c
  5934   001DCA  EFE9  F00E         	goto	u2471
  5935   001DCE  EFEB  F00E         	goto	u2470
  5936   001DD2                     u2471:
  5937   001DD2  EF02  F00F         	goto	l2623
  5938   001DD6                     u2470:
  5939   001DD6  C001  F009         	movff	___fldiv@b,??___fldiv
  5940   001DDA  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  5941   001DDE  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  5942   001DE2  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  5943   001DE6  340C               	rlcf	(??___fldiv+3)^0,w,c
  5944   001DE8  320C               	rrcf	(??___fldiv+3)^0,f,c
  5945   001DEA  320B               	rrcf	(??___fldiv+2)^0,f,c
  5946   001DEC  320A               	rrcf	(??___fldiv+1)^0,f,c
  5947   001DEE  3209               	rrcf	??___fldiv^0,f,c
  5948   001DF0  C009  F001         	movff	??___fldiv,___fldiv@b
  5949   001DF4  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  5950   001DF8  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  5951   001DFC  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  5952   001E00  4A12               	infsnz	___fldiv@new_exp^0,f,c
  5953   001E02  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  5954   001E04                     l2623:
  5955   001E04  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5956   001E06  EF0D  F00F         	goto	u2481
  5957   001E0A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5958   001E0C  E108               	bnz	u2480
  5959   001E0E  2812               	incf	___fldiv@new_exp^0,w,c
  5960   001E10  A0D8               	btfss	status,0,c
  5961   001E12  EF0D  F00F         	goto	u2481
  5962   001E16  EF0F  F00F         	goto	u2480
  5963   001E1A                     u2481:
  5964   001E1A  EF1A  F00F         	goto	l2627
  5965   001E1E                     u2480:
  5966   001E1E  0E00               	movlw	0
  5967   001E20  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5968   001E22  6812               	setf	___fldiv@new_exp^0,c
  5969   001E24  0E00               	movlw	0
  5970   001E26  6E01               	movwf	___fldiv@b^0,c
  5971   001E28  0E00               	movlw	0
  5972   001E2A  6E02               	movwf	(___fldiv@b+1)^0,c
  5973   001E2C  0E00               	movlw	0
  5974   001E2E  6E03               	movwf	(___fldiv@b+2)^0,c
  5975   001E30  0E00               	movlw	0
  5976   001E32  6E04               	movwf	(___fldiv@b+3)^0,c
  5977   001E34                     l2627:
  5978   001E34  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5979   001E36  EF27  F00F         	goto	u2490
  5980   001E3A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  5981   001E3C  E106               	bnz	u2491
  5982   001E3E  0412               	decf	___fldiv@new_exp^0,w,c
  5983   001E40  B0D8               	btfsc	status,0,c
  5984   001E42  EF25  F00F         	goto	u2491
  5985   001E46  EF27  F00F         	goto	u2490
  5986   001E4A                     u2491:
  5987   001E4A  EF35  F00F         	goto	l2631
  5988   001E4E                     u2490:
  5989   001E4E  0E00               	movlw	0
  5990   001E50  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  5991   001E52  0E00               	movlw	0
  5992   001E54  6E12               	movwf	___fldiv@new_exp^0,c
  5993   001E56  0E00               	movlw	0
  5994   001E58  6E01               	movwf	___fldiv@b^0,c
  5995   001E5A  0E00               	movlw	0
  5996   001E5C  6E02               	movwf	(___fldiv@b+1)^0,c
  5997   001E5E  0E00               	movlw	0
  5998   001E60  6E03               	movwf	(___fldiv@b+2)^0,c
  5999   001E62  0E00               	movlw	0
  6000   001E64  6E04               	movwf	(___fldiv@b+3)^0,c
  6001   001E66  0E00               	movlw	0
  6002   001E68  6E11               	movwf	___fldiv@sign^0,c
  6003   001E6A                     l2631:
  6004   001E6A  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6005   001E6E  A018               	btfss	___fldiv@bexp^0,0,c
  6006   001E70  EF3C  F00F         	goto	u2501
  6007   001E74  EF3E  F00F         	goto	u2500
  6008   001E78                     u2501:
  6009   001E78  EF41  F00F         	goto	l2637
  6010   001E7C                     u2500:
  6011   001E7C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6012   001E7E  EF42  F00F         	goto	l2639
  6013   001E82                     l2637:
  6014   001E82  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6015   001E84                     l2639:
  6016   001E84  90D8               	bcf	status,0,c
  6017   001E86  3018               	rrcf	___fldiv@bexp^0,w,c
  6018   001E88  6E04               	movwf	(___fldiv@b+3)^0,c
  6019   001E8A  EFF8  F00D         	goto	l2553
  6020   001E8E                     l650:
  6021   001E8E  0012               	return		;funcret
  6022   001E90                     __end_of___fldiv:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function _atoi *****************
  6026 ;; Defined at:
  6027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6030 ;;		 -> STR_1(6), 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  n               2   13[COMRAM] int 
  6033 ;;  neg             2   11[COMRAM] int 
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  2    6[COMRAM] int 
  6036 ;; Registers used:
  6037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6043 ;;      Params:         2       0       0       0       0       0       0       0       0
  6044 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6045 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6046 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6047 ;;Total ram usage:        9 bytes
  6048 ;; Hardware stack levels used: 1
  6049 ;; Hardware stack levels required when called: 1
  6050 ;; This function calls:
  6051 ;;		___wmul
  6052 ;;		_isdigit
  6053 ;;		_isspace
  6054 ;; This function is called by:
  6055 ;;		_vfpfcnvrt
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text22
  6060   00256A                     __ptext22:
  6061                           	callstack 0
  6062   00256A                     _atoi:
  6063                           	callstack 26
  6064   00256A  0E00               	movlw	0
  6065   00256C  6E0F               	movwf	(atoi@n+1)^0,c
  6066   00256E  0E00               	movlw	0
  6067   002570  6E0E               	movwf	atoi@n^0,c
  6068   002572  0E00               	movlw	0
  6069   002574  6E0D               	movwf	(atoi@neg+1)^0,c
  6070   002576  0E00               	movlw	0
  6071   002578  6E0C               	movwf	atoi@neg^0,c
  6072   00257A  EFC1  F012         	goto	l3201
  6073   00257E                     l3197:
  6074   00257E  4A07               	infsnz	atoi@s^0,f,c
  6075   002580  2A08               	incf	(atoi@s+1)^0,f,c
  6076   002582                     l3201:
  6077   002582  C007  FFF6         	movff	atoi@s,tblptrl
  6078   002586  C008  FFF7         	movff	atoi@s+1,tblptrh
  6079   00258A                     	if	0	;tblptru may be non-zero
  6080   00258A                     	endif
  6081   00258A                     	if	0	;tblptru may be non-zero
  6082   00258A                     	endif
  6083   00258A  0008               	tblrd		*
  6084   00258C  50F5               	movf	tablat,w,c
  6085   00258E  0A20               	xorlw	32
  6086   002590  B4D8               	btfsc	status,2,c
  6087   002592  EFCD  F012         	goto	u3441
  6088   002596  EFCF  F012         	goto	u3440
  6089   00259A                     u3441:
  6090   00259A  EFBF  F012         	goto	l3197
  6091   00259E                     u3440:
  6092   00259E  C007  FFF6         	movff	atoi@s,tblptrl
  6093   0025A2  C008  FFF7         	movff	atoi@s+1,tblptrh
  6094   0025A6                     	if	0	;tblptru may be non-zero
  6095   0025A6                     	endif
  6096   0025A6                     	if	0	;tblptru may be non-zero
  6097   0025A6                     	endif
  6098   0025A6  0008               	tblrd		*
  6099   0025A8  CFF5 F009          	movff	tablat,??_atoi
  6100   0025AC  0EF7               	movlw	247
  6101   0025AE  2409               	addwf	??_atoi^0,w,c
  6102   0025B0  6E0A               	movwf	(??_atoi+1)^0,c
  6103   0025B2  6A0B               	clrf	(??_atoi+2)^0,c
  6104   0025B4  0EFF               	movlw	255
  6105   0025B6  220B               	addwfc	(??_atoi+2)^0,f,c
  6106   0025B8  500B               	movf	(??_atoi+2)^0,w,c
  6107   0025BA  E109               	bnz	u3450
  6108   0025BC  0E05               	movlw	5
  6109   0025BE  5C0A               	subwf	(??_atoi+1)^0,w,c
  6110   0025C0  A0D8               	btfss	status,0,c
  6111   0025C2  EFE5  F012         	goto	u3451
  6112   0025C6  EFE7  F012         	goto	u3450
  6113   0025CA                     u3451:
  6114   0025CA  EFBF  F012         	goto	l3197
  6115   0025CE                     u3450:
  6116   0025CE  EFF1  F012         	goto	l3209
  6117   0025D2                     l3205:
  6118   0025D2  0E00               	movlw	0
  6119   0025D4  6E0D               	movwf	(atoi@neg+1)^0,c
  6120   0025D6  0E01               	movlw	1
  6121   0025D8  6E0C               	movwf	atoi@neg^0,c
  6122   0025DA                     l3207:
  6123   0025DA  4A07               	infsnz	atoi@s^0,f,c
  6124   0025DC  2A08               	incf	(atoi@s+1)^0,f,c
  6125   0025DE  EF26  F013         	goto	l3217
  6126   0025E2                     l3209:
  6127   0025E2  C007  FFF6         	movff	atoi@s,tblptrl
  6128   0025E6  C008  FFF7         	movff	atoi@s+1,tblptrh
  6129   0025EA                     	if	0	;tblptru may be non-zero
  6130   0025EA                     	endif
  6131   0025EA                     	if	0	;tblptru may be non-zero
  6132   0025EA                     	endif
  6133   0025EA  0008               	tblrd		*
  6134   0025EC  50F5               	movf	tablat,w,c
  6135   0025EE  6E09               	movwf	??_atoi^0,c
  6136   0025F0  6A0A               	clrf	(??_atoi+1)^0,c
  6137                           
  6138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6139                           ; Switch size 1, requested type "simple"
  6140                           ; Number of cases is 1, Range of values is 0 to 0
  6141                           ; switch strategies available:
  6142                           ; Name         Instructions Cycles
  6143                           ; simple_byte            4     3 (average)
  6144                           ;	Chosen strategy is simple_byte
  6145   0025F2  500A               	movf	(??_atoi+1)^0,w,c
  6146   0025F4  0A00               	xorlw	0	; case 0
  6147   0025F6  B4D8               	btfsc	status,2,c
  6148   0025F8  EF00  F013         	goto	l3551
  6149   0025FC  EF26  F013         	goto	l3217
  6150   002600                     l3551:
  6151                           
  6152                           ; Switch size 1, requested type "simple"
  6153                           ; Number of cases is 2, Range of values is 43 to 45
  6154                           ; switch strategies available:
  6155                           ; Name         Instructions Cycles
  6156                           ; simple_byte            7     4 (average)
  6157                           ;	Chosen strategy is simple_byte
  6158   002600  5009               	movf	??_atoi^0,w,c
  6159   002602  0A2B               	xorlw	43	; case 43
  6160   002604  B4D8               	btfsc	status,2,c
  6161   002606  EFED  F012         	goto	l3207
  6162   00260A  0A06               	xorlw	6	; case 45
  6163   00260C  B4D8               	btfsc	status,2,c
  6164   00260E  EFE9  F012         	goto	l3205
  6165   002612  EF26  F013         	goto	l3217
  6166   002616                     l3211:
  6167   002616  C00E  F001         	movff	atoi@n,___wmul@multiplier
  6168   00261A  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6169   00261E  0E00               	movlw	0
  6170   002620  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6171   002622  0E0A               	movlw	10
  6172   002624  6E03               	movwf	___wmul@multiplicand^0,c
  6173   002626  EC29  F018         	call	___wmul	;wreg free
  6174   00262A  C007  FFF6         	movff	atoi@s,tblptrl
  6175   00262E  C008  FFF7         	movff	atoi@s+1,tblptrh
  6176   002632                     	if	0	;tblptru may be non-zero
  6177   002632                     	endif
  6178   002632                     	if	0	;tblptru may be non-zero
  6179   002632                     	endif
  6180   002632  0008               	tblrd		*
  6181   002634  50F5               	movf	tablat,w,c
  6182   002636  5E01               	subwf	?___wmul^0,f,c
  6183   002638  0E00               	movlw	0
  6184   00263A  5A02               	subwfb	(?___wmul+1)^0,f,c
  6185   00263C  0E30               	movlw	48
  6186   00263E  2401               	addwf	?___wmul^0,w,c
  6187   002640  6E0E               	movwf	atoi@n^0,c
  6188   002642  0E00               	movlw	0
  6189   002644  2002               	addwfc	(?___wmul+1)^0,w,c
  6190   002646  6E0F               	movwf	(atoi@n+1)^0,c
  6191   002648  EFED  F012         	goto	l3207
  6192   00264C                     l3217:
  6193   00264C  C007  FFF6         	movff	atoi@s,tblptrl
  6194   002650  C008  FFF7         	movff	atoi@s+1,tblptrh
  6195   002654                     	if	0	;tblptru may be non-zero
  6196   002654                     	endif
  6197   002654                     	if	0	;tblptru may be non-zero
  6198   002654                     	endif
  6199   002654  0008               	tblrd		*
  6200   002656  CFF5 F009          	movff	tablat,??_atoi
  6201   00265A  0ED0               	movlw	208
  6202   00265C  2409               	addwf	??_atoi^0,w,c
  6203   00265E  6E0A               	movwf	(??_atoi+1)^0,c
  6204   002660  6A0B               	clrf	(??_atoi+2)^0,c
  6205   002662  0EFF               	movlw	255
  6206   002664  220B               	addwfc	(??_atoi+2)^0,f,c
  6207   002666  500B               	movf	(??_atoi+2)^0,w,c
  6208   002668  E109               	bnz	u3460
  6209   00266A  0E0A               	movlw	10
  6210   00266C  5C0A               	subwf	(??_atoi+1)^0,w,c
  6211   00266E  A0D8               	btfss	status,0,c
  6212   002670  EF3C  F013         	goto	u3461
  6213   002674  EF3E  F013         	goto	u3460
  6214   002678                     u3461:
  6215   002678  EF0B  F013         	goto	l3211
  6216   00267C                     u3460:
  6217   00267C  500C               	movf	atoi@neg^0,w,c
  6218   00267E  100D               	iorwf	(atoi@neg+1)^0,w,c
  6219   002680  A4D8               	btfss	status,2,c
  6220   002682  EF45  F013         	goto	u3471
  6221   002686  EF47  F013         	goto	u3470
  6222   00268A                     u3471:
  6223   00268A  EF55  F013         	goto	l903
  6224   00268E                     u3470:
  6225   00268E  C00E  F009         	movff	atoi@n,??_atoi
  6226   002692  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  6227   002696  1E09               	comf	??_atoi^0,f,c
  6228   002698  1E0A               	comf	(??_atoi+1)^0,f,c
  6229   00269A  4A09               	infsnz	??_atoi^0,f,c
  6230   00269C  2A0A               	incf	(??_atoi+1)^0,f,c
  6231   00269E  C009  F007         	movff	??_atoi,?_atoi
  6232   0026A2  C00A  F008         	movff	??_atoi+1,?_atoi+1
  6233   0026A6  EF59  F013         	goto	l906
  6234   0026AA                     l903:
  6235   0026AA  C00E  F007         	movff	atoi@n,?_atoi
  6236   0026AE  C00F  F008         	movff	atoi@n+1,?_atoi+1
  6237   0026B2                     l906:
  6238   0026B2  0012               	return		;funcret
  6239   0026B4                     __end_of_atoi:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _isspace *****************
  6243 ;; Defined at:
  6244 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  c               2    0[COMRAM] int 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  2    0[COMRAM] int 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6258 ;;      Params:         2       0       0       0       0       0       0       0       0
  6259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6260 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6261 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6262 ;;Total ram usage:        5 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_atoi
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text23
  6272   002E76                     __ptext23:
  6273                           	callstack 0
  6274   002E76                     _isspace:
  6275                           	callstack 26
  6276   002E76  0E01               	movlw	1
  6277   002E78  6E05               	movwf	_isspace$1016^0,c
  6278   002E7A  0E20               	movlw	32
  6279   002E7C  1801               	xorwf	isspace@c^0,w,c
  6280   002E7E  1002               	iorwf	(isspace@c+1)^0,w,c
  6281   002E80  B4D8               	btfsc	status,2,c
  6282   002E82  EF45  F017         	goto	u3101
  6283   002E86  EF47  F017         	goto	u3100
  6284   002E8A                     u3101:
  6285   002E8A  EF5A  F017         	goto	l2969
  6286   002E8E                     u3100:
  6287   002E8E  0EF7               	movlw	247
  6288   002E90  2401               	addwf	isspace@c^0,w,c
  6289   002E92  6E03               	movwf	??_isspace^0,c
  6290   002E94  0EFF               	movlw	255
  6291   002E96  2002               	addwfc	(isspace@c+1)^0,w,c
  6292   002E98  6E04               	movwf	(??_isspace+1)^0,c
  6293   002E9A  5004               	movf	(??_isspace+1)^0,w,c
  6294   002E9C  E109               	bnz	u3110
  6295   002E9E  0E05               	movlw	5
  6296   002EA0  5C03               	subwf	??_isspace^0,w,c
  6297   002EA2  A0D8               	btfss	status,0,c
  6298   002EA4  EF56  F017         	goto	u3111
  6299   002EA8  EF58  F017         	goto	u3110
  6300   002EAC                     u3111:
  6301   002EAC  EF5A  F017         	goto	l2969
  6302   002EB0                     u3110:
  6303   002EB0  0E00               	movlw	0
  6304   002EB2  6E05               	movwf	_isspace$1016^0,c
  6305   002EB4                     l2969:
  6306   002EB4  C005  F001         	movff	_isspace$1016,?_isspace
  6307   002EB8  6A02               	clrf	(?_isspace+1)^0,c
  6308   002EBA  0012               	return		;funcret
  6309   002EBC                     __end_of_isspace:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function _isdigit *****************
  6313 ;; Defined at:
  6314 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  c               2    0[COMRAM] int 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2    0[COMRAM] int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6328 ;;      Params:         2       0       0       0       0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6330 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6331 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6332 ;;Total ram usage:        4 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_vfpfcnvrt
  6338 ;;		_atoi
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text24
  6343   002FA8                     __ptext24:
  6344                           	callstack 0
  6345   002FA8                     _isdigit:
  6346                           	callstack 27
  6347   002FA8  0ED0               	movlw	208
  6348   002FAA  2401               	addwf	isdigit@c^0,w,c
  6349   002FAC  6E03               	movwf	??_isdigit^0,c
  6350   002FAE  0EFF               	movlw	255
  6351   002FB0  2002               	addwfc	(isdigit@c+1)^0,w,c
  6352   002FB2  6E04               	movwf	(??_isdigit+1)^0,c
  6353   002FB4  5004               	movf	(??_isdigit+1)^0,w,c
  6354   002FB6  E10A               	bnz	u3080
  6355   002FB8  0E0A               	movlw	10
  6356   002FBA  5C03               	subwf	??_isdigit^0,w,c
  6357   002FBC  A0D8               	btfss	status,0,c
  6358   002FBE  EFE3  F017         	goto	u3081
  6359   002FC2  EFE6  F017         	goto	u3080
  6360   002FC6                     u3081:
  6361   002FC6  0E01               	movlw	1
  6362   002FC8  EFE7  F017         	goto	u3090
  6363   002FCC                     u3080:
  6364   002FCC  0E00               	movlw	0
  6365   002FCE                     u3090:
  6366   002FCE  6E01               	movwf	?_isdigit^0,c
  6367   002FD0  6A02               	clrf	(?_isdigit+1)^0,c
  6368   002FD2  0012               	return		;funcret
  6369   002FD4                     __end_of_isdigit:
  6370                           	callstack 0
  6371                           
  6372 ;; *************** function ___wmul *****************
  6373 ;; Defined at:
  6374 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  multiplier      2    0[COMRAM] unsigned int 
  6377 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  product         2    4[COMRAM] unsigned int 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  2    0[COMRAM] unsigned int 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, status,0, prodl, prodh
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6389 ;;      Params:         4       0       0       0       0       0       0       0       0
  6390 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6392 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6393 ;;Total ram usage:        6 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_atoi
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           	psect	text25
  6403   003052                     __ptext25:
  6404                           	callstack 0
  6405   003052                     ___wmul:
  6406                           	callstack 26
  6407   003052  5001               	movf	___wmul@multiplier^0,w,c
  6408   003054  0203               	mulwf	___wmul@multiplicand^0,c
  6409   003056  CFF3 F005          	movff	prodl,___wmul@product
  6410   00305A  CFF4 F006          	movff	prodh,___wmul@product+1
  6411   00305E  5001               	movf	___wmul@multiplier^0,w,c
  6412   003060  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6413   003062  50F3               	movf	243,w,c
  6414   003064  2606               	addwf	(___wmul@product+1)^0,f,c
  6415   003066  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6416   003068  0203               	mulwf	___wmul@multiplicand^0,c
  6417   00306A  50F3               	movf	243,w,c
  6418   00306C  2606               	addwf	(___wmul@product+1)^0,f,c
  6419   00306E  C005  F001         	movff	___wmul@product,?___wmul
  6420   003072  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6421   003076  0012               	return		;funcret
  6422   003078                     __end_of___wmul:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _config *****************
  6426 ;; Defined at:
  6427 ;;		line 19 in file "main.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6441 ;;      Params:         0       0       0       0       0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6444 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6445 ;;Total ram usage:        0 bytes
  6446 ;; Hardware stack levels used: 1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_main
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text26
  6455   003078                     __ptext26:
  6456                           	callstack 0
  6457   003078                     _config:
  6458                           	callstack 30
  6459   003078                     
  6460                           ;main.c: 20:     TRISAbits.RA0 = 1;
  6461   003078  8092               	bsf	146,0,c	;volatile
  6462   00307A                     
  6463                           ;main.c: 21:     ADCON1bits.PCFG = 0b1110;
  6464   00307A  50C1               	movf	193,w,c	;volatile
  6465   00307C  0BF0               	andlw	-16
  6466   00307E  090E               	iorlw	14
  6467   003080  6EC1               	movwf	193,c	;volatile
  6468                           
  6469                           ;main.c: 22:     ADCON2bits.ADCS = 0b001;
  6470   003082  50C0               	movf	192,w,c	;volatile
  6471   003084  0BF8               	andlw	-8
  6472   003086  0901               	iorlw	1
  6473   003088  6EC0               	movwf	192,c	;volatile
  6474                           
  6475                           ;main.c: 23:     ADCON2bits.ACQT = 0b010;
  6476   00308A  50C0               	movf	192,w,c	;volatile
  6477   00308C  0BC7               	andlw	-57
  6478   00308E  0910               	iorlw	16
  6479   003090  6EC0               	movwf	192,c	;volatile
  6480   003092                     
  6481                           ;main.c: 24:     ADCON2bits.ADFM = 1;
  6482   003092  8EC0               	bsf	192,7,c	;volatile
  6483                           
  6484                           ;main.c: 25:     ADCON0bits.CHS = 0;
  6485   003094  0EC3               	movlw	-61
  6486   003096  16C2               	andwf	194,f,c	;volatile
  6487   003098                     
  6488                           ;main.c: 26:     ADCON0bits.ADON = 1;
  6489   003098  80C2               	bsf	194,0,c	;volatile
  6490   00309A  0012               	return		;funcret
  6491   00309C                     __end_of_config:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function _adc_read *****************
  6495 ;; Defined at:
  6496 ;;		line 28 in file "main.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  channel         1    wreg     unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  channel         1    4[COMRAM] unsigned char 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  2    0[COMRAM] unsigned short 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6510 ;;      Params:         2       0       0       0       0       0       0       0       0
  6511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6512 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6513 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6514 ;;Total ram usage:        5 bytes
  6515 ;; Hardware stack levels used: 1
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_main
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text27
  6524   002DE8                     __ptext27:
  6525                           	callstack 0
  6526   002DE8                     _adc_read:
  6527                           	callstack 30
  6528                           
  6529                           ;incstack = 0
  6530                           ;adc_read@channel stored from wreg
  6531   002DE8  6E05               	movwf	adc_read@channel^0,c
  6532   002DEA                     
  6533                           ;main.c: 29:     ADCON0bits.CHS = channel;
  6534   002DEA  C005  F003         	movff	adc_read@channel,??_adc_read
  6535   002DEE  4603               	rlncf	??_adc_read^0,f,c
  6536   002DF0  4603               	rlncf	??_adc_read^0,f,c
  6537   002DF2  50C2               	movf	194,w,c	;volatile
  6538   002DF4  1803               	xorwf	??_adc_read^0,w,c
  6539   002DF6  0BC3               	andlw	-61
  6540   002DF8  1803               	xorwf	??_adc_read^0,w,c
  6541   002DFA  6EC2               	movwf	194,c	;volatile
  6542   002DFC                     
  6543                           ;main.c: 30:     ADCON0bits.ADON = 1;
  6544   002DFC  80C2               	bsf	194,0,c	;volatile
  6545   002DFE                     
  6546                           ;main.c: 31:     ADCON0bits.GO = 1;
  6547   002DFE  82C2               	bsf	194,1,c	;volatile
  6548   002E00                     
  6549                           ;main.c: 32:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6550   002E00  0E06               	movlw	6
  6551   002E02                     u3697:
  6552   002E02  2EE8               	decfsz	wreg,f,c
  6553   002E04  D7FE               	bra	u3697
  6554   002E06  D000               	nop2	
  6555   002E08                     l36:
  6556                           
  6557                           ;main.c: 33:     while (ADCON0bits.GO)
  6558   002E08  B2C2               	btfsc	194,1,c	;volatile
  6559   002E0A  EF09  F017         	goto	u3541
  6560   002E0E  EF0B  F017         	goto	u3540
  6561   002E12                     u3541:
  6562   002E12  EF04  F017         	goto	l36
  6563   002E16                     u3540:
  6564   002E16                     
  6565                           ;main.c: 35:     ADCON0bits.ADON = 0;
  6566   002E16  90C2               	bcf	194,0,c	;volatile
  6567   002E18                     
  6568                           ;main.c: 36:     return (unsigned short)((ADRESH << 8) | ADRESL);
  6569   002E18  50C3               	movf	195,w,c	;volatile
  6570   002E1A  CFC4 F003          	movff	4036,??_adc_read	;volatile
  6571   002E1E  6A04               	clrf	(??_adc_read+1)^0,c
  6572   002E20  C003  F004         	movff	??_adc_read,??_adc_read+1
  6573   002E24  6A03               	clrf	??_adc_read^0,c
  6574   002E26  1003               	iorwf	??_adc_read^0,w,c
  6575   002E28  6E01               	movwf	?_adc_read^0,c
  6576   002E2A  5004               	movf	(??_adc_read+1)^0,w,c
  6577   002E2C  6E02               	movwf	(?_adc_read+1)^0,c
  6578   002E2E  0012               	return		;funcret
  6579   002E30                     __end_of_adc_read:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function ___xxtofl *****************
  6583 ;; Defined at:
  6584 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  sign            1    wreg     unsigned char 
  6587 ;;  val             4    0[COMRAM] long 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  sign            1    8[COMRAM] unsigned char 
  6590 ;;  arg             4   10[COMRAM] unsigned long 
  6591 ;;  exp             1    9[COMRAM] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  4    0[COMRAM] unsigned char 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6601 ;;      Params:         4       0       0       0       0       0       0       0       0
  6602 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6603 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6604 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6605 ;;Total ram usage:       14 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_main
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text28
  6615   0023B6                     __ptext28:
  6616                           	callstack 0
  6617   0023B6                     ___xxtofl:
  6618                           	callstack 30
  6619                           
  6620                           ;incstack = 0
  6621                           ;___xxtofl@sign stored from wreg
  6622   0023B6  6E09               	movwf	___xxtofl@sign^0,c
  6623   0023B8  5009               	movf	___xxtofl@sign^0,w,c
  6624   0023BA  B4D8               	btfsc	status,2,c
  6625   0023BC  EFE2  F011         	goto	u3561
  6626   0023C0  EFE4  F011         	goto	u3560
  6627   0023C4                     u3561:
  6628   0023C4  EF06  F012         	goto	l723
  6629   0023C8                     u3560:
  6630   0023C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6631   0023CA  EFEB  F011         	goto	u3570
  6632   0023CE  EFE9  F011         	goto	u3571
  6633   0023D2                     u3571:
  6634   0023D2  EF06  F012         	goto	l723
  6635   0023D6                     u3570:
  6636   0023D6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6637   0023DA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6638   0023DE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6639   0023E2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6640   0023E6  1E05               	comf	??___xxtofl^0,f,c
  6641   0023E8  1E06               	comf	(??___xxtofl+1)^0,f,c
  6642   0023EA  1E07               	comf	(??___xxtofl+2)^0,f,c
  6643   0023EC  1E08               	comf	(??___xxtofl+3)^0,f,c
  6644   0023EE  2A05               	incf	??___xxtofl^0,f,c
  6645   0023F0  0E00               	movlw	0
  6646   0023F2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6647   0023F4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6648   0023F6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6649   0023F8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6650   0023FC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6651   002400  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6652   002404  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6653   002408  EF0E  F012         	goto	l3397
  6654   00240C                     l723:
  6655   00240C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6656   002410  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6657   002414  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6658   002418  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6659   00241C                     l3397:
  6660   00241C  5001               	movf	___xxtofl@val^0,w,c
  6661   00241E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6662   002420  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6663   002422  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6664   002424  A4D8               	btfss	status,2,c
  6665   002426  EF17  F012         	goto	u3581
  6666   00242A  EF19  F012         	goto	u3580
  6667   00242E                     u3581:
  6668   00242E  EF23  F012         	goto	l3403
  6669   002432                     u3580:
  6670   002432  0E00               	movlw	0
  6671   002434  6E01               	movwf	?___xxtofl^0,c
  6672   002436  0E00               	movlw	0
  6673   002438  6E02               	movwf	(?___xxtofl+1)^0,c
  6674   00243A  0E00               	movlw	0
  6675   00243C  6E03               	movwf	(?___xxtofl+2)^0,c
  6676   00243E  0E00               	movlw	0
  6677   002440  6E04               	movwf	(?___xxtofl+3)^0,c
  6678   002442  EFB4  F012         	goto	l726
  6679   002446                     l3403:
  6680   002446  0E96               	movlw	150
  6681   002448  6E0A               	movwf	___xxtofl@exp^0,c
  6682   00244A  EF2D  F012         	goto	l3407
  6683   00244E                     l3405:
  6684   00244E  2A0A               	incf	___xxtofl@exp^0,f,c
  6685   002450  90D8               	bcf	status,0,c
  6686   002452  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6687   002454  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6688   002456  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6689   002458  320B               	rrcf	___xxtofl@arg^0,f,c
  6690   00245A                     l3407:
  6691   00245A  0E00               	movlw	0
  6692   00245C  140B               	andwf	___xxtofl@arg^0,w,c
  6693   00245E  6E05               	movwf	??___xxtofl^0,c
  6694   002460  0E00               	movlw	0
  6695   002462  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6696   002464  6E06               	movwf	(??___xxtofl+1)^0,c
  6697   002466  0E00               	movlw	0
  6698   002468  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6699   00246A  6E07               	movwf	(??___xxtofl+2)^0,c
  6700   00246C  0EFE               	movlw	254
  6701   00246E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6702   002470  6E08               	movwf	(??___xxtofl+3)^0,c
  6703   002472  5005               	movf	??___xxtofl^0,w,c
  6704   002474  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6705   002476  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6706   002478  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6707   00247A  A4D8               	btfss	status,2,c
  6708   00247C  EF42  F012         	goto	u3591
  6709   002480  EF44  F012         	goto	u3590
  6710   002484                     u3591:
  6711   002484  EF27  F012         	goto	l3405
  6712   002488                     u3590:
  6713   002488  EF52  F012         	goto	l730
  6714   00248C                     l3409:
  6715   00248C  2A0A               	incf	___xxtofl@exp^0,f,c
  6716   00248E  0E01               	movlw	1
  6717   002490  260B               	addwf	___xxtofl@arg^0,f,c
  6718   002492  0E00               	movlw	0
  6719   002494  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6720   002496  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6721   002498  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6722   00249A  90D8               	bcf	status,0,c
  6723   00249C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6724   00249E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6725   0024A0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6726   0024A2  320B               	rrcf	___xxtofl@arg^0,f,c
  6727   0024A4                     l730:
  6728   0024A4  0E00               	movlw	0
  6729   0024A6  140B               	andwf	___xxtofl@arg^0,w,c
  6730   0024A8  6E05               	movwf	??___xxtofl^0,c
  6731   0024AA  0E00               	movlw	0
  6732   0024AC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6733   0024AE  6E06               	movwf	(??___xxtofl+1)^0,c
  6734   0024B0  0E00               	movlw	0
  6735   0024B2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6736   0024B4  6E07               	movwf	(??___xxtofl+2)^0,c
  6737   0024B6  0EFF               	movlw	255
  6738   0024B8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6739   0024BA  6E08               	movwf	(??___xxtofl+3)^0,c
  6740   0024BC  5005               	movf	??___xxtofl^0,w,c
  6741   0024BE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6742   0024C0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6743   0024C2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6744   0024C4  A4D8               	btfss	status,2,c
  6745   0024C6  EF67  F012         	goto	u3601
  6746   0024CA  EF69  F012         	goto	u3600
  6747   0024CE                     u3601:
  6748   0024CE  EF46  F012         	goto	l3409
  6749   0024D2                     u3600:
  6750   0024D2  EF71  F012         	goto	l3417
  6751   0024D6                     l3415:
  6752   0024D6  060A               	decf	___xxtofl@exp^0,f,c
  6753   0024D8  90D8               	bcf	status,0,c
  6754   0024DA  360B               	rlcf	___xxtofl@arg^0,f,c
  6755   0024DC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6756   0024DE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6757   0024E0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6758   0024E2                     l3417:
  6759   0024E2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6760   0024E4  EF76  F012         	goto	u3611
  6761   0024E8  EF78  F012         	goto	u3610
  6762   0024EC                     u3611:
  6763   0024EC  EF80  F012         	goto	l737
  6764   0024F0                     u3610:
  6765   0024F0  0E02               	movlw	2
  6766   0024F2  600A               	cpfslt	___xxtofl@exp^0,c
  6767   0024F4  EF7E  F012         	goto	u3621
  6768   0024F8  EF80  F012         	goto	u3620
  6769   0024FC                     u3621:
  6770   0024FC  EF6B  F012         	goto	l3415
  6771   002500                     u3620:
  6772   002500                     l737:
  6773   002500  B00A               	btfsc	___xxtofl@exp^0,0,c
  6774   002502  EF85  F012         	goto	u3631
  6775   002506  EF87  F012         	goto	u3630
  6776   00250A                     u3631:
  6777   00250A  EF88  F012         	goto	l3423
  6778   00250E                     u3630:
  6779   00250E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6780   002510                     l3423:
  6781   002510  90D8               	bcf	status,0,c
  6782   002512  320A               	rrcf	___xxtofl@exp^0,f,c
  6783   002514  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6784   002518  6A06               	clrf	(??___xxtofl+1)^0,c
  6785   00251A  6A07               	clrf	(??___xxtofl+2)^0,c
  6786   00251C  6A08               	clrf	(??___xxtofl+3)^0,c
  6787   00251E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6788   002522  6A07               	clrf	(??___xxtofl+2)^0,c
  6789   002524  6A06               	clrf	(??___xxtofl+1)^0,c
  6790   002526  6A05               	clrf	??___xxtofl^0,c
  6791   002528  5005               	movf	??___xxtofl^0,w,c
  6792   00252A  120B               	iorwf	___xxtofl@arg^0,f,c
  6793   00252C  5006               	movf	(??___xxtofl+1)^0,w,c
  6794   00252E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6795   002530  5007               	movf	(??___xxtofl+2)^0,w,c
  6796   002532  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6797   002534  5008               	movf	(??___xxtofl+3)^0,w,c
  6798   002536  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6799   002538  5009               	movf	___xxtofl@sign^0,w,c
  6800   00253A  B4D8               	btfsc	status,2,c
  6801   00253C  EFA2  F012         	goto	u3641
  6802   002540  EFA4  F012         	goto	u3640
  6803   002544                     u3641:
  6804   002544  EFAC  F012         	goto	l3433
  6805   002548                     u3640:
  6806   002548  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6807   00254A  EFAB  F012         	goto	u3650
  6808   00254E  EFA9  F012         	goto	u3651
  6809   002552                     u3651:
  6810   002552  EFAC  F012         	goto	l3433
  6811   002556                     u3650:
  6812   002556  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6813   002558                     l3433:
  6814   002558  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6815   00255C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6816   002560  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6817   002564  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6818   002568                     l726:
  6819   002568  0012               	return		;funcret
  6820   00256A                     __end_of___xxtofl:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function _LCD_WRITE *****************
  6824 ;; Defined at:
  6825 ;;		line 90 in file "main.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  data            2    2[COMRAM] PTR unsigned char 
  6828 ;;		 -> main@voltage_str(10), 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6840 ;;      Params:         2       0       0       0       0       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6843 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used: 1
  6846 ;; Hardware stack levels required when called: 1
  6847 ;; This function calls:
  6848 ;;		_DATA_LCD
  6849 ;; This function is called by:
  6850 ;;		_main
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text29
  6855   002F78                     __ptext29:
  6856                           	callstack 0
  6857   002F78                     _LCD_WRITE:
  6858                           	callstack 29
  6859   002F78                     
  6860                           ;main.c: 91:     while (*data != '\0'){
  6861   002F78  EFC7  F017         	goto	l3389
  6862   002F7C                     l3385:
  6863                           
  6864                           ;main.c: 92:         DATA_LCD(*data);
  6865   002F7C  C003  FFD9         	movff	LCD_WRITE@data,fsr2l
  6866   002F80  C004  FFDA         	movff	LCD_WRITE@data+1,fsr2h
  6867   002F84  50DF               	movf	indf2,w,c
  6868   002F86  ECFF  F017         	call	_DATA_LCD
  6869   002F8A                     
  6870                           ;main.c: 93:         ++data;
  6871   002F8A  4A03               	infsnz	LCD_WRITE@data^0,f,c
  6872   002F8C  2A04               	incf	(LCD_WRITE@data+1)^0,f,c
  6873   002F8E                     l3389:
  6874                           
  6875                           ;main.c: 91:     while (*data != '\0'){
  6876   002F8E  C003  FFD9         	movff	LCD_WRITE@data,fsr2l
  6877   002F92  C004  FFDA         	movff	LCD_WRITE@data+1,fsr2h
  6878   002F96  50DF               	movf	indf2,w,c
  6879   002F98  A4D8               	btfss	status,2,c
  6880   002F9A  EFD1  F017         	goto	u3551
  6881   002F9E  EFD3  F017         	goto	u3550
  6882   002FA2                     u3551:
  6883   002FA2  EFBE  F017         	goto	l3385
  6884   002FA6                     u3550:
  6885   002FA6  0012               	return		;funcret
  6886   002FA8                     __end_of_LCD_WRITE:
  6887                           	callstack 0
  6888                           
  6889 ;; *************** function _DATA_LCD *****************
  6890 ;; Defined at:
  6891 ;;		line 82 in file "main.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  CMD             1    wreg     unsigned char 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  CMD             1    1[COMRAM] unsigned char 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		wreg
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6905 ;;      Params:         0       0       0       0       0       0       0       0       0
  6906 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6907 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6908 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6909 ;;Total ram usage:        2 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_LCD_WRITE
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text30
  6919   002FFE                     __ptext30:
  6920                           	callstack 0
  6921   002FFE                     _DATA_LCD:
  6922                           	callstack 29
  6923                           
  6924                           ;incstack = 0
  6925                           ;DATA_LCD@CMD stored from wreg
  6926   002FFE  6E02               	movwf	DATA_LCD@CMD^0,c
  6927   003000                     
  6928                           ;main.c: 83:     PORTBbits.RB2 = 1;
  6929   003000  8481               	bsf	129,2,c	;volatile
  6930                           
  6931                           ;main.c: 84:     PORTBbits.RB4 = 1;
  6932   003002  8881               	bsf	129,4,c	;volatile
  6933   003004                     
  6934                           ;main.c: 85:     _delay((unsigned long)((1)*(8000000/4000.0)));
  6935   003004  0E03               	movlw	3
  6936   003006  6E01               	movwf	??_DATA_LCD^0,c
  6937   003008  0E98               	movlw	152
  6938   00300A                     u3707:
  6939   00300A  2EE8               	decfsz	wreg,f,c
  6940   00300C  D7FE               	bra	u3707
  6941   00300E  2E01               	decfsz	??_DATA_LCD^0,f,c
  6942   003010  D7FC               	bra	u3707
  6943   003012                     
  6944                           ;main.c: 86:     PORTD = CMD;
  6945   003012  C002  FF83         	movff	DATA_LCD@CMD,3971	;volatile
  6946   003016                     
  6947                           ;main.c: 87:     PORTBbits.RB4 = 0;
  6948   003016  9881               	bcf	129,4,c	;volatile
  6949   003018                     
  6950                           ;main.c: 88:     _delay((unsigned long)((5)*(8000000/4000.0)));
  6951   003018  0E0D               	movlw	13
  6952   00301A  6E01               	movwf	??_DATA_LCD^0,c
  6953   00301C  0EFC               	movlw	252
  6954   00301E                     u3717:
  6955   00301E  2EE8               	decfsz	wreg,f,c
  6956   003020  D7FE               	bra	u3717
  6957   003022  2E01               	decfsz	??_DATA_LCD^0,f,c
  6958   003024  D7FC               	bra	u3717
  6959   003026  0012               	return		;funcret
  6960   003028                     __end_of_DATA_LCD:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function _INIT_LCD *****************
  6964 ;; Defined at:
  6965 ;;		line 66 in file "main.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        0 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 1
  6986 ;; This function calls:
  6987 ;;		_CMD_LCD
  6988 ;; This function is called by:
  6989 ;;		_main
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text31
  6994   00309C                     __ptext31:
  6995                           	callstack 0
  6996   00309C                     _INIT_LCD:
  6997                           	callstack 29
  6998   00309C                     
  6999                           ;main.c: 67:     TRISD = 0;
  7000   00309C  0E00               	movlw	0
  7001   00309E  6E95               	movwf	149,c	;volatile
  7002   0030A0                     
  7003                           ;main.c: 68:     TRISBbits.RB2 = 0;
  7004   0030A0  9493               	bcf	147,2,c	;volatile
  7005   0030A2                     
  7006                           ;main.c: 69:     TRISBbits.RB4 = 0;
  7007   0030A2  9893               	bcf	147,4,c	;volatile
  7008   0030A4                     
  7009                           ;main.c: 70:     CMD_LCD(0b00000110);
  7010   0030A4  0E06               	movlw	6
  7011   0030A6  EC14  F018         	call	_CMD_LCD
  7012   0030AA                     
  7013                           ;main.c: 71:     CMD_LCD(0b00001111);
  7014   0030AA  0E0F               	movlw	15
  7015   0030AC  EC14  F018         	call	_CMD_LCD
  7016   0030B0                     
  7017                           ;main.c: 72:     CMD_LCD(0b00111100);
  7018   0030B0  0E3C               	movlw	60
  7019   0030B2  EC14  F018         	call	_CMD_LCD
  7020   0030B6  0012               	return		;funcret
  7021   0030B8                     __end_of_INIT_LCD:
  7022                           	callstack 0
  7023                           
  7024 ;; *************** function _CMD_LCD *****************
  7025 ;; Defined at:
  7026 ;;		line 74 in file "main.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  CMD             1    wreg     unsigned char 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  CMD             1    1[COMRAM] unsigned char 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7040 ;;      Params:         0       0       0       0       0       0       0       0       0
  7041 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7042 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7043 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7044 ;;Total ram usage:        2 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; This function calls:
  7047 ;;		Nothing
  7048 ;; This function is called by:
  7049 ;;		_main
  7050 ;;		_INIT_LCD
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text32
  7055   003028                     __ptext32:
  7056                           	callstack 0
  7057   003028                     _CMD_LCD:
  7058                           	callstack 29
  7059                           
  7060                           ;incstack = 0
  7061                           ;CMD_LCD@CMD stored from wreg
  7062   003028  6E02               	movwf	CMD_LCD@CMD^0,c
  7063   00302A                     
  7064                           ;main.c: 75:     PORTBbits.RB2 = 0;
  7065   00302A  9481               	bcf	129,2,c	;volatile
  7066                           
  7067                           ;main.c: 76:     PORTBbits.RB4 = 1;
  7068   00302C  8881               	bsf	129,4,c	;volatile
  7069   00302E                     
  7070                           ;main.c: 77:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7071   00302E  0E03               	movlw	3
  7072   003030  6E01               	movwf	??_CMD_LCD^0,c
  7073   003032  0E98               	movlw	152
  7074   003034                     u3727:
  7075   003034  2EE8               	decfsz	wreg,f,c
  7076   003036  D7FE               	bra	u3727
  7077   003038  2E01               	decfsz	??_CMD_LCD^0,f,c
  7078   00303A  D7FC               	bra	u3727
  7079   00303C                     
  7080                           ;main.c: 78:     PORTD = CMD;
  7081   00303C  C002  FF83         	movff	CMD_LCD@CMD,3971	;volatile
  7082   003040                     
  7083                           ;main.c: 79:     PORTBbits.RB4 = 0;
  7084   003040  9881               	bcf	129,4,c	;volatile
  7085   003042                     
  7086                           ;main.c: 80:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7087   003042  0E0D               	movlw	13
  7088   003044  6E01               	movwf	??_CMD_LCD^0,c
  7089   003046  0EFC               	movlw	252
  7090   003048                     u3737:
  7091   003048  2EE8               	decfsz	wreg,f,c
  7092   00304A  D7FE               	bra	u3737
  7093   00304C  2E01               	decfsz	??_CMD_LCD^0,f,c
  7094   00304E  D7FC               	bra	u3737
  7095   003050  0012               	return		;funcret
  7096   003052                     __end_of_CMD_LCD:
  7097                           	callstack 0
  7098                           
  7099                           	psect	rparam
  7100   000000                     
  7101                           	psect	idloc
  7102                           
  7103                           ;Config register IDLOC0 @ 0x200000
  7104                           ;	unspecified, using default values
  7105   200000                     	org	2097152
  7106   200000  FF                 	db	255
  7107                           
  7108                           ;Config register IDLOC1 @ 0x200001
  7109                           ;	unspecified, using default values
  7110   200001                     	org	2097153
  7111   200001  FF                 	db	255
  7112                           
  7113                           ;Config register IDLOC2 @ 0x200002
  7114                           ;	unspecified, using default values
  7115   200002                     	org	2097154
  7116   200002  FF                 	db	255
  7117                           
  7118                           ;Config register IDLOC3 @ 0x200003
  7119                           ;	unspecified, using default values
  7120   200003                     	org	2097155
  7121   200003  FF                 	db	255
  7122                           
  7123                           ;Config register IDLOC4 @ 0x200004
  7124                           ;	unspecified, using default values
  7125   200004                     	org	2097156
  7126   200004  FF                 	db	255
  7127                           
  7128                           ;Config register IDLOC5 @ 0x200005
  7129                           ;	unspecified, using default values
  7130   200005                     	org	2097157
  7131   200005  FF                 	db	255
  7132                           
  7133                           ;Config register IDLOC6 @ 0x200006
  7134                           ;	unspecified, using default values
  7135   200006                     	org	2097158
  7136   200006  FF                 	db	255
  7137                           
  7138                           ;Config register IDLOC7 @ 0x200007
  7139                           ;	unspecified, using default values
  7140   200007                     	org	2097159
  7141   200007  FF                 	db	255
  7142                           
  7143                           	psect	config
  7144                           
  7145                           ;Config register CONFIG1L @ 0x300000
  7146                           ;	PLL Prescaler Selection bits
  7147                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  7148                           ;	System Clock Postscaler Selection bits
  7149                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7150                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7151                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7152   300000                     	org	3145728
  7153   300000  01                 	db	1
  7154                           
  7155                           ;Config register CONFIG1H @ 0x300001
  7156                           ;	Oscillator Selection bits
  7157                           ;	FOSC = HS, HS oscillator (HS)
  7158                           ;	Fail-Safe Clock Monitor Enable bit
  7159                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7160                           ;	Internal/External Oscillator Switchover bit
  7161                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7162   300001                     	org	3145729
  7163   300001  0C                 	db	12
  7164                           
  7165                           ;Config register CONFIG2L @ 0x300002
  7166                           ;	Power-up Timer Enable bit
  7167                           ;	PWRT = ON, PWRT enabled
  7168                           ;	Brown-out Reset Enable bits
  7169                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7170                           ;	Brown-out Reset Voltage bits
  7171                           ;	BORV = 3, Minimum setting 2.05V
  7172                           ;	USB Voltage Regulator Enable bit
  7173                           ;	VREGEN = OFF, USB voltage regulator disabled
  7174   300002                     	org	3145730
  7175   300002  1E                 	db	30
  7176                           
  7177                           ;Config register CONFIG2H @ 0x300003
  7178                           ;	Watchdog Timer Enable bit
  7179                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7180                           ;	Watchdog Timer Postscale Select bits
  7181                           ;	WDTPS = 32768, 1:32768
  7182   300003                     	org	3145731
  7183   300003  1E                 	db	30
  7184                           
  7185                           ; Padding undefined space
  7186   300004                     	org	3145732
  7187   300004  FF                 	db	255
  7188                           
  7189                           ;Config register CONFIG3H @ 0x300005
  7190                           ;	CCP2 MUX bit
  7191                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7192                           ;	PORTB A/D Enable bit
  7193                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7194                           ;	Low-Power Timer 1 Oscillator Enable bit
  7195                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7196                           ;	MCLR Pin Enable bit
  7197                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7198   300005                     	org	3145733
  7199   300005  81                 	db	129
  7200                           
  7201                           ;Config register CONFIG4L @ 0x300006
  7202                           ;	Stack Full/Underflow Reset Enable bit
  7203                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7204                           ;	Single-Supply ICSP Enable bit
  7205                           ;	LVP = OFF, Single-Supply ICSP disabled
  7206                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7207                           ;	ICPRT = OFF, ICPORT disabled
  7208                           ;	Extended Instruction Set Enable bit
  7209                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7210                           ;	Background Debugger Enable bit
  7211                           ;	DEBUG = 0x1, unprogrammed default
  7212   300006                     	org	3145734
  7213   300006  81                 	db	129
  7214                           
  7215                           ; Padding undefined space
  7216   300007                     	org	3145735
  7217   300007  FF                 	db	255
  7218                           
  7219                           ;Config register CONFIG5L @ 0x300008
  7220                           ;	Code Protection bit
  7221                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7222                           ;	Code Protection bit
  7223                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7224                           ;	Code Protection bit
  7225                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7226                           ;	Code Protection bit
  7227                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7228   300008                     	org	3145736
  7229   300008  0F                 	db	15
  7230                           
  7231                           ;Config register CONFIG5H @ 0x300009
  7232                           ;	Boot Block Code Protection bit
  7233                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7234                           ;	Data EEPROM Code Protection bit
  7235                           ;	CPD = OFF, Data EEPROM is not code-protected
  7236   300009                     	org	3145737
  7237   300009  C0                 	db	192
  7238                           
  7239                           ;Config register CONFIG6L @ 0x30000A
  7240                           ;	Write Protection bit
  7241                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7242                           ;	Write Protection bit
  7243                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7244                           ;	Write Protection bit
  7245                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7246                           ;	Write Protection bit
  7247                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7248   30000A                     	org	3145738
  7249   30000A  0F                 	db	15
  7250                           
  7251                           ;Config register CONFIG6H @ 0x30000B
  7252                           ;	Configuration Register Write Protection bit
  7253                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7254                           ;	Boot Block Write Protection bit
  7255                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7256                           ;	Data EEPROM Write Protection bit
  7257                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7258   30000B                     	org	3145739
  7259   30000B  E0                 	db	224
  7260                           
  7261                           ;Config register CONFIG7L @ 0x30000C
  7262                           ;	Table Read Protection bit
  7263                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7264                           ;	Table Read Protection bit
  7265                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7266                           ;	Table Read Protection bit
  7267                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7268                           ;	Table Read Protection bit
  7269                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7270   30000C                     	org	3145740
  7271   30000C  0F                 	db	15
  7272                           
  7273                           ;Config register CONFIG7H @ 0x30000D
  7274                           ;	Boot Block Table Read Protection bit
  7275                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7276   30000D                     	org	3145741
  7277   30000D  40                 	db	64
  7278                           tosu	equ	0xFFF
  7279                           tosh	equ	0xFFE
  7280                           tosl	equ	0xFFD
  7281                           stkptr	equ	0xFFC
  7282                           pclatu	equ	0xFFB
  7283                           pclath	equ	0xFFA
  7284                           pcl	equ	0xFF9
  7285                           tblptru	equ	0xFF8
  7286                           tblptrh	equ	0xFF7
  7287                           tblptrl	equ	0xFF6
  7288                           tablat	equ	0xFF5
  7289                           prodh	equ	0xFF4
  7290                           prodl	equ	0xFF3
  7291                           indf0	equ	0xFEF
  7292                           postinc0	equ	0xFEE
  7293                           postdec0	equ	0xFED
  7294                           preinc0	equ	0xFEC
  7295                           plusw0	equ	0xFEB
  7296                           fsr0h	equ	0xFEA
  7297                           fsr0l	equ	0xFE9
  7298                           wreg	equ	0xFE8
  7299                           indf1	equ	0xFE7
  7300                           postinc1	equ	0xFE6
  7301                           postdec1	equ	0xFE5
  7302                           preinc1	equ	0xFE4
  7303                           plusw1	equ	0xFE3
  7304                           fsr1h	equ	0xFE2
  7305                           fsr1l	equ	0xFE1
  7306                           bsr	equ	0xFE0
  7307                           indf2	equ	0xFDF
  7308                           postinc2	equ	0xFDE
  7309                           postdec2	equ	0xFDD
  7310                           preinc2	equ	0xFDC
  7311                           plusw2	equ	0xFDB
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      94
    BANK0           160     80      89
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S879$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@voltage_str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S800$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S800$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_WRITE@data	PTR unsigned char  size(2) Largest target is 10
		 -> main@voltage_str(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->___wmul
    _LCD_WRITE->_DATA_LCD
    _INIT_LCD->_CMD_LCD

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   25682
                                             89 COMRAM     1     1      0
                                             64 BANK0     16    16      0
                            _CMD_LCD
                           _INIT_LCD
                          _LCD_WRITE
                            ___flmul
                           ___xxtofl
                           _adc_read
                             _config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   22299
                                             76 COMRAM    13    13      0
                                             56 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21944
                                             74 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6   21583
                                             60 COMRAM    14    14      0
                                             44 BANK0      6     0      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18733
                                             51 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE                                            2     0      2     143
                                              2 COMRAM     2     0      2
                           _DATA_LCD
 ---------------------------------------------------------------------------------
 (2) _DATA_LCD                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INIT_LCD                                             0     0      0      22
                            _CMD_LCD
 ---------------------------------------------------------------------------------
 (2) _CMD_LCD                                              2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CMD_LCD
   _INIT_LCD
     _CMD_LCD
   _LCD_WRITE
     _DATA_LCD
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _adc_read
   _config
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      50       8       31.2%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     50      59       6       55.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5E       1       98.9%
BITBIGSFRhhh        3B      0       0      21        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRll         21      0       0      26        0.0%
BITBIGSFRlhh         E      0       0      24        0.0%
BITBIGSFRlhl         1      0       0      25        0.0%
BITBIGSFRhll         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107       3        0.0%
DATA                 0      0     107       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jun 06 19:39:26 2023

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
                     l33 309A                       l36 2E08                       l53 30B6  
                     l38 2E16                       l39 2E2E                       l56 3050  
                     l65 2FA6                       l59 3026                       l68 3076  
    ___wmul@multiplicand 0003                      l333 2876                      l342 2F76  
                    l327 2C12                      l338 28BC                      l613 1514  
                    l605 16CA                      l365 27B8                      l622 15E4  
                    l623 15D2                      l800 09E8                      l730 24A4  
                    l650 1E8E                      l723 240C                      l652 1CEE  
                    l661 1D34                      l726 2568                      l638 2E74  
                    l903 26AA                      l663 1DAC                      l655 1CB2  
                    l664 1D9A                      l912 23B4                      l737 2500  
                    l922 2FD2                      l930 2EBA                      l906 26B2  
                    l682 1790                      l746 2D44                      l691 19FE  
                    l915 22F8                      l692 19EC                      l596 13FA  
                    l940 2CF2                      l780 2C36                      l828 0FEC  
                    l597 13E8                      l686 1AF4                      l598 13AE  
                    l870 2D96                      l863 21A2                      l880 29BA  
                    l784 2C8C                      l689 1986                      l937 2CE2  
                    l946 2DE6                      l699 1AB6                      l795 120A  
                    l958 2B68                      l966 2EFE                      l798 0BA2  
                    l975 2F3E                      l969 30B8                      _pad 2C14  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
        __end_of_CMD_LCD 3052             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             ___fltol@exp1 000A                     l3001 08DE  
                   l3011 0912                     l3003 08E2                     l2301 1238  
                   l3101 0DD4                     l3021 096E                     l3005 08E8  
                   l2311 1272                     l2303 1248                     l3111 0E70  
                   l3103 0DEA                     l3023 0974                     l3007 08F0  
                   l3015 0932                     l3201 2582                     l2401 143C  
                   l2321 12A0                     l2313 1278                     l2305 1258  
                   l3113 0EC6                     l3121 0F18                     l3105 0E1C  
                   l3041 09FE                     l3025 097C                     l3017 0958  
                   l3033 0998                     l3009 0908                     l3211 2616  
                   l3203 259E                     l2411 1476                     l2403 144A  
                   l2331 12D4                     l2323 12A2                     l2315 128A  
                   l2307 125A                     l3131 0F4A                     l3123 0F28  
                   l3115 0ECC                     l3107 0E2C                     l3051 0AF4  
                   l3043 0A32                     l3035 09B2                     l3019 096A  
                   l3221 268E                     l3205 25D2                     l2421 14E2  
                   l2413 1478                     l2405 1458                     l2341 1310  
                   l2325 12B2                     l2333 12DC                     l2317 128C  
                   l2309 1262                     l2501 2EDE                     l3141 101C  
                   l3133 0FC2                     l3125 0F30                     l3117 0F00  
                   l3109 0E3C                     l3061 0BAA                     l3053 0B28  
                   l3045 0A70                     l3311 302E                     l2503 3052  
                   l3207 25DA                     l2511 1B02                     l2431 153A  
                   l2423 14E4                     l2415 1482                     l2407 1464  
                   l2351 1324                     l2343 1314                     l2335 12EC  
                   l2327 12C2                     l2319 1292                     l3151 1042  
                   l3143 1020                     l3135 0FE2                     l3127 0F36  
                   l3119 0F14                     l3071 0BDC                     l3063 0BB8  
                   l3055 0B30                     l3047 0AA2                     l3039 09F8  
                   l3231 1EC2                     l3313 303C                     l3321 3004  
                   l2505 306E                     l3217 264C                     l3209 25E2  
                   l2601 1D32                     l2521 1B42                     l2513 1B10  
                   l2441 1568                     l2425 14F4                     l2409 1468  
                   l2417 1488                     l2361 1338                     l2353 1328  
                   l2345 1318                     l2337 12FE                     l2329 12D2  
                   l2281 2AB2                     l3161 1076                     l3153 1048  
                   l3145 1026                     l3137 0FFE                     l3129 0F3E  
                   l3073 0BEE                     l3081 0C2E                     l3065 0BC4  
                   l3049 0AE0                     l3241 1F0C                     l3233 1ECE  
                   l3315 3040                     l3323 3012                     l3411 248E  
                   l3403 2446                     l3219 267C                     l2611 1D92  
                   l2603 1D44                     l2531 1B68                     l2523 1B44  
                   l2515 1B12                     l2443 1576                     l2435 154E  
                   l2451 1594                     l2419 14AE                     l2427 1504  
                   l2363 133C                     l2355 132C                     l2347 131C  
                   l2339 130C                     l2371 134C                     l2283 2AC4  
                   l3163 107C                     l3147 102E                     l3139 100C  
                   l3155 104E                     l3171 1114                     l3091 0D16  
                   l3083 0C36                     l3075 0BFC                     l3067 0BCE  
                   l3059 0B70                     l3251 1F98                     l3243 1F30  
                   l3235 1ED2                     l3227 1E90                     l3331 2D52  
                   l3317 3042                     l3309 302A                     l3325 3016  
                   l3421 250E                     l3413 249A                     l3405 244E  
                   l3341 307A                     l2621 1E00                     l2605 1D52  
                   l2541 1BA8                     l2533 1B76                     l2517 1B22  
                   l2525 1B4C                     l2509 1AF6                     l2701 182C  
                   l2445 157E                     l2437 1558                     l2429 152A  
                   l2453 15A2                     l2381 13BC                     l2373 1350  
                   l2365 1340                     l2357 1330                     l2349 1320  
                   l2293 120C                     l2285 2ACE                     l3181 1196  
                   l3173 1132                     l3165 10D4                     l3157 1060  
                   l3149 103E                     l3093 0D4A                     l3085 0C46  
                   l3077 0C14                     l3069 0BD6                     l3261 2002  
                   l3245 1F6A                     l3237 1EF6                     l3253 1FD0  
                   l3229 1EB4                     l3333 2D70                     l3327 3018  
                   l3319 3000                     l3431 2556                     l3423 2510  
                   l3415 24D6                     l3407 245A                     l3351 2DFE  
                   l3343 3092                     l2631 1E6A                     l2615 1DBC  
                   l2623 1E04                     l2607 1D56                     l2551 1BE8  
                   l2543 1BAA                     l2535 1B78                     l2527 1B5C  
                   l2519 1B32                     l2711 1872                     l2703 183A  
                   l2463 15F4                     l2471 164A                     l2455 15A6  
                   l2447 1582                     l2439 1566                     l2391 13E6  
                   l2383 13C8                     l2375 137A                     l2367 1344  
                   l2359 1334                     l2295 1218                     l2287 2AEC  
                   l2279 2AA0                     l3191 11EA                     l3183 11A4  
                   l3175 114E                     l3167 1108                     l3159 1072  
                   l3087 0C5A                     l3095 0D50                     l3079 0C26  
                   l3271 2090                     l3255 1FE0                     l3247 1F8A  
                   l3239 1EFE                     l3335 2D8C                     l3361 30A0  
                   l3433 2558                     l3425 2514                     l3417 24E2  
                   l3409 248C                     l3353 2E00                     l3345 3098  
                   l2633 1E6E                     l2625 1E1E                     l2617 1DC8  
                   l2609 1D64                     l2561 1C18                     l2553 1BF0  
                   l2537 1B88                     l2545 1BB2                     l2529 1B62  
                   l2801 27E8                     l2721 18E0                     l2713 188C  
                   l2705 1846                     l2481 169C                     l2473 165A  
                   l2465 1600                     l2457 15B4                     l2449 1592  
                   l2393 1408                     l2385 13CC                     l2377 1396  
                   l2369 1348                     l2297 1226                     l2289 2B22  
                   l3185 11BC                     l3177 1156                     l3169 1110  
                   l3097 0D6E                     l3089 0CBE                     l3257 1FF2  
                   l3265 200A                     l3329 2D46                     l3441 29C6  
                   l3363 30A2                     l3427 2538                     l3419 24F0  
                   l3355 2E18                     l3347 2DEA                     l3339 3078  
                   l3195 256A                     l2635 1E7C                     l2627 1E34  
                   l2619 1DD6                     l2571 1C56                     l2563 1C18  
                   l2555 1BF4                     l2547 1BC2                     l2539 1B98  
                   l2811 2856                     l2803 27F8                     l2731 1976  
                   l2723 190A                     l2715 189C                     l2707 1856  
                   l2651 16E6                     l2491 16BA                     l2483 16A2  
                   l2475 166A                     l2467 160E                     l2459 15CA  
                   l2395 1418                     l2387 13DA                     l2379 13A6  
                   l2299 1228                     l3187 11CC                     l3179 1166  
                   l3099 0DA2                     l3275 20C4                     l3259 1FFA  
                   l3267 203C                     l3291 217A                     l3371 2CF4  
                   l3451 2A50                     l3443 29C6                     l3365 30A4  
                   l3429 2548                     l3349 2DFC                     l3197 257E  
                   l2637 1E82                     l2629 1E4E                     l2581 1CA2  
                   l2573 1C66                     l2549 1BD8                     l2813 2864  
                   l2805 2826                     l2741 19B6                     l2733 1984  
                   l2725 1940                     l2717 18B8                     l2709 1862  
                   l2661 171E                     l2653 16E8                     l2821 2F40  
                   l2485 16A4                     l2477 168A                     l2469 1648  
                   l2389 13DC                     l2901 296E                     l3189 11E2  
                   l3285 213C                     l3277 20EE                     l3269 205C  
                   l3373 2D04                     l3453 2A52                     l3445 29D8  
                   l3461 2A72                     l3437 29BC                     l3367 30AA  
                   l3359 309C                     l3383 2F78                     l3391 23B8  
                   l3551 2600                     l2639 1E84                     l2591 1CEC  
                   l2583 1CB0                     l2575 1C76                     l2567 1C2C  
                   l2559 1C08                     l2815 28B4                     l2807 2836  
                   l2751 1A28                     l2743 19E4                     l2735 1996  
                   l2727 194E                     l2719 18C4                     l2671 174A  
                   l2663 172E                     l2655 16F8                     l2647 16CC  
                   l2823 2F56                     l2487 16AA                     l2479 168E  
                   l2399 142C                     l2831 26CA                     l2495 2EBC  
                   l2911 2F10                     l3279 210E                     l3287 2168  
                   l3375 2D0C                     l3463 2A8A                     l3455 2A60  
                   l3447 2A1E                     l3439 29BE                     l3369 30B0  
                   l3385 2F7C                     l3393 23C8                     l2593 1CFE  
                   l2585 1CBC                     l2577 1C7E                     l2569 1C46  
                   l2817 28BA                     l2809 2844                     l2761 1A9E  
                   l2753 1A52                     l2737 19A4                     l2729 196C  
                   l2681 17A0                     l2673 175A                     l2665 1734  
                   l2657 1708                     l2649 16D8                     l2825 2F66  
                   l2489 16B8                     l2841 271A                     l2905 29B2  
                   l2921 221A                     l2913 2C8E                     l2497 2EC8  
                   l3545 201E                     l3377 2D14                     l3457 2A62  
                   l3449 2A44                     l3387 2F8A                     l3395 23D6  
                   l2595 1D14                     l2587 1CDA                     l2579 1C8E  
                   l2763 1ABA                     l2771 1AE0                     l2747 1A0E  
                   l2755 1A56                     l2739 19A8                     l2691 17DA  
                   l2683 17B0                     l2675 176A                     l2667 173A  
                   l2659 1718                     l2851 2744                     l2843 271E  
                   l2835 26DE                     l2931 22E8                     l2923 222E  
                   l2915 2CAC                     l2499 2EDA                     l3547 20D8  
                   l3379 2D32                     l3459 2A68                     l3389 2F8E  
                   l3397 241C                     l2597 1D1A                     l2589 1CDC  
                   l2773 1AE4                     l2765 1ACA                     l2757 1A70  
                   l2749 1A1A                     l2693 17F0                     l2677 177A  
                   l2669 1748                     l2861 276C                     l2853 274E  
                   l2845 272C                     l2837 2708                     l2829 26B4  
                   l2941 23A4                     l2925 223C                     l2933 231C  
                   l2917 21A4                     l2909 2F00                     l3549 215A  
                   ?_pad 0011                     l3399 2432                     l2599 1D24  
                   l2791 2BE6                     l2783 2B6A                     l2767 1AD8  
                   l2759 1A84                     l2695 17FC                     l2687 17C4  
                   l2679 1780                     l2863 2778                     l2855 2758  
                   l2839 270A                     l2935 2358                     l2919 21C4  
                   l2951 2DBC                     l2961 2E76                     l2793 2C0A  
                   l2785 2B98                     l2769 1ADA                     l2697 1814  
                   l2689 17D0                     l2777 2E30                     l2865 2788  
                   l2937 236C                     l2929 22AC                     l2953 2DC8  
                   l2945 2D98                     l2881 2C56                     l2873 2C14  
                   l2963 2E7A                     l2795 2C10                     l2787 2BA8  
                   l2699 1820                     l2779 2E40                     l2867 2798  
                   l2891 291C                     l2939 2394                     l2947 2DAC  
                   l2955 2DCC                     l2883 2C5A                     l2875 2C22  
                   l2957 2FA8                     l2965 2E8E                     l2789 2BD6  
                   l2869 27A8                     l2893 2944                     l2949 2DB8  
                   l2885 2C78                     l2877 2C2E                     l2981 0838  
                   l2973 0810                     l2967 2EB0                     l2799 27BA  
                   l2895 2950                     l2887 28BE                     l2879 2C42  
                   l2991 088E                     l2983 085C                     l2975 0816  
                   l2969 2EB4                     l2889 28DE                     l2993 089A  
                   l2985 0866                     l2977 0826                     l2899 295C  
                   l2995 08A2                     l2987 086E                     l2979 0834  
                   l2989 087E                     l2997 08A6                     l2999 08CC  
                   STR_1 0801                     STR_2 0807                     STR_5 080B  
                   u2000 13BC                     u2001 13B8                     u2010 13DA  
                   u2011 13D6                     u2100 152A                     u2020 13FA  
                   u2101 1526                     u2021 13F6                     u2110 153A  
                   u2030 1408                     u2111 1536                     u2031 1404  
                   u2200 160E                     u2120 1566                     u2040 1418  
                   u2201 160A                     u2121 1562                     u2041 1414  
                   u2210 1648                     u2130 1576                     u2050 144A  
                   u3010 22A8                     u2211 1644                     u2131 1572  
                   u2051 1446                     u3011 22A4                     u3100 2E8E  
                   u2300 1B32                     u2220 165A                     u2140 1592  
                   u2060 1458                     u3020 22CC                     u3101 2E8A  
                   u2301 1B2E                     u2221 1656                     u2141 158E  
                   u2061 1454                     u3005 2250                     u3110 2EB0  
                   u2310 1B76                     u2230 166A                     u2150 15A2  
                   u2070 1476                     u3030 22E8                     u3006 225A  
                   u3111 2EAC                     u2311 1B72                     u2231 1666  
                   u2151 159E                     u2071 1472                     u3031 22E4  
                   u3007 226A                     u2400 1D14                     u2320 1B88  
                   u2240 168A                     u2160 15B4                     u2080 14AE  
                   u3040 233C                     u3200 0A70                     u3120 0834  
                   u2401 1D10                     u2321 1B84                     u2241 1686  
                   u2161 15B0                     u2081 14AA                     u3025 22C2  
                   u3201 0A6C                     u3121 0830                     u2410 1D32  
                   u2330 1B98                     u2250 169C                     u2170 15CA  
                   u2090 14F4                     u3050 2358                     u3210 0AA2  
                   u3130 087E                     u2411 1D2E                     u2331 1B94  
                   u2251 1698                     u2171 15C6                     u2091 14F0  
                   u3051 2354                     u3211 0A9E                     u3131 087A  
                   u2500 1E7C                     u2420 1D52                     u2340 1BD8  
                   u2260 16B8                     u2180 15E0                     u3060 2394  
                   u3300 0DD4                     u3220 0AE0                     u3140 088E  
                   u2501 1E78                     u2421 1D4E                     u2341 1BD4  
                   u2261 16B4                     u2181 15DC                     u3061 2390  
                   u3045 2332                     u3301 0DD0                     u3221 0ADC  
                   u3141 088A                     u2430 1D64                     u2350 1C18  
                   u2510 16E6                     u2190 15F4                     u3070 2DE6  
                   u2270 2EFE                     u3310 0E1C                     u3230 0B6C  
                   u3150 08CC                     u2431 1D60                     u2351 1C14  
                   u2511 16E2                     u2191 15F0                     u3071 2DE2  
                   u2271 2EFA                     u3311 0E18                     u3231 0B68  
                   u3151 08C8                     u3080 2FCC                     u2440 1D92  
                   u2360 1C8E                     u2280 1B10                     u2600 1984  
                   u2520 16F8                     u3400 114E                     u3320 0E2C  
                   u3240 0BA2                     u3160 08DE                     u3081 2FC6  
                   u2441 1D8E                     u2361 1C8A                     u2281 1B0C  
                   u2601 1980                     u2521 16F4                     u3401 114A  
                   u3321 0E28                     u3241 0B9E                     u3161 08DA  
                   u3090 2FCE                     u2450 1DA8                     u2370 1CB0  
                   u2290 1B22                     u2610 19A4                     u2530 1708  
                   u3410 11B6                     u3330 0EC6                     u3250 0BB8  
                   u3170 0958                     u2451 1DA4                     u2371 1CAC  
                   u2291 1B1E                     u2611 19A0                     u2531 1704  
                   u3411 11B0                     u3331 0EC2                     u3251 0BB4  
                   u3171 0954                     u2460 1DBC                     u2380 1CDA  
                   u2700 2B98                     u2620 19B6                     u2540 1748  
                   u1900 1248                     u3420 11B8                     u3340 0F14  
                   u3260 0BEE                     u3180 096A                     u3500 1F30  
                   u2461 1DB8                     u2381 1CD6                     u2701 2B94  
                   u2621 19B2                     u2541 1744                     u1901 1244  
                   u3341 0F10                     u3261 0BEA                     u3181 0966  
                   u3501 1F2C                     u2470 1DD6                     u2390 1CFE  
                   u2710 2BD6                     u2630 19E4                     u2550 175A  
                   u1910 128A                     u3430 11CC                     u3350 0FC2  
                   u3270 0BFC                     u3190 09E4                     u3510 1FD0  
                   u2471 1DD2                     u2391 1CFA                     u2711 2BD2  
                   u2631 19E0                     u2551 1756                     u1911 1286  
                   u3431 11C8                     u3351 0FBE                     u3271 0BF8  
                   u3191 09E0                     u3511 1FCC                     u3600 24D2  
                   u3440 259E                     u2480 1E1E                     u2720 2C0A  
                   u2640 19FA                     u2560 176A                     u1920 12A0  
                   u2800 26FE                     u1840 2AB2                     u3360 0FFE  
                   u3280 0C26                     u3520 2058                     u3601 24CE  
                   u3441 259A                     u2481 1E1A                     u2721 2C06  
                   u2641 19F6                     u2561 1766                     u1921 129C  
                   u1841 2AAE                     u3361 0FFA                     u3281 0C22  
                   u3521 2054                     u3610 24F0                     u3450 25CE  
                   u2490 1E4E                     u2730 27E8                     u2650 1A0E  
                   u2570 17A0                     u1930 12B2                     u2810 272C  
                   u1850 2AC4                     u3370 100C                     u3290 0D6E  
                   u3530 2D8C                     u3611 24EC                     u3451 25CA  
                   u2491 1E4A                     u2731 27E4                     u2651 1A0A  
                   u2571 179C                     u1931 12AE                     u2811 2728  
                   u1851 2AC0                     u3371 1008                     u3291 0D6A  
                   u3531 2D88                     u3620 2500                     u3540 2E16  
                   u3460 267C                     u2740 2826                     u2660 1A28  
                   u2580 17B0                     u1940 12C2                     u2820 2740  
                   u2900 2944                     u1860 2AEC                     u3380 1060  
                   u3621 24FC                     u3541 2E12                     u3461 2678  
                   u2741 2822                     u2661 1A24                     u2581 17AC  
                   u1941 12BE                     u2821 273C                     u2805 26F4  
                   u2901 2940                     u1861 2AE8                     u3381 105C  
                   u3550 2FA6                     u3630 250E                     u3470 268E  
                   u2750 2844                     u2670 1A70                     u2590 192A  
                   u1950 12FE                     u2830 2768                     u2910 296E  
                   u1870 2B22                     u3390 1132                     u3551 2FA2  
                   u3631 250A                     u3471 268A                     u2751 2840  
                   u2671 1A6C                     u1951 12FA                     u2831 2764  
                   u2911 296A                     u1871 2B1E                     u3391 112E  
                   u3640 2548                     u3560 23C8                     u2760 2864  
                   u2680 1A9E                     u1960 130C                     u1880 1226  
                   u2840 2788                     u3480 1EB4                     u3641 2544  
                   u3561 23C4                     u2761 2860                     u2681 1A9A  
                   u1961 1308                     u1881 1222                     u2841 2784  
                   u3481 1EB0                     u3650 2556                     u3570 23D6  
                   u2770 28B4                     u2690 1AD8                     u1970 137A  
                   u1890 1238                     u2850 2798                     u2930 29A8  
                   u3490 1EF6                     u3707 300A                     u3651 2552  
                   u3571 23D2                     u2771 28B0                     u2691 1AD4  
                   u2595 1920                     u1971 1376                     u1891 1234  
                   u2851 2794                     u2931 29A2                     u3491 1EF2  
                   u3580 2432                     u2780 2F56                     u1980 1392  
                   u2940 29AA                     u2860 2C22                     u3660 2A8A  
                   u3717 301E                     u3581 242E                     u2781 2F52  
                   u1981 138C                     u2925 2980                     u2861 2C1E  
                   u3661 2A86                     u3590 2488                     u1990 1394  
                   u2790 26CA                     u2870 2C78                     u2950 2F3E  
                   u3727 3034                     u3591 2484                     u2791 26C6  
                   u2871 2C74                     u2951 2F3A                     u2880 28FE  
                   u2960 2CAC                     u3737 3048                     u2961 2CA8  
                   u2890 291C                     u2970 21EC                     u2891 2918  
                   u2980 221A                     u2885 28F4                     u2981 2216  
                   u3677 2A58                     u2990 223C                     u2991 2238  
                   u2975 21E2                     u3687 2A90                     u3697 2E02  
                   _dbuf 0100                     _labs 2C8E                     _atoi 256A  
                   _main 29BC                     _prec 005D                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9            ___fpclassifyf 28BE                     prodh 000FF4  
                   prodl 000FF3         __end_of_DATA_LCD 3028                     start 0000  
        ___fldiv@new_exp 0012              main@voltage 00AA             ___param_bank 000000  
                  ??_pad 0017         __end_of_INIT_LCD 30B8            ___fltol@sign1 0009  
                  ?_labs 0001                    ?_atoi 0007          __end_of___fladd 16CC  
                  ?_main 0001          __end_of___fldiv 1E90          __end_of___flneg 2F78  
        __end_of___flmul 1AF6          __end_of___flsub 2E76          __end_of___fltol 27BA  
           vfpfcnvrt@fmt 008E                    _PORTD 000F83                    _TRISD 000F95  
                  _flags 00B8                    _fputc 2AA0                    _fputs 2EBC  
        __end_of_isdigit 2FD4                    labs@a 0001                    atoi@n 000E  
                  pad@fp 0011                    atoi@s 0007                    _width 005B  
                  _putch 30B8          __end_of_isspace 2EBC                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 2D46           ?___fpclassifyf 0001  
        __initialization 2FD4             __end_of_labs 2CF4             __end_of_atoi 26B4  
           __end_of_main 2AA0            LCD_WRITE@data 0003                   ??_labs 0005  
                 ??_atoi 0009                   ??_main 005A                ??_CMD_LCD 0001  
      __end_of_LCD_WRITE 2FA8            __activetblptr 000002                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_putch 0001         __end_of_adc_read 2E30         __end_of___xxtofl 256A  
           vfprintf@cfmt 004B                   ___flge 27BA                   ___fleq 2B6A  
              ??___fladd 0009                   ___wmul 3052                ??___fldiv 0009  
              ??___flneg 0005                ??___flmul 0017                ??___flsub 0030  
              ??___fltol 0005                   _efgtoa 0810                   _config 3078  
                 _floorf 21A4                   _memcpy 2D98                   clear_0 2FDA  
                 clear_1 2FE6                   isa$std 000001                   pad@buf 0013  
                 _strcpy 2F00                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                ?_DATA_LCD 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 2D98                ??_sprintf 004D  
             ___flge@ff1 0028               ___flge@ff2 002C          ??___fpclassifyf 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0060  
__end_of__initialization 2FF4               ___flneg@f1 0001                ?_INIT_LCD 0001  
          ___rparam_used 000001               ___fltol@f1 0001           __pcstackCOMRAM 0001  
          __end_of_fputc 2B6A            __end_of_fputs 2F00            __end_of_putch 30BA  
             ??_DATA_LCD 0001                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00B0               __pbssBANK1 0100  
             ??_INIT_LCD 0003               _efgtoa$938 0066                  ?___flge 0028  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 0034  
                ?_config 0001                  ?_floorf 001A                  ?_memcpy 0001  
              ?_adc_read 0001                  _CMD_LCD 3028                  ?_strcpy 0001  
              ?___xxtofl 0001                  __Hparam 0000                  __Lparam 0000  
                ___fladd 120C                  ___fldiv 1AF6                  ___flneg 2F40  
                ___flmul 16CC                  ___flsub 2E30                  ___fltol 26B4  
              ?_vfprintf 0092             __psmallconst 0800                  __pcinit 2FD4  
                __ramtop 0800               ??_adc_read 0003                  __ptext0 29BC  
                __ptext1 2CF4                  __ptext2 2D46                  __ptext3 1E90  
                __ptext4 0810                  __ptext5 2F00                  __ptext6 2C14  
                __ptext7 2EBC                  __ptext8 2AA0                  __ptext9 30B8  
             CMD_LCD@CMD 0002                  _isdigit 2FA8               ??___xxtofl 0005  
                _isspace 2E76                  efgtoa@c 003A                  efgtoa@d 006B  
                efgtoa@e 006F                  efgtoa@f 0036                  efgtoa@g 0084  
                efgtoa@h 0079                  efgtoa@i 0077                  efgtoa@l 007D  
                efgtoa@m 006D                  efgtoa@n 0082                  efgtoa@p 0062  
                efgtoa@t 0064                  efgtoa@u 0088                  efgtoa@w 0071  
              _LCD_WRITE 2F78                  atoi@neg 000C                  _sprintf 2CF4  
   end_of_initialization 2FF4                  floorf@e 0028                  floorf@m 0024  
                floorf@u 002A                  floorf@x 001A                  memcpy@d 0007  
                memcpy@n 0005                  memcpy@s 0009                  fputc@fp 0003  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 21A4  
             efgtoa@mode 0069               efgtoa@sign 0081                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
       vfpfcnvrt@convarg 0040               ??_vfprintf 004B                  strcpy@d 0007  
                strcpy@s 0005                _PORTBbits 000F81              ___fladd@grs 0010  
          ___xxtofl@sign 0009                _TRISAbits 000F92                _TRISBbits 000F93  
             ?_LCD_WRITE 0003              ___fldiv@grs 0014              ___fldiv@rem 000D  
            ___flmul@grs 001C           __end_of___flge 28BE           __end_of___fleq 2C14  
            vfpfcnvrt@ap 0090              vfpfcnvrt@cp 0049              vfpfcnvrt@fp 008C  
         __end_of___wmul 3078           __end_of_efgtoa 120C           __end_of_config 309C  
         __end_of_floorf 23B6           __end_of_memcpy 2DE8               floorf@F526 00B0  
         __end_of_strcpy 2F40      start_initialization 2FD4              __end_of_pad 2C8E  
  __end_of___fpclassifyf 29BC              vfprintf@fmt 0094                 ??___flge 0030  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 003B  
               ??_config 0001                 ??_floorf 001E                 ??_memcpy 0007  
               ?_CMD_LCD 0001                 ??_strcpy 0005                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 0005                ___fldiv@b 0001  
              ___flmul@a 0013                ___flmul@b 000F              __pbssCOMRAM 005B  
        adc_read@channel 0005                ___flsub@a 002C                ___flsub@b 0028  
          __pcstackBANK0 0060              ??_LCD_WRITE 0005                 ?___fladd 0001  
               ?___fldiv 0001                 ?___flneg 0001                 ?___flmul 000F  
               ?___flsub 0028                 ?___fltol 0001              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 _DATA_LCD 2FFE  
               ?_sprintf 0098           ___wmul@product 0005                 _INIT_LCD 309C  
            DATA_LCD@CMD 0002                _vfpfcnvrt 1E90               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0        ___wmul@multiplier 0001  
           _isspace$1016 0005               vfpfcnvrt@c 0048                 __Hrparam 0000  
              memcpy@tmp 000B               vfprintf@ap 0096                 __Lrparam 0000  
             vfprintf@fp 0092               ?_vfpfcnvrt 008C                 _adc_read 2DE8  
     ___fpclassifyf@F465 00B4               sprintf@fmt 009A                 ___xxtofl 23B6  
               __ptext10 2D98                 __ptext11 2C8E                 __ptext20 2B6A  
               __ptext12 21A4                 __ptext21 1AF6                 __ptext13 28BE  
               __ptext30 2FFE                 __ptext22 256A                 __ptext14 26B4  
               __ptext31 309C                 __ptext23 2E76                 __ptext15 2E30  
               __ptext32 3028                 __ptext24 2FA8                 __ptext16 120C  
               __ptext25 3052                 __ptext17 2F40                 __ptext26 3078  
               __ptext18 16CC                 __ptext27 2DE8                 __ptext19 27BA  
               __ptext28 23B6                 __ptext29 2F78               strcpy@dest 0001  
               efgtoa@fp 0034                 efgtoa@ne 0060                 efgtoa@pp 0068  
               efgtoa@ou 0073                 isa$xinst 000000                 _vfprintf 2D46  
               main@data 00AE                 memcpy@d1 0001                 memcpy@s1 0003  
               isdigit@c 0001                sprintf@ap 004D                 isspace@c 0001  
              strcpy@src 0003              efgtoa@nmode 006A              ??_vfpfcnvrt 003D  
               sprintf@f 004F                 sprintf@s 0098            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F          main@voltage_str 00A0  
