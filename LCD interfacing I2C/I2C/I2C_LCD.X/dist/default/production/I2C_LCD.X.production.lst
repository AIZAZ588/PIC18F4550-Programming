

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jun 02 10:59:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   000BA0                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _BackLight_State
    73   000BA0  08                 	db	8
    74                           
    75                           	psect	nvCOMRAM
    76   00000E                     __pnvCOMRAM:
    77                           	callstack 0
    78   00000E                     _i2c_add:
    79                           	callstack 0
    80   00000E                     	ds	1
    81   000000                     _ACKSTAT	set	32302
    82   000000                     _PEN	set	32298
    83   000000                     _SEN	set	32296
    84   000000                     _TRISBbits	set	3987
    85   000000                     _SSPCON2	set	4037
    86   000000                     _SSPCON1	set	4038
    87   000000                     _SSPBUF	set	4041
    88   000000                     _SSPADD	set	4040
    89   000000                     _SSPSTAT	set	4039
    90   000000                     _SSPIF	set	31987
    91                           
    92                           	psect	smallconst
    93   000800                     __psmallconst:
    94                           	callstack 0
    95   000800  00                 	db	0
    96   000801                     STR_2:
    97   000801  20                 	db	32
    98   000802  2D                 	db	45
    99   000803  49                 	db	73	;'I'
   100   000804  4E                 	db	78	;'N'
   101   000805  54                 	db	84	;'T'
   102   000806  45                 	db	69	;'E'
   103   000807  52                 	db	82	;'R'
   104   000808  46                 	db	70	;'F'
   105   000809  41                 	db	65	;'A'
   106   00080A  43                 	db	67	;'C'
   107   00080B  49                 	db	73	;'I'
   108   00080C  4E                 	db	78	;'N'
   109   00080D  47                 	db	71	;'G'
   110   00080E  2D                 	db	45
   111   00080F  00                 	db	0
   112   000810                     STR_1:
   113   000810  20                 	db	32
   114   000811  20                 	db	32
   115   000812  20                 	db	32
   116   000813  2D                 	db	45
   117   000814  49                 	db	73	;'I'
   118   000815  32                 	db	50	;'2'
   119   000816  43                 	db	67	;'C'
   120   000817  2D                 	db	45
   121   000818  00                 	db	0
   122   000819  00                 	db	0	; dummy byte at the end
   123   000000                     
   124                           ; #config settings
   125                           
   126                           	psect	cinit
   127   000AD2                     __pcinit:
   128                           	callstack 0
   129   000AD2                     start_initialization:
   130                           	callstack 0
   131   000AD2                     __initialization:
   132                           	callstack 0
   133                           
   134                           ; Initialize objects allocated to COMRAM (1 bytes)
   135                           ; load TBLPTR registers with __pidataCOMRAM
   136   000AD2  0EA0               	movlw	low __pidataCOMRAM
   137   000AD4  6EF6               	movwf	tblptrl,c
   138   000AD6  0E0B               	movlw	high __pidataCOMRAM
   139   000AD8  6EF7               	movwf	tblptrh,c
   140   000ADA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   141   000ADC  6EF8               	movwf	tblptru,c
   142   000ADE  0009               	tblrd		*+	;fetch initializer
   143   000AE0  CFF5 F010          	movff	tablat,__pdataCOMRAM
   144                           
   145                           ; Clear objects allocated to COMRAM (1 bytes)
   146   000AE4  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   147   000AE6                     end_of_initialization:
   148                           	callstack 0
   149   000AE6                     __end_of__initialization:
   150                           	callstack 0
   151   000AE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   152   000AE8  6EF8               	movwf	tblptru,c
   153   000AEA  0100               	movlb	0
   154   000AEC  EF84  F004         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	bssCOMRAM
   157   00000F                     __pbssCOMRAM:
   158                           	callstack 0
   159   00000F                     _RS:
   160                           	callstack 0
   161   00000F                     	ds	1
   162                           
   163                           	psect	dataCOMRAM
   164   000010                     __pdataCOMRAM:
   165                           	callstack 0
   166   000010                     _BackLight_State:
   167                           	callstack 0
   168   000010                     	ds	1
   169                           
   170                           	psect	cstackCOMRAM
   171   000001                     __pcstackCOMRAM:
   172                           	callstack 0
   173   000001                     ??_I2C_Master_Wait:
   174   000001                     
   175                           ; 1 bytes @ 0x0
   176   000001                     	ds	1
   177   000002                     I2C_Master_Write@data:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x1
   181   000002                     	ds	1
   182   000003                     IO_Expander_Write@Data:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x2
   186   000003                     	ds	1
   187   000004                     LCD_Write_4Bit@Nibble:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x3
   191   000004                     	ds	1
   192   000005                     LCD_CMD@CMD:
   193                           	callstack 0
   194   000005                     LCD_Write_Char@Data:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x4
   198   000005                     	ds	1
   199   000006                     ??_LCD_Init:
   200   000006                     LCD_Set_Cursor@COL:
   201                           	callstack 0
   202   000006                     LCD_Write_String@Str:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x5
   206   000006                     	ds	1
   207   000007                     ??_LCD_Set_Cursor:
   208                           
   209                           ; 1 bytes @ 0x6
   210   000007                     	ds	1
   211   000008                     ??_LCD_Write_String:
   212   000008                     LCD_Init@I2C_Add:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x7
   216   000008                     	ds	1
   217   000009                     LCD_Set_Cursor@ROW:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x8
   221   000009                     	ds	1
   222   00000A                     LCD_Write_String@i:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x9
   226   00000A                     	ds	2
   227   00000C                     ??_main:
   228                           
   229                           ; 1 bytes @ 0xB
   230   00000C                     	ds	2
   231                           
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 7 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   251 ;;      Params:         0       0       0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0       0       0
   253 ;;      Temps:          2       0       0       0       0       0       0       0       0
   254 ;;      Totals:         2       0       0       0       0       0       0       0       0
   255 ;;Total ram usage:        2 bytes
   256 ;; Hardware stack levels required when called: 6
   257 ;; This function calls:
   258 ;;		_I2C_Master_Init
   259 ;;		_LCD_Init
   260 ;;		_LCD_SL
   261 ;;		_LCD_SR
   262 ;;		_LCD_Set_Cursor
   263 ;;		_LCD_Write_String
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270   000908                     __ptext0:
   271                           	callstack 0
   272   000908                     _main:
   273                           	callstack 25
   274   000908                     
   275                           ;main.c: 9:     I2C_Master_Init();
   276   000908  ECAD  F005         	call	_I2C_Master_Init	;wreg free
   277   00090C                     
   278                           ;main.c: 10:     LCD_Init(0x4E);
   279   00090C  0E4E               	movlw	78
   280   00090E  EC0D  F004         	call	_LCD_Init
   281   000912                     
   282                           ;main.c: 12:     LCD_Set_Cursor(1, 1);
   283   000912  0E01               	movlw	1
   284   000914  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   285   000916  0E01               	movlw	1
   286   000918  ECE6  F004         	call	_LCD_Set_Cursor
   287   00091C                     
   288                           ;main.c: 13:     LCD_Write_String("   -I2C-");
   289   00091C  0E10               	movlw	low STR_1
   290   00091E  6E06               	movwf	LCD_Write_String@Str^0,c
   291   000920  0E08               	movlw	high STR_1
   292   000922  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
   293   000924  EC1B  F005         	call	_LCD_Write_String	;wreg free
   294   000928                     
   295                           ;main.c: 14:     LCD_Set_Cursor(2, 1);
   296   000928  0E01               	movlw	1
   297   00092A  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   298   00092C  0E02               	movlw	2
   299   00092E  ECE6  F004         	call	_LCD_Set_Cursor
   300   000932                     
   301                           ;main.c: 15:     LCD_Write_String(" -INTERFACING-");
   302   000932  0E01               	movlw	low STR_2
   303   000934  6E06               	movwf	LCD_Write_String@Str^0,c
   304   000936  0E08               	movlw	high STR_2
   305   000938  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
   306   00093A  EC1B  F005         	call	_LCD_Write_String	;wreg free
   307   00093E                     
   308                           ;main.c: 16:     _delay((unsigned long)((2500)*(16000000/4000.0)));
   309   00093E  0E33               	movlw	51
   310   000940  6E0D               	movwf	(??_main+1)^0,c
   311   000942  0EBB               	movlw	187
   312   000944  6E0C               	movwf	??_main^0,c
   313   000946  0EE0               	movlw	224
   314   000948                     u67:
   315   000948  2EE8               	decfsz	wreg,f,c
   316   00094A  D7FE               	bra	u67
   317   00094C  2E0C               	decfsz	??_main^0,f,c
   318   00094E  D7FC               	bra	u67
   319   000950  2E0D               	decfsz	(??_main+1)^0,f,c
   320   000952  D7FA               	bra	u67
   321   000954                     l961:
   322                           
   323                           ;main.c: 19:     {;main.c: 20:        LCD_SR();
   324   000954  ECB8  F005         	call	_LCD_SR	;wreg free
   325   000958                     
   326                           ;main.c: 21:        _delay((unsigned long)((350)*(16000000/4000.0)));
   327   000958  0E08               	movlw	8
   328   00095A  6E0D               	movwf	(??_main+1)^0,c
   329   00095C  0E1B               	movlw	27
   330   00095E  6E0C               	movwf	??_main^0,c
   331   000960  0E27               	movlw	39
   332   000962                     u77:
   333   000962  2EE8               	decfsz	wreg,f,c
   334   000964  D7FE               	bra	u77
   335   000966  2E0C               	decfsz	??_main^0,f,c
   336   000968  D7FC               	bra	u77
   337   00096A  2E0D               	decfsz	(??_main+1)^0,f,c
   338   00096C  D7FA               	bra	u77
   339   00096E  F000               	nop	
   340   000970                     
   341                           ;main.c: 22:        LCD_SR();
   342   000970  ECB8  F005         	call	_LCD_SR	;wreg free
   343   000974                     
   344                           ;main.c: 23:        _delay((unsigned long)((350)*(16000000/4000.0)));
   345   000974  0E08               	movlw	8
   346   000976  6E0D               	movwf	(??_main+1)^0,c
   347   000978  0E1B               	movlw	27
   348   00097A  6E0C               	movwf	??_main^0,c
   349   00097C  0E27               	movlw	39
   350   00097E                     u87:
   351   00097E  2EE8               	decfsz	wreg,f,c
   352   000980  D7FE               	bra	u87
   353   000982  2E0C               	decfsz	??_main^0,f,c
   354   000984  D7FC               	bra	u87
   355   000986  2E0D               	decfsz	(??_main+1)^0,f,c
   356   000988  D7FA               	bra	u87
   357   00098A  F000               	nop	
   358   00098C                     
   359                           ;main.c: 24:        LCD_SL();
   360   00098C  ECC0  F005         	call	_LCD_SL	;wreg free
   361   000990                     
   362                           ;main.c: 25:        _delay((unsigned long)((350)*(16000000/4000.0)));
   363   000990  0E08               	movlw	8
   364   000992  6E0D               	movwf	(??_main+1)^0,c
   365   000994  0E1B               	movlw	27
   366   000996  6E0C               	movwf	??_main^0,c
   367   000998  0E27               	movlw	39
   368   00099A                     u97:
   369   00099A  2EE8               	decfsz	wreg,f,c
   370   00099C  D7FE               	bra	u97
   371   00099E  2E0C               	decfsz	??_main^0,f,c
   372   0009A0  D7FC               	bra	u97
   373   0009A2  2E0D               	decfsz	(??_main+1)^0,f,c
   374   0009A4  D7FA               	bra	u97
   375   0009A6  F000               	nop	
   376   0009A8                     
   377                           ;main.c: 26:        LCD_SL();
   378   0009A8  ECC0  F005         	call	_LCD_SL	;wreg free
   379   0009AC                     
   380                           ;main.c: 27:        _delay((unsigned long)((350)*(16000000/4000.0)));
   381   0009AC  0E08               	movlw	8
   382   0009AE  6E0D               	movwf	(??_main+1)^0,c
   383   0009B0  0E1B               	movlw	27
   384   0009B2  6E0C               	movwf	??_main^0,c
   385   0009B4  0E27               	movlw	39
   386   0009B6                     u107:
   387   0009B6  2EE8               	decfsz	wreg,f,c
   388   0009B8  D7FE               	bra	u107
   389   0009BA  2E0C               	decfsz	??_main^0,f,c
   390   0009BC  D7FC               	bra	u107
   391   0009BE  2E0D               	decfsz	(??_main+1)^0,f,c
   392   0009C0  D7FA               	bra	u107
   393   0009C2  F000               	nop	
   394   0009C4  EFAA  F004         	goto	l961
   395   0009C8  EF00  F000         	goto	start
   396   0009CC                     __end_of_main:
   397                           	callstack 0
   398                           
   399 ;; *************** function _LCD_Write_String *****************
   400 ;; Defined at:
   401 ;;		line 108 in file "I2C_LCD.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  Str             2    5[COMRAM] PTR unsigned char 
   404 ;;		 -> STR_2(15), STR_1(9), 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  i               2    9[COMRAM] int 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   416 ;;      Params:         2       0       0       0       0       0       0       0       0
   417 ;;      Locals:         2       0       0       0       0       0       0       0       0
   418 ;;      Temps:          2       0       0       0       0       0       0       0       0
   419 ;;      Totals:         6       0       0       0       0       0       0       0       0
   420 ;;Total ram usage:        6 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 5
   423 ;; This function calls:
   424 ;;		_LCD_Write_Char
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text1
   431   000A36                     __ptext1:
   432                           	callstack 0
   433   000A36                     _LCD_Write_String:
   434                           	callstack 25
   435   000A36                     
   436                           ;I2C_LCD.c: 108: void LCD_Write_String(char* Str);I2C_LCD.c: 109: {;I2C_LCD.c: 110:     
      +                          for (int i = 0; Str[i] != '\0'; i++)
   437   000A36  0E00               	movlw	0
   438   000A38  6E0B               	movwf	(LCD_Write_String@i+1)^0,c
   439   000A3A  0E00               	movlw	0
   440   000A3C  6E0A               	movwf	LCD_Write_String@i^0,c
   441   000A3E  EF31  F005         	goto	l929
   442   000A42                     l925:
   443                           
   444                           ;I2C_LCD.c: 111:         LCD_Write_Char(Str[i]);
   445   000A42  500A               	movf	LCD_Write_String@i^0,w,c
   446   000A44  2406               	addwf	LCD_Write_String@Str^0,w,c
   447   000A46  6E08               	movwf	??_LCD_Write_String^0,c
   448   000A48  500B               	movf	(LCD_Write_String@i+1)^0,w,c
   449   000A4A  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
   450   000A4C  6E09               	movwf	(??_LCD_Write_String+1)^0,c
   451   000A4E  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
   452   000A52  C009  FFF7         	movff	??_LCD_Write_String+1,tblptrh
   453   000A56                     	if	0	;tblptru may be non-zero
   454   000A56                     	endif
   455   000A56                     	if	0	;tblptru may be non-zero
   456   000A56                     	endif
   457   000A56  0008               	tblrd		*
   458   000A58  50F5               	movf	tablat,w,c
   459   000A5A  EC86  F005         	call	_LCD_Write_Char
   460   000A5E  4A0A               	infsnz	LCD_Write_String@i^0,f,c
   461   000A60  2A0B               	incf	(LCD_Write_String@i+1)^0,f,c
   462   000A62                     l929:
   463   000A62  500A               	movf	LCD_Write_String@i^0,w,c
   464   000A64  2406               	addwf	LCD_Write_String@Str^0,w,c
   465   000A66  6E08               	movwf	??_LCD_Write_String^0,c
   466   000A68  500B               	movf	(LCD_Write_String@i+1)^0,w,c
   467   000A6A  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
   468   000A6C  6E09               	movwf	(??_LCD_Write_String+1)^0,c
   469   000A6E  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
   470   000A72  C009  FFF7         	movff	??_LCD_Write_String+1,tblptrh
   471   000A76                     	if	0	;tblptru may be non-zero
   472   000A76                     	endif
   473   000A76                     	if	0	;tblptru may be non-zero
   474   000A76                     	endif
   475   000A76  0008               	tblrd		*
   476   000A78  50F5               	movf	tablat,w,c
   477   000A7A  0900               	iorlw	0
   478   000A7C  A4D8               	btfss	status,2,c
   479   000A7E  EF43  F005         	goto	u51
   480   000A82  EF45  F005         	goto	u50
   481   000A86                     u51:
   482   000A86  EF21  F005         	goto	l925
   483   000A8A                     u50:
   484   000A8A  0012               	return		;funcret
   485   000A8C                     __end_of_LCD_Write_String:
   486                           	callstack 0
   487                           
   488 ;; *************** function _LCD_Write_Char *****************
   489 ;; Defined at:
   490 ;;		line 101 in file "I2C_LCD.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  Data            1    wreg     unsigned char 
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  Data            1    4[COMRAM] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   504 ;;      Params:         0       0       0       0       0       0       0       0       0
   505 ;;      Locals:         1       0       0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0       0       0
   507 ;;      Totals:         1       0       0       0       0       0       0       0       0
   508 ;;Total ram usage:        1 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 4
   511 ;; This function calls:
   512 ;;		_LCD_Write_4Bit
   513 ;; This function is called by:
   514 ;;		_LCD_Write_String
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text2
   519   000B0C                     __ptext2:
   520                           	callstack 0
   521   000B0C                     _LCD_Write_Char:
   522                           	callstack 25
   523                           
   524                           ;incstack = 0
   525                           ;LCD_Write_Char@Data stored from wreg
   526   000B0C  6E05               	movwf	LCD_Write_Char@Data^0,c
   527   000B0E                     
   528                           ;I2C_LCD.c: 101: void LCD_Write_Char(char Data);I2C_LCD.c: 102: {;I2C_LCD.c: 103:     RS
      +                           = 1;
   529   000B0E  0E01               	movlw	1
   530   000B10  6E0F               	movwf	_RS^0,c
   531   000B12                     
   532                           ;I2C_LCD.c: 104:     LCD_Write_4Bit(Data & 0xF0);
   533   000B12  5005               	movf	LCD_Write_Char@Data^0,w,c
   534   000B14  0BF0               	andlw	240
   535   000B16  EC59  F005         	call	_LCD_Write_4Bit
   536   000B1A                     
   537                           ;I2C_LCD.c: 105:     LCD_Write_4Bit((Data << 4) & 0xF0);
   538   000B1A  3805               	swapf	LCD_Write_Char@Data^0,w,c
   539   000B1C  0BF0               	andlw	240
   540   000B1E  0BF0               	andlw	240
   541   000B20  EC59  F005         	call	_LCD_Write_4Bit
   542   000B24  0012               	return		;funcret
   543   000B26                     __end_of_LCD_Write_Char:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_Set_Cursor *****************
   547 ;; Defined at:
   548 ;;		line 114 in file "I2C_LCD.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  ROW             1    wreg     unsigned char 
   551 ;;  COL             1    5[COMRAM] unsigned char 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  ROW             1    8[COMRAM] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         1       0       0       0       0       0       0       0       0
   564 ;;      Locals:         1       0       0       0       0       0       0       0       0
   565 ;;      Temps:          2       0       0       0       0       0       0       0       0
   566 ;;      Totals:         4       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        4 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 5
   570 ;; This function calls:
   571 ;;		_LCD_CMD
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text3
   578   0009CC                     __ptext3:
   579                           	callstack 0
   580   0009CC                     _LCD_Set_Cursor:
   581                           	callstack 25
   582                           
   583                           ;incstack = 0
   584                           ;LCD_Set_Cursor@ROW stored from wreg
   585   0009CC  6E09               	movwf	LCD_Set_Cursor@ROW^0,c
   586   0009CE                     
   587                           ;I2C_LCD.c: 114: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 11
      +                          5: {;I2C_LCD.c: 116:     switch (ROW)
   588   0009CE  EF01  F005         	goto	l941
   589   0009D2                     l933:
   590                           
   591                           ;I2C_LCD.c: 119:             LCD_CMD(0xC0 + COL - 1);
   592   0009D2  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   593   0009D4  0FBF               	addlw	191
   594   0009D6  EC93  F005         	call	_LCD_CMD
   595                           
   596                           ;I2C_LCD.c: 120:             break;
   597   0009DA  EF1A  F005         	goto	l83
   598   0009DE                     l935:
   599                           
   600                           ;I2C_LCD.c: 122:             LCD_CMD(0x94 + COL - 1);
   601   0009DE  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   602   0009E0  0F93               	addlw	147
   603   0009E2  EC93  F005         	call	_LCD_CMD
   604                           
   605                           ;I2C_LCD.c: 123:             break;
   606   0009E6  EF1A  F005         	goto	l83
   607   0009EA                     l937:
   608                           
   609                           ;I2C_LCD.c: 125:             LCD_CMD(0xD4 + COL - 1);
   610   0009EA  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   611   0009EC  0FD3               	addlw	211
   612   0009EE  EC93  F005         	call	_LCD_CMD
   613                           
   614                           ;I2C_LCD.c: 126:             break;
   615   0009F2  EF1A  F005         	goto	l83
   616   0009F6                     l939:
   617                           
   618                           ;I2C_LCD.c: 128:             LCD_CMD(0x80 + COL - 1);
   619   0009F6  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   620   0009F8  0F7F               	addlw	127
   621   0009FA  EC93  F005         	call	_LCD_CMD
   622                           
   623                           ;I2C_LCD.c: 129:     }
   624   0009FE  EF1A  F005         	goto	l83
   625   000A02                     l941:
   626   000A02  5009               	movf	LCD_Set_Cursor@ROW^0,w,c
   627   000A04  6E07               	movwf	??_LCD_Set_Cursor^0,c
   628   000A06  6A08               	clrf	(??_LCD_Set_Cursor+1)^0,c
   629                           
   630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   631                           ; Switch size 1, requested type "simple"
   632                           ; Number of cases is 1, Range of values is 0 to 0
   633                           ; switch strategies available:
   634                           ; Name         Instructions Cycles
   635                           ; simple_byte            4     3 (average)
   636                           ;	Chosen strategy is simple_byte
   637   000A08  5008               	movf	(??_LCD_Set_Cursor+1)^0,w,c
   638   000A0A  0A00               	xorlw	0	; case 0
   639   000A0C  B4D8               	btfsc	status,2,c
   640   000A0E  EF0B  F005         	goto	l981
   641   000A12  EFFB  F004         	goto	l939
   642   000A16                     l981:
   643                           
   644                           ; Switch size 1, requested type "simple"
   645                           ; Number of cases is 3, Range of values is 2 to 4
   646                           ; switch strategies available:
   647                           ; Name         Instructions Cycles
   648                           ; simple_byte           10     6 (average)
   649                           ;	Chosen strategy is simple_byte
   650   000A16  5007               	movf	??_LCD_Set_Cursor^0,w,c
   651   000A18  0A02               	xorlw	2	; case 2
   652   000A1A  B4D8               	btfsc	status,2,c
   653   000A1C  EFE9  F004         	goto	l933
   654   000A20  0A01               	xorlw	1	; case 3
   655   000A22  B4D8               	btfsc	status,2,c
   656   000A24  EFEF  F004         	goto	l935
   657   000A28  0A07               	xorlw	7	; case 4
   658   000A2A  B4D8               	btfsc	status,2,c
   659   000A2C  EFF5  F004         	goto	l937
   660   000A30  EFFB  F004         	goto	l939
   661   000A34                     l83:
   662   000A34  0012               	return		;funcret
   663   000A36                     __end_of_LCD_Set_Cursor:
   664                           	callstack 0
   665                           
   666 ;; *************** function _LCD_SR *****************
   667 ;; Defined at:
   668 ;;		line 139 in file "I2C_LCD.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   682 ;;      Params:         0       0       0       0       0       0       0       0       0
   683 ;;      Locals:         0       0       0       0       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0       0       0
   685 ;;      Totals:         0       0       0       0       0       0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; Hardware stack levels required when called: 5
   689 ;; This function calls:
   690 ;;		_LCD_CMD
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text4
   697   000B70                     __ptext4:
   698                           	callstack 0
   699   000B70                     _LCD_SR:
   700                           	callstack 25
   701   000B70                     
   702                           ;I2C_LCD.c: 141:     LCD_CMD(0x1C);
   703   000B70  0E1C               	movlw	28
   704   000B72  EC93  F005         	call	_LCD_CMD
   705   000B76                     
   706                           ;I2C_LCD.c: 142:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   707   000B76  0E35               	movlw	53
   708   000B78                     u117:
   709   000B78  2EE8               	decfsz	wreg,f,c
   710   000B7A  D7FE               	bra	u117
   711   000B7C  F000               	nop	
   712   000B7E  0012               	return		;funcret
   713   000B80                     __end_of_LCD_SR:
   714                           	callstack 0
   715                           
   716 ;; *************** function _LCD_SL *****************
   717 ;; Defined at:
   718 ;;		line 133 in file "I2C_LCD.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   732 ;;      Params:         0       0       0       0       0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 5
   739 ;; This function calls:
   740 ;;		_LCD_CMD
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text5
   747   000B80                     __ptext5:
   748                           	callstack 0
   749   000B80                     _LCD_SL:
   750                           	callstack 25
   751   000B80                     
   752                           ;I2C_LCD.c: 135:     LCD_CMD(0x18);
   753   000B80  0E18               	movlw	24
   754   000B82  EC93  F005         	call	_LCD_CMD
   755   000B86                     
   756                           ;I2C_LCD.c: 136:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   757   000B86  0E35               	movlw	53
   758   000B88                     u127:
   759   000B88  2EE8               	decfsz	wreg,f,c
   760   000B8A  D7FE               	bra	u127
   761   000B8C  F000               	nop	
   762   000B8E  0012               	return		;funcret
   763   000B90                     __end_of_LCD_SL:
   764                           	callstack 0
   765                           
   766 ;; *************** function _LCD_Init *****************
   767 ;; Defined at:
   768 ;;		line 55 in file "I2C_LCD.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  I2C_Add         1    wreg     unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  I2C_Add         1    7[COMRAM] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   782 ;;      Params:         0       0       0       0       0       0       0       0       0
   783 ;;      Locals:         1       0       0       0       0       0       0       0       0
   784 ;;      Temps:          2       0       0       0       0       0       0       0       0
   785 ;;      Totals:         3       0       0       0       0       0       0       0       0
   786 ;;Total ram usage:        3 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 5
   789 ;; This function calls:
   790 ;;		_IO_Expander_Write
   791 ;;		_LCD_CMD
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text6
   798   00081A                     __ptext6:
   799                           	callstack 0
   800   00081A                     _LCD_Init:
   801                           	callstack 25
   802                           
   803                           ;incstack = 0
   804                           ;LCD_Init@I2C_Add stored from wreg
   805   00081A  6E08               	movwf	LCD_Init@I2C_Add^0,c
   806   00081C                     
   807                           ;I2C_LCD.c: 55: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 56: {;I2C_LCD.c: 57:    
      +                           i2c_add = I2C_Add;
   808   00081C  C008  F00E         	movff	LCD_Init@I2C_Add,_i2c_add
   809   000820                     
   810                           ;I2C_LCD.c: 58:     IO_Expander_Write(0x00);
   811   000820  0E00               	movlw	0
   812   000822  ECA0  F005         	call	_IO_Expander_Write
   813   000826                     
   814                           ;I2C_LCD.c: 59:     _delay((unsigned long)((30)*(16000000/4000.0)));
   815   000826  0E9C               	movlw	156
   816   000828  6E06               	movwf	??_LCD_Init^0,c
   817   00082A  0ED7               	movlw	215
   818   00082C                     u137:
   819   00082C  2EE8               	decfsz	wreg,f,c
   820   00082E  D7FE               	bra	u137
   821   000830  2E06               	decfsz	??_LCD_Init^0,f,c
   822   000832  D7FC               	bra	u137
   823   000834  F000               	nop	
   824                           
   825                           ;I2C_LCD.c: 60:     LCD_CMD(0x03);
   826   000836  0E03               	movlw	3
   827   000838  EC93  F005         	call	_LCD_CMD
   828   00083C                     
   829                           ;I2C_LCD.c: 61:     _delay((unsigned long)((5)*(16000000/4000.0)));
   830   00083C  0E1A               	movlw	26
   831   00083E  6E06               	movwf	??_LCD_Init^0,c
   832   000840  0EF8               	movlw	248
   833   000842                     u147:
   834   000842  2EE8               	decfsz	wreg,f,c
   835   000844  D7FE               	bra	u147
   836   000846  2E06               	decfsz	??_LCD_Init^0,f,c
   837   000848  D7FC               	bra	u147
   838   00084A  D000               	nop2	
   839   00084C                     
   840                           ;I2C_LCD.c: 62:     LCD_CMD(0x03);
   841   00084C  0E03               	movlw	3
   842   00084E  EC93  F005         	call	_LCD_CMD
   843                           
   844                           ;I2C_LCD.c: 63:     _delay((unsigned long)((5)*(16000000/4000.0)));
   845   000852  0E1A               	movlw	26
   846   000854  6E06               	movwf	??_LCD_Init^0,c
   847   000856  0EF8               	movlw	248
   848   000858                     u157:
   849   000858  2EE8               	decfsz	wreg,f,c
   850   00085A  D7FE               	bra	u157
   851   00085C  2E06               	decfsz	??_LCD_Init^0,f,c
   852   00085E  D7FC               	bra	u157
   853   000860  D000               	nop2	
   854   000862                     
   855                           ;I2C_LCD.c: 64:     LCD_CMD(0x03);
   856   000862  0E03               	movlw	3
   857   000864  EC93  F005         	call	_LCD_CMD
   858   000868                     
   859                           ;I2C_LCD.c: 65:     _delay((unsigned long)((5)*(16000000/4000.0)));
   860   000868  0E1A               	movlw	26
   861   00086A  6E06               	movwf	??_LCD_Init^0,c
   862   00086C  0EF8               	movlw	248
   863   00086E                     u167:
   864   00086E  2EE8               	decfsz	wreg,f,c
   865   000870  D7FE               	bra	u167
   866   000872  2E06               	decfsz	??_LCD_Init^0,f,c
   867   000874  D7FC               	bra	u167
   868   000876  D000               	nop2	
   869                           
   870                           ;I2C_LCD.c: 66:     LCD_CMD(0x02);
   871   000878  0E02               	movlw	2
   872   00087A  EC93  F005         	call	_LCD_CMD
   873   00087E                     
   874                           ;I2C_LCD.c: 67:     _delay((unsigned long)((5)*(16000000/4000.0)));
   875   00087E  0E1A               	movlw	26
   876   000880  6E06               	movwf	??_LCD_Init^0,c
   877   000882  0EF8               	movlw	248
   878   000884                     u177:
   879   000884  2EE8               	decfsz	wreg,f,c
   880   000886  D7FE               	bra	u177
   881   000888  2E06               	decfsz	??_LCD_Init^0,f,c
   882   00088A  D7FC               	bra	u177
   883   00088C  D000               	nop2	
   884   00088E                     
   885                           ;I2C_LCD.c: 68:     LCD_CMD(0x20 | (2 << 2));
   886   00088E  0E28               	movlw	40
   887   000890  EC93  F005         	call	_LCD_CMD
   888                           
   889                           ;I2C_LCD.c: 69:     _delay((unsigned long)((50)*(16000000/4000.0)));
   890   000894  0E02               	movlw	2
   891   000896  6E07               	movwf	(??_LCD_Init+1)^0,c
   892   000898  0E04               	movlw	4
   893   00089A  6E06               	movwf	??_LCD_Init^0,c
   894   00089C  0EBA               	movlw	186
   895   00089E                     u187:
   896   00089E  2EE8               	decfsz	wreg,f,c
   897   0008A0  D7FE               	bra	u187
   898   0008A2  2E06               	decfsz	??_LCD_Init^0,f,c
   899   0008A4  D7FC               	bra	u187
   900   0008A6  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
   901   0008A8  D7FA               	bra	u187
   902   0008AA  D000               	nop2	
   903   0008AC                     
   904                           ;I2C_LCD.c: 70:     LCD_CMD(0x0C);
   905   0008AC  0E0C               	movlw	12
   906   0008AE  EC93  F005         	call	_LCD_CMD
   907   0008B2                     
   908                           ;I2C_LCD.c: 71:     _delay((unsigned long)((50)*(16000000/4000.0)));
   909   0008B2  0E02               	movlw	2
   910   0008B4  6E07               	movwf	(??_LCD_Init+1)^0,c
   911   0008B6  0E04               	movlw	4
   912   0008B8  6E06               	movwf	??_LCD_Init^0,c
   913   0008BA  0EBA               	movlw	186
   914   0008BC                     u197:
   915   0008BC  2EE8               	decfsz	wreg,f,c
   916   0008BE  D7FE               	bra	u197
   917   0008C0  2E06               	decfsz	??_LCD_Init^0,f,c
   918   0008C2  D7FC               	bra	u197
   919   0008C4  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
   920   0008C6  D7FA               	bra	u197
   921   0008C8  D000               	nop2	
   922                           
   923                           ;I2C_LCD.c: 72:     LCD_CMD(0x01);
   924   0008CA  0E01               	movlw	1
   925   0008CC  EC93  F005         	call	_LCD_CMD
   926   0008D0                     
   927                           ;I2C_LCD.c: 73:     _delay((unsigned long)((50)*(16000000/4000.0)));
   928   0008D0  0E02               	movlw	2
   929   0008D2  6E07               	movwf	(??_LCD_Init+1)^0,c
   930   0008D4  0E04               	movlw	4
   931   0008D6  6E06               	movwf	??_LCD_Init^0,c
   932   0008D8  0EBA               	movlw	186
   933   0008DA                     u207:
   934   0008DA  2EE8               	decfsz	wreg,f,c
   935   0008DC  D7FE               	bra	u207
   936   0008DE  2E06               	decfsz	??_LCD_Init^0,f,c
   937   0008E0  D7FC               	bra	u207
   938   0008E2  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
   939   0008E4  D7FA               	bra	u207
   940   0008E6  D000               	nop2	
   941   0008E8                     
   942                           ;I2C_LCD.c: 74:     LCD_CMD(0x04 | 0x02);
   943   0008E8  0E06               	movlw	6
   944   0008EA  EC93  F005         	call	_LCD_CMD
   945                           
   946                           ;I2C_LCD.c: 75:     _delay((unsigned long)((50)*(16000000/4000.0)));
   947   0008EE  0E02               	movlw	2
   948   0008F0  6E07               	movwf	(??_LCD_Init+1)^0,c
   949   0008F2  0E04               	movlw	4
   950   0008F4  6E06               	movwf	??_LCD_Init^0,c
   951   0008F6  0EBA               	movlw	186
   952   0008F8                     u217:
   953   0008F8  2EE8               	decfsz	wreg,f,c
   954   0008FA  D7FE               	bra	u217
   955   0008FC  2E06               	decfsz	??_LCD_Init^0,f,c
   956   0008FE  D7FC               	bra	u217
   957   000900  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
   958   000902  D7FA               	bra	u217
   959   000904  D000               	nop2	
   960   000906  0012               	return		;funcret
   961   000908                     __end_of_LCD_Init:
   962                           	callstack 0
   963                           
   964 ;; *************** function _LCD_CMD *****************
   965 ;; Defined at:
   966 ;;		line 94 in file "I2C_LCD.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  CMD             1    wreg     unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  CMD             1    4[COMRAM] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       0       0       0       0       0       0       0       0
   981 ;;      Locals:         1       0       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:         1       0       0       0       0       0       0       0       0
   984 ;;Total ram usage:        1 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 4
   987 ;; This function calls:
   988 ;;		_LCD_Write_4Bit
   989 ;; This function is called by:
   990 ;;		_LCD_Init
   991 ;;		_LCD_Set_Cursor
   992 ;;		_LCD_SL
   993 ;;		_LCD_SR
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text7
   998   000B26                     __ptext7:
   999                           	callstack 0
  1000   000B26                     _LCD_CMD:
  1001                           	callstack 25
  1002                           
  1003                           ;incstack = 0
  1004                           ;LCD_CMD@CMD stored from wreg
  1005   000B26  6E05               	movwf	LCD_CMD@CMD^0,c
  1006   000B28                     
  1007                           ;I2C_LCD.c: 94: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 95: {;I2C_LCD.c: 96:     RS =
      +                           0;
  1008   000B28  0E00               	movlw	0
  1009   000B2A  6E0F               	movwf	_RS^0,c
  1010   000B2C                     
  1011                           ;I2C_LCD.c: 97:     LCD_Write_4Bit(CMD & 0xF0);
  1012   000B2C  5005               	movf	LCD_CMD@CMD^0,w,c
  1013   000B2E  0BF0               	andlw	240
  1014   000B30  EC59  F005         	call	_LCD_Write_4Bit
  1015   000B34                     
  1016                           ;I2C_LCD.c: 98:     LCD_Write_4Bit((CMD << 4) & 0xF0);
  1017   000B34  3805               	swapf	LCD_CMD@CMD^0,w,c
  1018   000B36  0BF0               	andlw	240
  1019   000B38  0BF0               	andlw	240
  1020   000B3A  EC59  F005         	call	_LCD_Write_4Bit
  1021   000B3E  0012               	return		;funcret
  1022   000B40                     __end_of_LCD_CMD:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _LCD_Write_4Bit *****************
  1026 ;; Defined at:
  1027 ;;		line 86 in file "I2C_LCD.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  Nibble          1    wreg     unsigned char 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  Nibble          1    3[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0
  1042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1044 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1045 ;;Total ram usage:        1 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 3
  1048 ;; This function calls:
  1049 ;;		_IO_Expander_Write
  1050 ;; This function is called by:
  1051 ;;		_LCD_CMD
  1052 ;;		_LCD_Write_Char
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text8
  1057   000AB2                     __ptext8:
  1058                           	callstack 0
  1059   000AB2                     _LCD_Write_4Bit:
  1060                           	callstack 25
  1061                           
  1062                           ;incstack = 0
  1063                           ;LCD_Write_4Bit@Nibble stored from wreg
  1064   000AB2  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
  1065   000AB4                     
  1066                           ;I2C_LCD.c: 86: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 87: {;I2C_LCD.c: 88
      +                          :     Nibble |= RS;
  1067   000AB4  500F               	movf	_RS^0,w,c
  1068   000AB6  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  1069   000AB8                     
  1070                           ;I2C_LCD.c: 89:     IO_Expander_Write(Nibble | 0x04);
  1071   000AB8  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  1072   000ABA  0904               	iorlw	4
  1073   000ABC  ECA0  F005         	call	_IO_Expander_Write
  1074   000AC0                     
  1075                           ;I2C_LCD.c: 90:     IO_Expander_Write(Nibble & 0xFB);
  1076   000AC0  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  1077   000AC2  0BFB               	andlw	251
  1078   000AC4  ECA0  F005         	call	_IO_Expander_Write
  1079   000AC8                     
  1080                           ;I2C_LCD.c: 91:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  1081   000AC8  0E42               	movlw	66
  1082   000ACA                     u227:
  1083   000ACA  2EE8               	decfsz	wreg,f,c
  1084   000ACC  D7FE               	bra	u227
  1085   000ACE  D000               	nop2	
  1086   000AD0  0012               	return		;funcret
  1087   000AD2                     __end_of_LCD_Write_4Bit:
  1088                           	callstack 0
  1089                           
  1090 ;; *************** function _IO_Expander_Write *****************
  1091 ;; Defined at:
  1092 ;;		line 78 in file "I2C_LCD.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  Data            1    wreg     unsigned char 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  Data            1    2[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0
  1107 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1109 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1110 ;;Total ram usage:        1 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 2
  1113 ;; This function calls:
  1114 ;;		_I2C_Master_Start
  1115 ;;		_I2C_Master_Stop
  1116 ;;		_I2C_Master_Write
  1117 ;; This function is called by:
  1118 ;;		_LCD_Init
  1119 ;;		_LCD_Write_4Bit
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text9
  1124   000B40                     __ptext9:
  1125                           	callstack 0
  1126   000B40                     _IO_Expander_Write:
  1127                           	callstack 25
  1128                           
  1129                           ;incstack = 0
  1130                           ;IO_Expander_Write@Data stored from wreg
  1131   000B40  6E03               	movwf	IO_Expander_Write@Data^0,c
  1132   000B42                     
  1133                           ;I2C_LCD.c: 78: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 79: {;I2C_LCD.c: 8
      +                          0:     I2C_Master_Start();
  1134   000B42  ECCC  F005         	call	_I2C_Master_Start	;wreg free
  1135                           
  1136                           ;I2C_LCD.c: 81:     I2C_Master_Write(i2c_add);
  1137   000B46  500E               	movf	_i2c_add^0,w,c
  1138   000B48  EC78  F005         	call	_I2C_Master_Write
  1139                           
  1140                           ;I2C_LCD.c: 82:     I2C_Master_Write(Data | BackLight_State);
  1141   000B4C  5003               	movf	IO_Expander_Write@Data^0,w,c
  1142   000B4E  0908               	iorlw	8
  1143   000B50  EC78  F005         	call	_I2C_Master_Write
  1144                           
  1145                           ;I2C_LCD.c: 83:     I2C_Master_Stop();
  1146   000B54  ECC8  F005         	call	_I2C_Master_Stop	;wreg free
  1147   000B58  0012               	return		;funcret
  1148   000B5A                     __end_of_IO_Expander_Write:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _I2C_Master_Write *****************
  1152 ;; Defined at:
  1153 ;;		line 40 in file "I2C_LCD.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  data            1    wreg     unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  data            1    1[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      unsigned char 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1170 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1171 ;;Total ram usage:        1 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 1
  1174 ;; This function calls:
  1175 ;;		_I2C_Master_Wait
  1176 ;; This function is called by:
  1177 ;;		_IO_Expander_Write
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text10
  1182   000AF0                     __ptext10:
  1183                           	callstack 0
  1184   000AF0                     _I2C_Master_Write:
  1185                           	callstack 25
  1186                           
  1187                           ;incstack = 0
  1188                           ;I2C_Master_Write@data stored from wreg
  1189   000AF0  6E02               	movwf	I2C_Master_Write@data^0,c
  1190   000AF2                     
  1191                           ;I2C_LCD.c: 40: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 41: {;I2C_
      +                          LCD.c: 42:     I2C_Master_Wait();
  1192   000AF2  EC46  F005         	call	_I2C_Master_Wait	;wreg free
  1193   000AF6                     
  1194                           ;I2C_LCD.c: 43:     SSPBUF = data;
  1195   000AF6  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  1196   000AFA                     l50:
  1197   000AFA  A69E               	btfss	3998,3,c	;volatile
  1198   000AFC  EF82  F005         	goto	u31
  1199   000B00  EF84  F005         	goto	u30
  1200   000B04                     u31:
  1201   000B04  EF7D  F005         	goto	l50
  1202   000B08                     u30:
  1203   000B08                     
  1204                           ;I2C_LCD.c: 45:     SSPIF = 0;
  1205   000B08  969E               	bcf	3998,3,c	;volatile
  1206   000B0A  0012               	return		;funcret
  1207   000B0C                     __end_of_I2C_Master_Write:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _I2C_Master_Stop *****************
  1211 ;; Defined at:
  1212 ;;		line 34 in file "I2C_LCD.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 1
  1233 ;; This function calls:
  1234 ;;		_I2C_Master_Wait
  1235 ;; This function is called by:
  1236 ;;		_IO_Expander_Write
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text11
  1241   000B90                     __ptext11:
  1242                           	callstack 0
  1243   000B90                     _I2C_Master_Stop:
  1244                           	callstack 25
  1245   000B90                     
  1246                           ;I2C_LCD.c: 36:     I2C_Master_Wait();
  1247   000B90  EC46  F005         	call	_I2C_Master_Wait	;wreg free
  1248   000B94                     
  1249                           ;I2C_LCD.c: 37:     PEN = 1;
  1250   000B94  84C5               	bsf	4037,2,c	;volatile
  1251   000B96  0012               	return		;funcret
  1252   000B98                     __end_of_I2C_Master_Stop:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _I2C_Master_Start *****************
  1256 ;; Defined at:
  1257 ;;		line 28 in file "I2C_LCD.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 1
  1278 ;; This function calls:
  1279 ;;		_I2C_Master_Wait
  1280 ;; This function is called by:
  1281 ;;		_IO_Expander_Write
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text12
  1286   000B98                     __ptext12:
  1287                           	callstack 0
  1288   000B98                     _I2C_Master_Start:
  1289                           	callstack 25
  1290   000B98                     
  1291                           ;I2C_LCD.c: 30:     I2C_Master_Wait();
  1292   000B98  EC46  F005         	call	_I2C_Master_Wait	;wreg free
  1293   000B9C                     
  1294                           ;I2C_LCD.c: 31:     SEN = 1;
  1295   000B9C  80C5               	bsf	4037,0,c	;volatile
  1296   000B9E  0012               	return		;funcret
  1297   000BA0                     __end_of_I2C_Master_Start:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _I2C_Master_Wait *****************
  1301 ;; Defined at:
  1302 ;;		line 23 in file "I2C_LCD.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        1 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_I2C_Master_Start
  1326 ;;		_I2C_Master_Stop
  1327 ;;		_I2C_Master_Write
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text13
  1332   000A8C                     __ptext13:
  1333                           	callstack 0
  1334   000A8C                     _I2C_Master_Wait:
  1335                           	callstack 25
  1336   000A8C                     l38:
  1337   000A8C  B4C7               	btfsc	199,2,c	;volatile
  1338   000A8E  EF4B  F005         	goto	u11
  1339   000A92  EF4D  F005         	goto	u10
  1340   000A96                     u11:
  1341   000A96  EF46  F005         	goto	l38
  1342   000A9A                     u10:
  1343   000A9A  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1344   000A9E  0E1F               	movlw	31
  1345   000AA0  1601               	andwf	??_I2C_Master_Wait^0,f,c
  1346   000AA2  A4D8               	btfss	status,2,c
  1347   000AA4  EF56  F005         	goto	u21
  1348   000AA8  EF58  F005         	goto	u20
  1349   000AAC                     u21:
  1350   000AAC  EF46  F005         	goto	l38
  1351   000AB0                     u20:
  1352   000AB0  0012               	return		;funcret
  1353   000AB2                     __end_of_I2C_Master_Wait:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _I2C_Master_Init *****************
  1357 ;; Defined at:
  1358 ;;		line 9 in file "I2C_LCD.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text14
  1386   000B5A                     __ptext14:
  1387                           	callstack 0
  1388   000B5A                     _I2C_Master_Init:
  1389                           	callstack 30
  1390   000B5A                     
  1391                           ;I2C_LCD.c: 11:     SSPCON1 = 0x28;
  1392   000B5A  0E28               	movlw	40
  1393   000B5C  6EC6               	movwf	198,c	;volatile
  1394                           
  1395                           ;I2C_LCD.c: 12:     SSPCON2 = 0x00;
  1396   000B5E  0E00               	movlw	0
  1397   000B60  6EC5               	movwf	197,c	;volatile
  1398                           
  1399                           ;I2C_LCD.c: 13:     SSPSTAT = 0x00;
  1400   000B62  0E00               	movlw	0
  1401   000B64  6EC7               	movwf	199,c	;volatile
  1402                           
  1403                           ;I2C_LCD.c: 14:     SSPADD = ((16000000/4)/100000) - 1;
  1404   000B66  0E27               	movlw	39
  1405   000B68  6EC8               	movwf	200,c	;volatile
  1406   000B6A                     
  1407                           ;I2C_LCD.c: 17:     TRISBbits.TRISB0 = 1;
  1408   000B6A  8093               	bsf	147,0,c	;volatile
  1409   000B6C                     
  1410                           ;I2C_LCD.c: 18:     TRISBbits.TRISB1 = 1;
  1411   000B6C  8293               	bsf	147,1,c	;volatile
  1412   000B6E  0012               	return		;funcret
  1413   000B70                     __end_of_I2C_Master_Init:
  1414                           	callstack 0
  1415                           
  1416                           	psect	rparam
  1417   000000                     
  1418                           	psect	idloc
  1419                           
  1420                           ;Config register IDLOC0 @ 0x200000
  1421                           ;	unspecified, using default values
  1422   200000                     	org	2097152
  1423   200000  FF                 	db	255
  1424                           
  1425                           ;Config register IDLOC1 @ 0x200001
  1426                           ;	unspecified, using default values
  1427   200001                     	org	2097153
  1428   200001  FF                 	db	255
  1429                           
  1430                           ;Config register IDLOC2 @ 0x200002
  1431                           ;	unspecified, using default values
  1432   200002                     	org	2097154
  1433   200002  FF                 	db	255
  1434                           
  1435                           ;Config register IDLOC3 @ 0x200003
  1436                           ;	unspecified, using default values
  1437   200003                     	org	2097155
  1438   200003  FF                 	db	255
  1439                           
  1440                           ;Config register IDLOC4 @ 0x200004
  1441                           ;	unspecified, using default values
  1442   200004                     	org	2097156
  1443   200004  FF                 	db	255
  1444                           
  1445                           ;Config register IDLOC5 @ 0x200005
  1446                           ;	unspecified, using default values
  1447   200005                     	org	2097157
  1448   200005  FF                 	db	255
  1449                           
  1450                           ;Config register IDLOC6 @ 0x200006
  1451                           ;	unspecified, using default values
  1452   200006                     	org	2097158
  1453   200006  FF                 	db	255
  1454                           
  1455                           ;Config register IDLOC7 @ 0x200007
  1456                           ;	unspecified, using default values
  1457   200007                     	org	2097159
  1458   200007  FF                 	db	255
  1459                           
  1460                           	psect	config
  1461                           
  1462                           ;Config register CONFIG1L @ 0x300000
  1463                           ;	PLL Prescaler Selection bits
  1464                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1465                           ;	System Clock Postscaler Selection bits
  1466                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1467                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1468                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1469   300000                     	org	3145728
  1470   300000  20                 	db	32
  1471                           
  1472                           ;Config register CONFIG1H @ 0x300001
  1473                           ;	Oscillator Selection bits
  1474                           ;	FOSC = HS, HS oscillator (HS)
  1475                           ;	Fail-Safe Clock Monitor Enable bit
  1476                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1477                           ;	Internal/External Oscillator Switchover bit
  1478                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1479   300001                     	org	3145729
  1480   300001  0C                 	db	12
  1481                           
  1482                           ;Config register CONFIG2L @ 0x300002
  1483                           ;	Power-up Timer Enable bit
  1484                           ;	PWRT = OFF, PWRT disabled
  1485                           ;	Brown-out Reset Enable bits
  1486                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1487                           ;	Brown-out Reset Voltage bits
  1488                           ;	BORV = 3, Minimum setting 2.05V
  1489                           ;	USB Voltage Regulator Enable bit
  1490                           ;	VREGEN = OFF, USB voltage regulator disabled
  1491   300002                     	org	3145730
  1492   300002  19                 	db	25
  1493                           
  1494                           ;Config register CONFIG2H @ 0x300003
  1495                           ;	Watchdog Timer Enable bit
  1496                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1497                           ;	Watchdog Timer Postscale Select bits
  1498                           ;	WDTPS = 32768, 1:32768
  1499   300003                     	org	3145731
  1500   300003  1E                 	db	30
  1501                           
  1502                           ; Padding undefined space
  1503   300004                     	org	3145732
  1504   300004  FF                 	db	255
  1505                           
  1506                           ;Config register CONFIG3H @ 0x300005
  1507                           ;	CCP2 MUX bit
  1508                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  1509                           ;	PORTB A/D Enable bit
  1510                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1511                           ;	Low-Power Timer 1 Oscillator Enable bit
  1512                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1513                           ;	MCLR Pin Enable bit
  1514                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1515   300005                     	org	3145733
  1516   300005  80                 	db	128
  1517                           
  1518                           ;Config register CONFIG4L @ 0x300006
  1519                           ;	Stack Full/Underflow Reset Enable bit
  1520                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1521                           ;	Single-Supply ICSP Enable bit
  1522                           ;	LVP = OFF, Single-Supply ICSP disabled
  1523                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1524                           ;	ICPRT = OFF, ICPORT disabled
  1525                           ;	Extended Instruction Set Enable bit
  1526                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1527                           ;	Background Debugger Enable bit
  1528                           ;	DEBUG = 0x1, unprogrammed default
  1529   300006                     	org	3145734
  1530   300006  81                 	db	129
  1531                           
  1532                           ; Padding undefined space
  1533   300007                     	org	3145735
  1534   300007  FF                 	db	255
  1535                           
  1536                           ;Config register CONFIG5L @ 0x300008
  1537                           ;	Code Protection bit
  1538                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1539                           ;	Code Protection bit
  1540                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1541                           ;	Code Protection bit
  1542                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1543                           ;	Code Protection bit
  1544                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1545   300008                     	org	3145736
  1546   300008  0F                 	db	15
  1547                           
  1548                           ;Config register CONFIG5H @ 0x300009
  1549                           ;	Boot Block Code Protection bit
  1550                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1551                           ;	Data EEPROM Code Protection bit
  1552                           ;	CPD = OFF, Data EEPROM is not code-protected
  1553   300009                     	org	3145737
  1554   300009  C0                 	db	192
  1555                           
  1556                           ;Config register CONFIG6L @ 0x30000A
  1557                           ;	Write Protection bit
  1558                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1559                           ;	Write Protection bit
  1560                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1561                           ;	Write Protection bit
  1562                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1563                           ;	Write Protection bit
  1564                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1565   30000A                     	org	3145738
  1566   30000A  0F                 	db	15
  1567                           
  1568                           ;Config register CONFIG6H @ 0x30000B
  1569                           ;	Configuration Register Write Protection bit
  1570                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1571                           ;	Boot Block Write Protection bit
  1572                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1573                           ;	Data EEPROM Write Protection bit
  1574                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1575   30000B                     	org	3145739
  1576   30000B  E0                 	db	224
  1577                           
  1578                           ;Config register CONFIG7L @ 0x30000C
  1579                           ;	Table Read Protection bit
  1580                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1581                           ;	Table Read Protection bit
  1582                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1583                           ;	Table Read Protection bit
  1584                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1585                           ;	Table Read Protection bit
  1586                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1587   30000C                     	org	3145740
  1588   30000C  0F                 	db	15
  1589                           
  1590                           ;Config register CONFIG7H @ 0x30000D
  1591                           ;	Boot Block Table Read Protection bit
  1592                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1593   30000D                     	org	3145741
  1594   30000D  40                 	db	64
  1595                           tosu	equ	0xFFF
  1596                           tosh	equ	0xFFE
  1597                           tosl	equ	0xFFD
  1598                           stkptr	equ	0xFFC
  1599                           pclatu	equ	0xFFB
  1600                           pclath	equ	0xFFA
  1601                           pcl	equ	0xFF9
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           indf0	equ	0xFEF
  1609                           postinc0	equ	0xFEE
  1610                           postdec0	equ	0xFED
  1611                           preinc0	equ	0xFEC
  1612                           plusw0	equ	0xFEB
  1613                           fsr0h	equ	0xFEA
  1614                           fsr0l	equ	0xFE9
  1615                           wreg	equ	0xFE8
  1616                           indf1	equ	0xFE7
  1617                           postinc1	equ	0xFE6
  1618                           postdec1	equ	0xFE5
  1619                           preinc1	equ	0xFE4
  1620                           plusw1	equ	0xFE3
  1621                           fsr1h	equ	0xFE2
  1622                           fsr1l	equ	0xFE1
  1623                           bsr	equ	0xFE0
  1624                           indf2	equ	0xFDF
  1625                           postinc2	equ	0xFDE
  1626                           postdec2	equ	0xFDD
  1627                           preinc2	equ	0xFDC
  1628                           plusw2	equ	0xFDB
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_SR->_LCD_CMD
    _LCD_SL->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     999
                                             11 COMRAM     2     2      0
                    _I2C_Master_Init
                           _LCD_Init
                             _LCD_SL
                             _LCD_SR
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     6     4      2     332
                                              5 COMRAM     6     4      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     352
                                              5 COMRAM     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SR                                               0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SL                                               0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     135
                                              5 COMRAM     3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       1     1      0      60
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      30
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      15
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_SL
     _LCD_CMD
   _LCD_SR
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      10       1       16.8%
BITBIGSFRh          36      0       0      20        0.0%
BITBIGSFRll         33      0       0      23        0.0%
BITBIGSFRlhh        26      0       0      21        0.0%
BITBIGSFRlhl         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      24        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jun 02 10:59:57 2023

                       l41 0AB0                         l50 0AFA                         l35 0B6E  
                       l44 0B9E                         l52 0B08                         l53 0B0A  
                       l38 0A8C                         l62 0AD0                         l47 0B96  
                       l56 0906                         l65 0B3E                         l74 0A8A  
                       l59 0B58                         l83 0A34                         l68 0B24  
                       l86 0B8E                         l89 0B7E                         u10 0A9A  
                       u11 0A96                         u20 0AB0                         u21 0AAC  
                       u30 0B08                         u31 0B04                         u50 0A8A  
                       u51 0A86                         _RS 000F                         u67 0948  
                       u77 0962                         u87 097E                         u97 099A  
                      l801 0AF6                        l803 0B42                        l811 0AC8  
                      l805 0AB4                        l813 0B28                        l821 0B12  
                      l807 0AB8                        l815 0B2C                        l831 081C  
                      l823 0B1A                        l825 0B5A                        l809 0AC0  
                      l817 0B34                        l841 0862                        l833 0820  
                      l827 0B6A                        l851 08B2                        l843 0868  
                      l835 0826                        l931 09CE                        l819 0B0E  
                      l923 0A36                        l829 0B6C                        l853 08D0  
                      l845 087E                        l837 083C                        l933 09D2  
                      l941 0A02                        l925 0A42                        l791 0B98  
                      l855 08E8                        l847 088E                        l839 084C  
                      l935 09DE                        l927 0A5E                        l951 0912  
                      l793 0B9C                        l849 08AC                        l881 0B80  
                      l937 09EA                        l929 0A62                        l961 0954  
                      l953 091C                        l787 0A8C                        l795 0B90  
                      l883 0B86                        l939 09F6                        l971 0990  
                      l963 0958                        l955 0928                        l947 0908  
                      l789 0A9A                        l797 0B94                        l885 0B70  
                      l981 0A16                        l973 09A8                        l965 0970  
                      l957 0932                        l949 090C                        l799 0AF2  
                      l887 0B76                        l975 09AC                        l967 0974  
                      l959 093E                        l969 098C                        u107 09B6  
                      u117 0B78                        u207 08DA                        u127 0B88  
                      u217 08F8                        u137 082C                        u227 0ACA  
                      u147 0842                        u157 0858                        u167 086E  
                      _PEN 007E2A                        u177 0884                        u187 089E  
                      u197 08BC                        _SEN 007E28                        wreg 000FE8  
          __end_of_LCD_CMD 0B40        LCD_Write_String@Str 0006             _LCD_Set_Cursor 09CC  
                     STR_1 0810                       STR_2 0801          ?_LCD_Write_String 0006  
                     _main 0908                       start 0000         ??_LCD_Write_String 0008  
             ___param_bank 000000       LCD_Write_4Bit@Nibble 0004           __end_of_LCD_Init 0908  
         ?_I2C_Master_Init 0001           ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      _SSPIF 007CF3     __end_of_LCD_Set_Cursor 0A36  
                    tablat 000FF5                      status 000FD8             _LCD_Write_4Bit 0AB2  
           _LCD_Write_Char 0B0C            __initialization 0AD2               __end_of_main 09CC  
        _IO_Expander_Write 0B40         ?_IO_Expander_Write 0001                     ??_main 000C  
            __activetblptr 000002                  ??_LCD_CMD 0005          ?_I2C_Master_Start 0001  
        ?_I2C_Master_Write 0001        ??_IO_Expander_Write 0003            ?_LCD_Set_Cursor 0006  
       ??_I2C_Master_Start 0002         ??_I2C_Master_Write 0002                     _LCD_SL 0B80  
                   _LCD_SR 0B70                     _SSPADD 000FC8                     _SSPBUF 000FC9  
   __end_of_LCD_Write_4Bit 0AD2     __end_of_LCD_Write_Char 0B26  __end_of_IO_Expander_Write 0B5A  
                   isa$std 000001               __pdataCOMRAM 0010               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 0AE6                  ?_LCD_Init 0001  
          ?_LCD_Write_4Bit 0001              ___rparam_used 000001            ?_LCD_Write_Char 0001  
           __pcstackCOMRAM 0001                    ?_LCD_SL 0001                    ?_LCD_SR 0001  
               ??_LCD_Init 0006                 __pnvCOMRAM 000E                    _ACKSTAT 007E2E  
                  _LCD_CMD 0B26                    _SSPCON1 000FC6                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7                    _i2c_add 000E                    __Hparam 0000  
                  __Lparam 0000               __psmallconst 0800                    __pcinit 0AD2  
                  __ramtop 0800           ??_LCD_Set_Cursor 0007                    __ptext0 0908  
                  __ptext1 0A36                    __ptext2 0B0C                    __ptext3 09CC  
                  __ptext4 0B70                    __ptext5 0B80                    __ptext6 081A  
                  __ptext7 0B26                    __ptext8 0AB2                    __ptext9 0B40  
     end_of_initialization 0AE6              __Lmediumconst 0000                 LCD_CMD@CMD 0005  
                _TRISBbits 000F93           ??_LCD_Write_4Bit 0004          LCD_Write_String@i 000A  
         ??_LCD_Write_Char 0005             __end_of_LCD_SL 0B90             __end_of_LCD_SR 0B80  
         _LCD_Write_String 0A36              __pidataCOMRAM 0BA0        start_initialization 0AD2  
                 ??_LCD_SL 0006                   ??_LCD_SR 0006          ??_I2C_Master_Init 0001  
        ??_I2C_Master_Wait 0001          ??_I2C_Master_Stop 0002                   ?_LCD_CMD 0001  
              __pbssCOMRAM 000F           _I2C_Master_Start 0B98           _I2C_Master_Write 0AF0  
    IO_Expander_Write@Data 0003       I2C_Master_Write@data 0002                __smallconst 0800  
                 _LCD_Init 081A   __end_of_LCD_Write_String 0A8C                   __Hrparam 0000  
                 __Lrparam 0000            _I2C_Master_Init 0B5A            _I2C_Master_Wait 0A8C  
          _I2C_Master_Stop 0B90                   __ptext10 0AF0                   __ptext11 0B90  
                 __ptext12 0B98                   __ptext13 0A8C                   __ptext14 0B5A  
          _BackLight_State 0010                   isa$xinst 000000   __end_of_I2C_Master_Start 0BA0  
 __end_of_I2C_Master_Write 0B0C         LCD_Write_Char@Data 0005    __end_of_I2C_Master_Init 0B70  
  __end_of_I2C_Master_Wait 0AB2    __end_of_I2C_Master_Stop 0B98            LCD_Init@I2C_Add 0008  
        LCD_Set_Cursor@COL 0006          LCD_Set_Cursor@ROW 0009  
