

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Jan 19 19:49:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 18/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _INT0IF	set	32657
    53   000000                     _LATD	set	3980
    54   000000                     _TRISBbits	set	3987
    55   000000                     _TRISD	set	3989
    56   000000                     _ADCON1bits	set	4033
    57   000000                     _INTCON2bits	set	4081
    58   000000                     _INTCONbits	set	4082
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63   000862                     __pcinit:
    64                           	callstack 0
    65   000862                     start_initialization:
    66                           	callstack 0
    67   000862                     __initialization:
    68                           	callstack 0
    69   000862                     end_of_initialization:
    70                           	callstack 0
    71   000862                     __end_of__initialization:
    72                           	callstack 0
    73   000862  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74   000864  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75   000866  0100               	movlb	0
    76   000868  EF01  F004         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79   000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81   000001                     ??_main:
    82                           
    83                           ; 1 bytes @ 0x0
    84   000001                     	ds	2
    85                           
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 29 in file "main.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;		None
    96 ;; Return value:  Size  Location     Type
    97 ;;                  1    wreg      void 
    98 ;; Registers used:
    99 ;;		wreg, status,2, cstack
   100 ;; Tracked objects:
   101 ;;		On entry : 0/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   105 ;;      Params:         0       0       0       0       0       0       0       0       0
   106 ;;      Locals:         0       0       0       0       0       0       0       0       0
   107 ;;      Temps:          2       0       0       0       0       0       0       0       0
   108 ;;      Totals:         2       0       0       0       0       0       0       0       0
   109 ;;Total ram usage:        2 bytes
   110 ;; Hardware stack levels required when called: 2
   111 ;; This function calls:
   112 ;;		_interrept_init
   113 ;; This function is called by:
   114 ;;		Startup code after reset
   115 ;; This function uses a non-reentrant model
   116 ;;
   117                           
   118                           	psect	text0
   119   000802                     __ptext0:
   120                           	callstack 0
   121   000802                     _main:
   122                           	callstack 29
   123   000802                     
   124                           ;main.c: 31:     TRISD = 0;
   125   000802  0E00               	movlw	0
   126   000804  6E95               	movwf	149,c	;volatile
   127   000806                     
   128                           ;main.c: 32:     interrept_init();
   129   000806  EC29  F004         	call	_interrept_init	;wreg free
   130   00080A                     l733:
   131                           
   132                           ;main.c: 35:         LATD = 0x50;
   133   00080A  0E50               	movlw	80
   134   00080C  6E8C               	movwf	140,c	;volatile
   135   00080E                     
   136                           ;main.c: 36:         _delay((unsigned long)((500)*(8000000/4000.0)));
   137   00080E  0E06               	movlw	6
   138   000810  6E02               	movwf	(??_main+1)^0,c
   139   000812  0E13               	movlw	19
   140   000814  6E01               	movwf	??_main^0,c
   141   000816  0EAE               	movlw	174
   142   000818                     u37:
   143   000818  2EE8               	decfsz	wreg,f,c
   144   00081A  D7FE               	bra	u37
   145   00081C  2E01               	decfsz	??_main^0,f,c
   146   00081E  D7FC               	bra	u37
   147   000820  2E02               	decfsz	(??_main+1)^0,f,c
   148   000822  D7FA               	bra	u37
   149   000824  EF05  F004         	goto	l733
   150   000828  EF07  F000         	goto	start
   151   00082C                     __end_of_main:
   152                           	callstack 0
   153                           
   154 ;; *************** function _interrept_init *****************
   155 ;; Defined at:
   156 ;;		line 11 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   170 ;;      Params:         0       0       0       0       0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0       0       0
   173 ;;      Totals:         0       0       0       0       0       0       0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels used: 1
   176 ;; Hardware stack levels required when called: 1
   177 ;; This function calls:
   178 ;;		Nothing
   179 ;; This function is called by:
   180 ;;		_main
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text1
   185   000852                     __ptext1:
   186                           	callstack 0
   187   000852                     _interrept_init:
   188                           	callstack 29
   189   000852                     
   190                           ;main.c: 12:      TRISBbits.RB0 = 1;
   191   000852  8093               	bsf	147,0,c	;volatile
   192   000854                     
   193                           ;main.c: 13:      ADCON1bits.PCFG = 0xf;
   194   000854  0E0F               	movlw	15
   195   000856  12C1               	iorwf	193,f,c	;volatile
   196   000858                     
   197                           ;main.c: 14:      INTCON2bits.RBPU =0;
   198   000858  9EF1               	bcf	241,7,c	;volatile
   199   00085A                     
   200                           ;main.c: 15:      INTCONbits.GIE = 1;
   201   00085A  8EF2               	bsf	242,7,c	;volatile
   202   00085C                     
   203                           ;main.c: 17:      INTCONbits.INT0IE = 1;
   204   00085C  88F2               	bsf	242,4,c	;volatile
   205   00085E                     
   206                           ;main.c: 18:      INTCONbits.INT0IF = 0;
   207   00085E  92F2               	bcf	242,1,c	;volatile
   208   000860  0012               	return		;funcret
   209   000862                     __end_of_interrept_init:
   210                           	callstack 0
   211                           
   212 ;; *************** function _ISR *****************
   213 ;; Defined at:
   214 ;;		line 22 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		status,2, status,0
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         0       0       0       0       0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0
   231 ;;      Totals:         0       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels used: 1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		Interrupt level 2
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           	psect	intcode
   242   000008                     __pintcode:
   243                           	callstack 0
   244   000008                     _ISR:
   245                           	callstack 29
   246                           
   247                           ;incstack = 0
   248   000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   249   00000A  ED16  F004         	call	int_func,f	;refresh shadow registers
   250                           
   251                           	psect	intcode_body
   252   00082C                     __pintcode_body:
   253                           	callstack 29
   254   00082C                     int_func:
   255                           	callstack 29
   256   00082C  0006               	pop		; remove dummy address from shadow register refresh
   257   00082E                     
   258                           ;main.c: 23:     if (INTCONbits.INT0IE && INTCONbits.INT0IF){
   259   00082E  A8F2               	btfss	242,4,c	;volatile
   260   000830  EF1C  F004         	goto	i2u1_41
   261   000834  EF1E  F004         	goto	i2u1_40
   262   000838                     i2u1_41:
   263   000838  EF27  F004         	goto	i2l25
   264   00083C                     i2u1_40:
   265   00083C  A2F2               	btfss	242,1,c	;volatile
   266   00083E  EF23  F004         	goto	i2u2_41
   267   000842  EF25  F004         	goto	i2u2_40
   268   000846                     i2u2_41:
   269   000846  EF27  F004         	goto	i2l25
   270   00084A                     i2u2_40:
   271   00084A                     
   272                           ;main.c: 24:         INT0IF =0;
   273   00084A  92F2               	bcf	4082,1,c	;volatile
   274   00084C                     
   275                           ;main.c: 25:         LATD =~ LATD;
   276   00084C  1E8C               	comf	140,f,c	;volatile
   277   00084E                     i2l25:
   278   00084E  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   279   000850  0011               	retfie		f
   280   000852                     __end_of_ISR:
   281                           	callstack 0
   282                           
   283                           	psect	smallconst
   284   000800                     __psmallconst:
   285                           	callstack 0
   286   000800  00                 	db	0
   287   000801  00                 	db	0	; dummy byte at the end
   288   000000                     
   289                           	psect	rparam
   290   000000                     
   291                           	psect	temp
   292   000003                     btemp:
   293                           	callstack 0
   294   000003                     	ds	1
   295   000000                     int$flags	set	btemp
   296   000000                     wtemp8	set	btemp+1
   297   000000                     ttemp5	set	btemp+1
   298   000000                     ttemp6	set	btemp+4
   299   000000                     ttemp7	set	btemp+8
   300                           
   301                           	psect	idloc
   302                           
   303                           ;Config register IDLOC0 @ 0x200000
   304                           ;	unspecified, using default values
   305   200000                     	org	2097152
   306   200000  FF                 	db	255
   307                           
   308                           ;Config register IDLOC1 @ 0x200001
   309                           ;	unspecified, using default values
   310   200001                     	org	2097153
   311   200001  FF                 	db	255
   312                           
   313                           ;Config register IDLOC2 @ 0x200002
   314                           ;	unspecified, using default values
   315   200002                     	org	2097154
   316   200002  FF                 	db	255
   317                           
   318                           ;Config register IDLOC3 @ 0x200003
   319                           ;	unspecified, using default values
   320   200003                     	org	2097155
   321   200003  FF                 	db	255
   322                           
   323                           ;Config register IDLOC4 @ 0x200004
   324                           ;	unspecified, using default values
   325   200004                     	org	2097156
   326   200004  FF                 	db	255
   327                           
   328                           ;Config register IDLOC5 @ 0x200005
   329                           ;	unspecified, using default values
   330   200005                     	org	2097157
   331   200005  FF                 	db	255
   332                           
   333                           ;Config register IDLOC6 @ 0x200006
   334                           ;	unspecified, using default values
   335   200006                     	org	2097158
   336   200006  FF                 	db	255
   337                           
   338                           ;Config register IDLOC7 @ 0x200007
   339                           ;	unspecified, using default values
   340   200007                     	org	2097159
   341   200007  FF                 	db	255
   342                           
   343                           	psect	config
   344                           
   345                           ;Config register CONFIG1L @ 0x300000
   346                           ;	PLL Prescaler Selection bits
   347                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   348                           ;	System Clock Postscaler Selection bits
   349                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   350                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   351                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   352   300000                     	org	3145728
   353   300000  00                 	db	0
   354                           
   355                           ;Config register CONFIG1H @ 0x300001
   356                           ;	Oscillator Selection bits
   357                           ;	FOSC = HS, HS oscillator (HS)
   358                           ;	Fail-Safe Clock Monitor Enable bit
   359                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   360                           ;	Internal/External Oscillator Switchover bit
   361                           ;	IESO = OFF, Oscillator Switchover mode disabled
   362   300001                     	org	3145729
   363   300001  0C                 	db	12
   364                           
   365                           ;Config register CONFIG2L @ 0x300002
   366                           ;	Power-up Timer Enable bit
   367                           ;	PWRT = OFF, PWRT disabled
   368                           ;	Brown-out Reset Enable bits
   369                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   370                           ;	Brown-out Reset Voltage bits
   371                           ;	BORV = 3, Minimum setting 2.05V
   372                           ;	USB Voltage Regulator Enable bit
   373                           ;	VREGEN = OFF, USB voltage regulator disabled
   374   300002                     	org	3145730
   375   300002  1F                 	db	31
   376                           
   377                           ;Config register CONFIG2H @ 0x300003
   378                           ;	Watchdog Timer Enable bit
   379                           ;	WDT = ON, WDT enabled
   380                           ;	Watchdog Timer Postscale Select bits
   381                           ;	WDTPS = 32768, 1:32768
   382   300003                     	org	3145731
   383   300003  1F                 	db	31
   384                           
   385                           ; Padding undefined space
   386   300004                     	org	3145732
   387   300004  FF                 	db	255
   388                           
   389                           ;Config register CONFIG3H @ 0x300005
   390                           ;	CCP2 MUX bit
   391                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   392                           ;	PORTB A/D Enable bit
   393                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   394                           ;	Low-Power Timer 1 Oscillator Enable bit
   395                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   396                           ;	MCLR Pin Enable bit
   397                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   398   300005                     	org	3145733
   399   300005  83                 	db	131
   400                           
   401                           ;Config register CONFIG4L @ 0x300006
   402                           ;	Stack Full/Underflow Reset Enable bit
   403                           ;	STVREN = ON, Stack full/underflow will cause Reset
   404                           ;	Single-Supply ICSP Enable bit
   405                           ;	LVP = ON, Single-Supply ICSP enabled
   406                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   407                           ;	ICPRT = OFF, ICPORT disabled
   408                           ;	Extended Instruction Set Enable bit
   409                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   410                           ;	Background Debugger Enable bit
   411                           ;	DEBUG = 0x1, unprogrammed default
   412   300006                     	org	3145734
   413   300006  85                 	db	133
   414                           
   415                           ; Padding undefined space
   416   300007                     	org	3145735
   417   300007  FF                 	db	255
   418                           
   419                           ;Config register CONFIG5L @ 0x300008
   420                           ;	Code Protection bit
   421                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   422                           ;	Code Protection bit
   423                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   424                           ;	Code Protection bit
   425                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   426                           ;	Code Protection bit
   427                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   428   300008                     	org	3145736
   429   300008  0F                 	db	15
   430                           
   431                           ;Config register CONFIG5H @ 0x300009
   432                           ;	Boot Block Code Protection bit
   433                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   434                           ;	Data EEPROM Code Protection bit
   435                           ;	CPD = OFF, Data EEPROM is not code-protected
   436   300009                     	org	3145737
   437   300009  C0                 	db	192
   438                           
   439                           ;Config register CONFIG6L @ 0x30000A
   440                           ;	Write Protection bit
   441                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   442                           ;	Write Protection bit
   443                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   444                           ;	Write Protection bit
   445                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   446                           ;	Write Protection bit
   447                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   448   30000A                     	org	3145738
   449   30000A  0F                 	db	15
   450                           
   451                           ;Config register CONFIG6H @ 0x30000B
   452                           ;	Configuration Register Write Protection bit
   453                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   454                           ;	Boot Block Write Protection bit
   455                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   456                           ;	Data EEPROM Write Protection bit
   457                           ;	WRTD = OFF, Data EEPROM is not write-protected
   458   30000B                     	org	3145739
   459   30000B  E0                 	db	224
   460                           
   461                           ;Config register CONFIG7L @ 0x30000C
   462                           ;	Table Read Protection bit
   463                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   464                           ;	Table Read Protection bit
   465                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   466                           ;	Table Read Protection bit
   467                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   468                           ;	Table Read Protection bit
   469                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   470   30000C                     	org	3145740
   471   30000C  0F                 	db	15
   472                           
   473                           ;Config register CONFIG7H @ 0x30000D
   474                           ;	Boot Block Table Read Protection bit
   475                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   476   30000D                     	org	3145741
   477   30000D  40                 	db	64
   478                           tosu	equ	0xFFF
   479                           tosh	equ	0xFFE
   480                           tosl	equ	0xFFD
   481                           stkptr	equ	0xFFC
   482                           pclatu	equ	0xFFB
   483                           pclath	equ	0xFFA
   484                           pcl	equ	0xFF9
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           prodh	equ	0xFF4
   490                           prodl	equ	0xFF3
   491                           indf0	equ	0xFEF
   492                           postinc0	equ	0xFEE
   493                           postdec0	equ	0xFED
   494                           preinc0	equ	0xFEC
   495                           plusw0	equ	0xFEB
   496                           fsr0h	equ	0xFEA
   497                           fsr0l	equ	0xFE9
   498                           wreg	equ	0xFE8
   499                           indf1	equ	0xFE7
   500                           postinc1	equ	0xFE6
   501                           postdec1	equ	0xFE5
   502                           preinc1	equ	0xFE4
   503                           plusw1	equ	0xFE3
   504                           fsr1h	equ	0xFE2
   505                           fsr1l	equ	0xFE1
   506                           bsr	equ	0xFE0
   507                           indf2	equ	0xFDF
   508                           postinc2	equ	0xFDE
   509                           postdec2	equ	0xFDD
   510                           preinc2	equ	0xFDC
   511                           plusw2	equ	0xFDB
   512                           fsr2h	equ	0xFDA
   513                           fsr2l	equ	0xFD9
   514                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                     _interrept_init
 ---------------------------------------------------------------------------------
 (1) _interrept_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _interrept_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      2       2       1        2.1%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhhh         D      0       0      21        0.0%
BITBIGSFRhhl        2F      0       0      22        0.0%
BITBIGSFRhlh        2B      0       0      23        0.0%
BITBIGSFRhll         1      0       0      24        0.0%
BITBIGSFRlh          6      0       0      25        0.0%
BITBIGSFRll         2C      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Jan 19 19:49:59 2024

                     l19 0860                       u37 0818                      l711 0854  
                    l713 0858                      l715 085A                      l731 0806  
                    l717 085C                      l709 0852                      l733 080A  
                    l719 085E                      l735 080E                      l729 0802  
                    _ISR 0008                      wreg 0FE8                     ?_ISR 0001  
                   _LATD 0F8C                     i2l25 084E                     _main 0802  
        ?_interrept_init 0001                     btemp 0003                     start 000E  
           ___param_bank 0000                    ??_ISR 0001                    ?_main 0001  
                  i2l721 082E                    i2l723 083C                    i2l725 084A  
                  i2l727 084C                    _TRISD 0F95                    ttemp5 0004  
                  ttemp6 0007                    ttemp7 000B                    wtemp8 0004  
        __initialization 0862             __end_of_main 082C                   ??_main 0001  
          __activetblptr 0000                   _INT0IF 7F91                   i2u1_40 083C  
                 i2u1_41 0838                   i2u2_40 084A                   i2u2_41 0846  
                 isa$std 0001             __mediumconst 0000               __accesstop 0060  
__end_of__initialization 0862            ___rparam_used 0001           __pcstackCOMRAM 0001  
       ??_interrept_init 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0862                  __ramtop 0800  
                __ptext0 0802                  __ptext1 0852           __pintcode_body 082C  
   end_of_initialization 0862                  int_func 082C                _TRISBbits 0F93  
    start_initialization 0862              __end_of_ISR 0852                __pintcode 0008  
            __smallconst 0800               _ADCON1bits 0FC1              _INTCON2bits 0FF1  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
               int$flags 0003               _INTCONbits 0FF2                 intlevel2 0000  
         _interrept_init 0852   __end_of_interrept_init 0862  
