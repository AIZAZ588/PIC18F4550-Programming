

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Sep 25 15:14:37 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 18/08/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _TRISCbits	set	3988
    57   000000                     _LATAbits	set	3977
    58   000000                     _TRISBbits	set	3987
    59   000000                     _TRISD	set	3989
    60   000000                     _PIE1bits	set	3997
    61   000000                     _PIR1bits	set	3998
    62   000000                     _LATDbits	set	3980
    63   000000                     _LATBbits	set	3978
    64   000000                     _IPR1bits	set	3999
    65   000000                     _ADCON1bits	set	4033
    66   000000                     _SSPSTATbits	set	4039
    67   000000                     _SSPBUF	set	4041
    68   000000                     _INTCONbits	set	4082
    69   000000                     _TRISAbits	set	3986
    70   000000                     _SSPCON1bits	set	4038
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   0008F6                     __pcinit:
    76                           	callstack 0
    77   0008F6                     start_initialization:
    78                           	callstack 0
    79   0008F6                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (1 bytes)
    83   0008F6  6A06               	clrf	__pbssCOMRAM& (0+255),c
    84   0008F8                     end_of_initialization:
    85                           	callstack 0
    86   0008F8                     __end_of__initialization:
    87                           	callstack 0
    88   0008F8  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89   0008FA  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90   0008FC  0100               	movlb	0
    91   0008FE  EF01  F004         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94   000006                     __pbssCOMRAM:
    95                           	callstack 0
    96   000006                     _received_data:
    97                           	callstack 0
    98   000006                     	ds	1
    99                           
   100                           	psect	cstackCOMRAM
   101   000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103   000001                     ??_ISR:
   104                           
   105                           ; 1 bytes @ 0x0
   106   000001                     	ds	1
   107   000002                     ??_WRITE_SPI:
   108                           
   109                           ; 1 bytes @ 0x1
   110   000002                     	ds	1
   111   000003                     WRITE_SPI@txdata:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x2
   115   000003                     	ds	1
   116   000004                     ??_main:
   117                           
   118                           ; 1 bytes @ 0x3
   119   000004                     	ds	2
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 25 in file "main.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;		None
   131 ;; Return value:  Size  Location     Type
   132 ;;                  1    wreg      void 
   133 ;; Registers used:
   134 ;;		wreg, status,2, status,0, cstack
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   140 ;;      Params:         0       0       0       0       0       0       0       0       0
   141 ;;      Locals:         0       0       0       0       0       0       0       0       0
   142 ;;      Temps:          2       0       0       0       0       0       0       0       0
   143 ;;      Totals:         2       0       0       0       0       0       0       0       0
   144 ;;Total ram usage:        2 bytes
   145 ;; Hardware stack levels required when called: 3
   146 ;; This function calls:
   147 ;;		_INIT_INTERRUPT
   148 ;;		_INIT_SPI
   149 ;;		_WRITE_SPI
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156   000802                     __ptext0:
   157                           	callstack 0
   158   000802                     _main:
   159                           	callstack 28
   160   000802                     
   161                           ;main.c: 26:     TRISD = 0;
   162   000802  0E00               	movlw	0
   163   000804  6E95               	movwf	149,c	;volatile
   164   000806                     
   165                           ;main.c: 27:     TRISBbits.RB5 = 0;
   166   000806  9A93               	bcf	147,5,c	;volatile
   167   000808                     
   168                           ;main.c: 28:     TRISBbits.RB6 = 0;
   169   000808  9C93               	bcf	147,6,c	;volatile
   170   00080A                     
   171                           ;main.c: 29:     TRISBbits.RB7 = 0;
   172   00080A  9E93               	bcf	147,7,c	;volatile
   173   00080C                     
   174                           ;main.c: 30:     INIT_SPI();
   175   00080C  EC6E  F004         	call	_INIT_SPI	;wreg free
   176                           
   177                           ;main.c: 31:     INIT_INTERRUPT();
   178   000810  EC81  F004         	call	_INIT_INTERRUPT	;wreg free
   179   000814                     
   180                           ;main.c: 32:     LATAbits.LA5 = 0;
   181   000814  9A89               	bcf	137,5,c	;volatile
   182   000816                     l785:
   183                           
   184                           ;main.c: 35:         LATBbits.LATB5 ^= 1;
   185   000816  7A8A               	btg	138,5,c	;volatile
   186                           
   187                           ;main.c: 36:         WRITE_SPI(0x55);
   188   000818  0E55               	movlw	85
   189   00081A  EC4F  F004         	call	_WRITE_SPI
   190   00081E                     
   191                           ;main.c: 37:         _delay((unsigned long)((500)*(4000000/4000.0)));
   192   00081E  0E03               	movlw	3
   193   000820  6E05               	movwf	(??_main+1)^0,c
   194   000822  0E8A               	movlw	138
   195   000824  6E04               	movwf	??_main^0,c
   196   000826  0E56               	movlw	86
   197   000828                     u57:
   198   000828  2EE8               	decfsz	wreg,f,c
   199   00082A  D7FE               	bra	u57
   200   00082C  2E04               	decfsz	??_main^0,f,c
   201   00082E  D7FC               	bra	u57
   202   000830  2E05               	decfsz	(??_main+1)^0,f,c
   203   000832  D7FA               	bra	u57
   204   000834                     
   205                           ;main.c: 39:         WRITE_SPI(0x32);
   206   000834  0E32               	movlw	50
   207   000836  EC4F  F004         	call	_WRITE_SPI
   208                           
   209                           ;main.c: 40:         _delay((unsigned long)((500)*(4000000/4000.0)));
   210   00083A  0E03               	movlw	3
   211   00083C  6E05               	movwf	(??_main+1)^0,c
   212   00083E  0E8A               	movlw	138
   213   000840  6E04               	movwf	??_main^0,c
   214   000842  0E56               	movlw	86
   215   000844                     u67:
   216   000844  2EE8               	decfsz	wreg,f,c
   217   000846  D7FE               	bra	u67
   218   000848  2E04               	decfsz	??_main^0,f,c
   219   00084A  D7FC               	bra	u67
   220   00084C  2E05               	decfsz	(??_main+1)^0,f,c
   221   00084E  D7FA               	bra	u67
   222   000850                     
   223                           ;main.c: 41:         WRITE_SPI(0xAB);
   224   000850  0EAB               	movlw	171
   225   000852  EC4F  F004         	call	_WRITE_SPI
   226   000856  EF0B  F004         	goto	l785
   227   00085A  EF07  F000         	goto	start
   228   00085E                     __end_of_main:
   229                           	callstack 0
   230                           
   231 ;; *************** function _WRITE_SPI *****************
   232 ;; Defined at:
   233 ;;		line 71 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;  txdata          1    wreg     unsigned char 
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  txdata          1    2[COMRAM] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         0       0       0       0       0       0       0       0       0
   248 ;;      Locals:         1       0       0       0       0       0       0       0       0
   249 ;;      Temps:          1       0       0       0       0       0       0       0       0
   250 ;;      Totals:         2       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels used: 1
   253 ;; Hardware stack levels required when called: 2
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		_main
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text1
   262   00089E                     __ptext1:
   263                           	callstack 0
   264   00089E                     _WRITE_SPI:
   265                           	callstack 28
   266                           
   267                           ;incstack = 0
   268                           ;WRITE_SPI@txdata stored from wreg
   269   00089E  6E03               	movwf	WRITE_SPI@txdata^0,c
   270   0008A0                     
   271                           ;main.c: 72:     SSPBUF = txdata;
   272   0008A0  C003  FFC9         	movff	WRITE_SPI@txdata,4041	;volatile
   273   0008A4                     
   274                           ;main.c: 73:     LATBbits.LATB6 ^= 1;
   275   0008A4  7C8A               	btg	138,6,c	;volatile
   276   0008A6                     l59:
   277   0008A6  B0C7               	btfsc	199,0,c	;volatile
   278   0008A8  EF58  F004         	goto	u11
   279   0008AC  EF5A  F004         	goto	u10
   280   0008B0                     u11:
   281   0008B0  EF53  F004         	goto	l59
   282   0008B4                     u10:
   283   0008B4                     
   284                           ;main.c: 75:     LATBbits.LATB7 ^= 1;
   285   0008B4  7E8A               	btg	138,7,c	;volatile
   286   0008B6                     
   287                           ;main.c: 77:     LATDbits.LATD1 = ~LATDbits.LATD1;
   288   0008B6  B28C               	btfsc	140,1,c	;volatile
   289   0008B8  EF60  F004         	goto	u21
   290   0008BC  EF63  F004         	goto	u20
   291   0008C0                     u21:
   292   0008C0  0E01               	movlw	1
   293   0008C2  EF64  F004         	goto	u26
   294   0008C6                     u20:
   295   0008C6  0E00               	movlw	0
   296   0008C8                     u26:
   297   0008C8  0AFF               	xorlw	255
   298   0008CA  6E02               	movwf	??_WRITE_SPI^0,c
   299   0008CC  4602               	rlncf	??_WRITE_SPI^0,f,c
   300   0008CE  508C               	movf	140,w,c	;volatile
   301   0008D0  1802               	xorwf	??_WRITE_SPI^0,w,c
   302   0008D2  0BFD               	andlw	-3
   303   0008D4  1802               	xorwf	??_WRITE_SPI^0,w,c
   304   0008D6  6E8C               	movwf	140,c	;volatile
   305   0008D8                     
   306                           ;main.c: 78:     SSPSTATbits.BF = 0;
   307   0008D8  90C7               	bcf	199,0,c	;volatile
   308   0008DA  0012               	return		;funcret
   309   0008DC                     __end_of_WRITE_SPI:
   310                           	callstack 0
   311                           
   312 ;; *************** function _INIT_SPI *****************
   313 ;; Defined at:
   314 ;;		line 87 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   328 ;;      Params:         0       0       0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0       0       0       0       0
   331 ;;      Totals:         0       0       0       0       0       0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels used: 1
   334 ;; Hardware stack levels required when called: 2
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text2
   343   0008DC                     __ptext2:
   344                           	callstack 0
   345   0008DC                     _INIT_SPI:
   346                           	callstack 28
   347   0008DC                     
   348                           ;main.c: 88:     TRISCbits.RC7 = 0;
   349   0008DC  9E94               	bcf	148,7,c	;volatile
   350                           
   351                           ;main.c: 89:     TRISBbits.RB0 = 1;
   352   0008DE  8093               	bsf	147,0,c	;volatile
   353                           
   354                           ;main.c: 90:     TRISBbits.RB1 = 0;
   355   0008E0  9293               	bcf	147,1,c	;volatile
   356                           
   357                           ;main.c: 91:     TRISAbits.RA5 = 0;
   358   0008E2  9A92               	bcf	146,5,c	;volatile
   359   0008E4                     
   360                           ;main.c: 93:     ADCON1bits.PCFG = 0b1111;
   361   0008E4  0E0F               	movlw	15
   362   0008E6  12C1               	iorwf	193,f,c	;volatile
   363   0008E8                     
   364                           ;main.c: 95:     SSPSTATbits.SMP = 0;
   365   0008E8  9EC7               	bcf	199,7,c	;volatile
   366   0008EA                     
   367                           ;main.c: 96:     SSPSTATbits.CKE = 0;
   368   0008EA  9CC7               	bcf	199,6,c	;volatile
   369   0008EC                     
   370                           ;main.c: 98:     SSPCON1bits.SSPEN = 1;
   371   0008EC  8AC6               	bsf	198,5,c	;volatile
   372   0008EE                     
   373                           ;main.c: 99:     SSPCON1bits.CKP = 0;
   374   0008EE  98C6               	bcf	198,4,c	;volatile
   375                           
   376                           ;main.c: 101:     SSPCON1bits.SSPM = 0b0000;
   377   0008F0  0EF0               	movlw	-16
   378   0008F2  16C6               	andwf	198,f,c	;volatile
   379   0008F4  0012               	return		;funcret
   380   0008F6                     __end_of_INIT_SPI:
   381                           	callstack 0
   382                           
   383 ;; *************** function _INIT_INTERRUPT *****************
   384 ;; Defined at:
   385 ;;		line 104 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;		None
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		None
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   399 ;;      Params:         0       0       0       0       0       0       0       0       0
   400 ;;      Locals:         0       0       0       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0       0       0
   402 ;;      Totals:         0       0       0       0       0       0       0       0       0
   403 ;;Total ram usage:        0 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 2
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text3
   414   000902                     __ptext3:
   415                           	callstack 0
   416   000902                     _INIT_INTERRUPT:
   417                           	callstack 28
   418   000902                     
   419                           ;main.c: 105:     INTCONbits.GIE = 1;
   420   000902  8EF2               	bsf	242,7,c	;volatile
   421                           
   422                           ;main.c: 106:     INTCONbits.PEIE = 1;
   423   000904  8CF2               	bsf	242,6,c	;volatile
   424                           
   425                           ;main.c: 107:     PIR1bits.SSPIF = 0;
   426   000906  969E               	bcf	158,3,c	;volatile
   427                           
   428                           ;main.c: 108:     PIE1bits.SSPIE = 1;
   429   000908  869D               	bsf	157,3,c	;volatile
   430                           
   431                           ;main.c: 109:     IPR1bits.SSPIP = 1;
   432   00090A  869F               	bsf	159,3,c	;volatile
   433   00090C  0012               	return		;funcret
   434   00090E                     __end_of_INIT_INTERRUPT:
   435                           	callstack 0
   436                           
   437 ;; *************** function _ISR *****************
   438 ;; Defined at:
   439 ;;		line 58 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         0       0       0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0
   455 ;;      Temps:          1       0       0       0       0       0       0       0       0
   456 ;;      Totals:         1       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        1 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 1
   460 ;; This function calls:
   461 ;;		_READ_SPI
   462 ;; This function is called by:
   463 ;;		Interrupt level 2
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	intcode
   468   000008                     __pintcode:
   469                           	callstack 0
   470   000008                     _ISR:
   471                           	callstack 28
   472                           
   473                           ;incstack = 0
   474   000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   475   00000A  ED2F  F004         	call	int_func,f	;refresh shadow registers
   476                           
   477                           	psect	intcode_body
   478   00085E                     __pintcode_body:
   479                           	callstack 28
   480   00085E                     int_func:
   481                           	callstack 28
   482   00085E  0006               	pop		; remove dummy address from shadow register refresh
   483   000860                     
   484                           ;main.c: 59:     if (PIR1bits.SSPIF) {
   485   000860  A69E               	btfss	158,3,c	;volatile
   486   000862  EF35  F004         	goto	i2u3_41
   487   000866  EF37  F004         	goto	i2u3_40
   488   00086A                     i2u3_41:
   489   00086A  EF4D  F004         	goto	i2l56
   490   00086E                     i2u3_40:
   491   00086E                     
   492                           ;main.c: 60:         INTCONbits.GIE = 0;
   493   00086E  9EF2               	bcf	242,7,c	;volatile
   494   000870                     
   495                           ;main.c: 61:         LATDbits.LATD0 = ~LATDbits.LATD0;
   496   000870  B08C               	btfsc	140,0,c	;volatile
   497   000872  EF3D  F004         	goto	i2u4_41
   498   000876  EF40  F004         	goto	i2u4_40
   499   00087A                     i2u4_41:
   500   00087A  0E01               	movlw	1
   501   00087C  EF41  F004         	goto	i2u4_46
   502   000880                     i2u4_40:
   503   000880  0E00               	movlw	0
   504   000882                     i2u4_46:
   505   000882  0AFF               	xorlw	255
   506   000884  6E01               	movwf	??_ISR^0,c
   507   000886  508C               	movf	140,w,c	;volatile
   508   000888  1801               	xorwf	??_ISR^0,w,c
   509   00088A  0BFE               	andlw	-2
   510   00088C  1801               	xorwf	??_ISR^0,w,c
   511   00088E  6E8C               	movwf	140,c	;volatile
   512   000890                     
   513                           ;main.c: 62:         received_data = READ_SPI();
   514   000890  EC87  F004         	call	_READ_SPI	;wreg free
   515   000894  6E06               	movwf	_received_data^0,c	;volatile
   516   000896                     
   517                           ;main.c: 65:         INTCONbits.GIE = 1;
   518   000896  8EF2               	bsf	242,7,c	;volatile
   519   000898                     
   520                           ;main.c: 66:         PIR1bits.SSPIF = 0;
   521   000898  969E               	bcf	158,3,c	;volatile
   522   00089A                     i2l56:
   523   00089A  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   524   00089C  0011               	retfie		f
   525   00089E                     __end_of_ISR:
   526                           	callstack 0
   527                           
   528 ;; *************** function _READ_SPI *****************
   529 ;; Defined at:
   530 ;;		line 83 in file "main.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg, status,2
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_ISR
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text5
   558   00090E                     __ptext5:
   559                           	callstack 0
   560   00090E                     _READ_SPI:
   561                           	callstack 28
   562   00090E                     
   563                           ;main.c: 84:     return SSPBUF;
   564   00090E  50C9               	movf	201,w,c	;volatile
   565   000910  0012               	return		;funcret
   566   000912                     __end_of_READ_SPI:
   567                           	callstack 0
   568                           
   569                           	psect	smallconst
   570   000800                     __psmallconst:
   571                           	callstack 0
   572   000800  00                 	db	0
   573   000801  00                 	db	0	; dummy byte at the end
   574   000000                     
   575                           	psect	rparam
   576   000000                     
   577                           	psect	temp
   578   000007                     btemp:
   579                           	callstack 0
   580   000007                     	ds	1
   581   000000                     int$flags	set	btemp
   582   000000                     wtemp8	set	btemp+1
   583   000000                     ttemp5	set	btemp+1
   584   000000                     ttemp6	set	btemp+4
   585   000000                     ttemp7	set	btemp+8
   586                           
   587                           	psect	idloc
   588                           
   589                           ;Config register IDLOC0 @ 0x200000
   590                           ;	unspecified, using default values
   591   200000                     	org	2097152
   592   200000  FF                 	db	255
   593                           
   594                           ;Config register IDLOC1 @ 0x200001
   595                           ;	unspecified, using default values
   596   200001                     	org	2097153
   597   200001  FF                 	db	255
   598                           
   599                           ;Config register IDLOC2 @ 0x200002
   600                           ;	unspecified, using default values
   601   200002                     	org	2097154
   602   200002  FF                 	db	255
   603                           
   604                           ;Config register IDLOC3 @ 0x200003
   605                           ;	unspecified, using default values
   606   200003                     	org	2097155
   607   200003  FF                 	db	255
   608                           
   609                           ;Config register IDLOC4 @ 0x200004
   610                           ;	unspecified, using default values
   611   200004                     	org	2097156
   612   200004  FF                 	db	255
   613                           
   614                           ;Config register IDLOC5 @ 0x200005
   615                           ;	unspecified, using default values
   616   200005                     	org	2097157
   617   200005  FF                 	db	255
   618                           
   619                           ;Config register IDLOC6 @ 0x200006
   620                           ;	unspecified, using default values
   621   200006                     	org	2097158
   622   200006  FF                 	db	255
   623                           
   624                           ;Config register IDLOC7 @ 0x200007
   625                           ;	unspecified, using default values
   626   200007                     	org	2097159
   627   200007  FF                 	db	255
   628                           
   629                           	psect	config
   630                           
   631                           ;Config register CONFIG1L @ 0x300000
   632                           ;	PLL Prescaler Selection bits
   633                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   634                           ;	System Clock Postscaler Selection bits
   635                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   636                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   637                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   638   300000                     	org	3145728
   639   300000  00                 	db	0
   640                           
   641                           ;Config register CONFIG1H @ 0x300001
   642                           ;	Oscillator Selection bits
   643                           ;	FOSC = HS, HS oscillator (HS)
   644                           ;	Fail-Safe Clock Monitor Enable bit
   645                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   646                           ;	Internal/External Oscillator Switchover bit
   647                           ;	IESO = OFF, Oscillator Switchover mode disabled
   648   300001                     	org	3145729
   649   300001  0C                 	db	12
   650                           
   651                           ;Config register CONFIG2L @ 0x300002
   652                           ;	Power-up Timer Enable bit
   653                           ;	PWRT = OFF, PWRT disabled
   654                           ;	Brown-out Reset Enable bits
   655                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   656                           ;	Brown-out Reset Voltage bits
   657                           ;	BORV = 3, Minimum setting 2.05V
   658                           ;	USB Voltage Regulator Enable bit
   659                           ;	VREGEN = OFF, USB voltage regulator disabled
   660   300002                     	org	3145730
   661   300002  1F                 	db	31
   662                           
   663                           ;Config register CONFIG2H @ 0x300003
   664                           ;	Watchdog Timer Enable bit
   665                           ;	WDT = ON, WDT enabled
   666                           ;	Watchdog Timer Postscale Select bits
   667                           ;	WDTPS = 32768, 1:32768
   668   300003                     	org	3145731
   669   300003  1F                 	db	31
   670                           
   671                           ; Padding undefined space
   672   300004                     	org	3145732
   673   300004  FF                 	db	255
   674                           
   675                           ;Config register CONFIG3H @ 0x300005
   676                           ;	CCP2 MUX bit
   677                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   678                           ;	PORTB A/D Enable bit
   679                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   680                           ;	Low-Power Timer 1 Oscillator Enable bit
   681                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   682                           ;	MCLR Pin Enable bit
   683                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   684   300005                     	org	3145733
   685   300005  83                 	db	131
   686                           
   687                           ;Config register CONFIG4L @ 0x300006
   688                           ;	Stack Full/Underflow Reset Enable bit
   689                           ;	STVREN = ON, Stack full/underflow will cause Reset
   690                           ;	Single-Supply ICSP Enable bit
   691                           ;	LVP = ON, Single-Supply ICSP enabled
   692                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   693                           ;	ICPRT = OFF, ICPORT disabled
   694                           ;	Extended Instruction Set Enable bit
   695                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   696                           ;	Background Debugger Enable bit
   697                           ;	DEBUG = 0x1, unprogrammed default
   698   300006                     	org	3145734
   699   300006  85                 	db	133
   700                           
   701                           ; Padding undefined space
   702   300007                     	org	3145735
   703   300007  FF                 	db	255
   704                           
   705                           ;Config register CONFIG5L @ 0x300008
   706                           ;	Code Protection bit
   707                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   708                           ;	Code Protection bit
   709                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   710                           ;	Code Protection bit
   711                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   712                           ;	Code Protection bit
   713                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   714   300008                     	org	3145736
   715   300008  0F                 	db	15
   716                           
   717                           ;Config register CONFIG5H @ 0x300009
   718                           ;	Boot Block Code Protection bit
   719                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   720                           ;	Data EEPROM Code Protection bit
   721                           ;	CPD = OFF, Data EEPROM is not code-protected
   722   300009                     	org	3145737
   723   300009  C0                 	db	192
   724                           
   725                           ;Config register CONFIG6L @ 0x30000A
   726                           ;	Write Protection bit
   727                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   728                           ;	Write Protection bit
   729                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   730                           ;	Write Protection bit
   731                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   732                           ;	Write Protection bit
   733                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   734   30000A                     	org	3145738
   735   30000A  0F                 	db	15
   736                           
   737                           ;Config register CONFIG6H @ 0x30000B
   738                           ;	Configuration Register Write Protection bit
   739                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   740                           ;	Boot Block Write Protection bit
   741                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   742                           ;	Data EEPROM Write Protection bit
   743                           ;	WRTD = OFF, Data EEPROM is not write-protected
   744   30000B                     	org	3145739
   745   30000B  E0                 	db	224
   746                           
   747                           ;Config register CONFIG7L @ 0x30000C
   748                           ;	Table Read Protection bit
   749                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   750                           ;	Table Read Protection bit
   751                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   752                           ;	Table Read Protection bit
   753                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   754                           ;	Table Read Protection bit
   755                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   756   30000C                     	org	3145740
   757   30000C  0F                 	db	15
   758                           
   759                           ;Config register CONFIG7H @ 0x30000D
   760                           ;	Boot Block Table Read Protection bit
   761                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   762   30000D                     	org	3145741
   763   30000D  40                 	db	64
   764                           tosu	equ	0xFFF
   765                           tosh	equ	0xFFE
   766                           tosl	equ	0xFFD
   767                           stkptr	equ	0xFFC
   768                           pclatu	equ	0xFFB
   769                           pclath	equ	0xFFA
   770                           pcl	equ	0xFF9
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           prodh	equ	0xFF4
   776                           prodl	equ	0xFF3
   777                           indf0	equ	0xFEF
   778                           postinc0	equ	0xFEE
   779                           postdec0	equ	0xFED
   780                           preinc0	equ	0xFEC
   781                           plusw0	equ	0xFEB
   782                           fsr0h	equ	0xFEA
   783                           fsr0l	equ	0xFE9
   784                           wreg	equ	0xFE8
   785                           indf1	equ	0xFE7
   786                           postinc1	equ	0xFE6
   787                           postdec1	equ	0xFE5
   788                           preinc1	equ	0xFE4
   789                           plusw1	equ	0xFE3
   790                           fsr1h	equ	0xFE2
   791                           fsr1l	equ	0xFE1
   792                           bsr	equ	0xFE0
   793                           indf2	equ	0xFDF
   794                           postinc2	equ	0xFDE
   795                           postdec2	equ	0xFDD
   796                           preinc2	equ	0xFDC
   797                           plusw2	equ	0xFDB
   798                           fsr2h	equ	0xFDA
   799                           fsr2l	equ	0xFD9
   800                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_WRITE_SPI

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              3 COMRAM     2     2      0
                     _INIT_INTERRUPT
                           _INIT_SPI
                          _WRITE_SPI
 ---------------------------------------------------------------------------------
 (1) _WRITE_SPI                                            2     2      0      15
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INIT_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INIT_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  1     1      0       0
                                              0 COMRAM     1     1      0
                           _READ_SPI
 ---------------------------------------------------------------------------------
 (3) _READ_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_INTERRUPT
   _INIT_SPI
   _WRITE_SPI

 _ISR (ROOT)
   _READ_SPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5       6       1        6.4%
BITBIGSFRlll        29      0       0      28        0.0%
BITBIGSFRhhlh       28      0       0      21        0.0%
BITBIGSFRhhllll     21      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhl          7      0       0      25        0.0%
BITBIGSFRllhh        5      0       0      26        0.0%
BITBIGSFRhhlllh      4      0       0      23        0.0%
BITBIGSFRhhllh       1      0       0      22        0.0%
BITBIGSFRllhl        1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      29        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Sep 25 15:14:37 2023

            _SSPSTATbits 0FC7                       l61 08B4                       l62 08DA  
                     l71 090C                       l59 08A6                       l68 08F4  
                     u10 08B4                       u11 08B0                       u20 08C6  
                     u21 08C0                       u26 08C8                       u57 0828  
                     u67 0844                      l751 08E8                      l753 08EA  
                    l761 08A0                      l755 08EC                      l747 08DC  
                    l763 08A4                      l757 08EE                      l749 08E4  
                    l765 08B6                      l781 080C                      l773 0802  
                    l759 0902                      l767 08D8                      l791 0850  
                    l783 0814                      l775 0806                      l785 0816  
                    l777 0808                      l787 081E                      l779 080A  
                    l789 0834                      _ISR 0008                      wreg 0FE8  
                   ?_ISR 0001                     i2l56 089A                     i2l65 0910  
                   _main 0802                     btemp 0007                     start 000E  
           ___param_bank 0000                    ??_ISR 0001         __end_of_INIT_SPI 08F6  
       __end_of_READ_SPI 0912                    ?_main 0001                    i2l801 0896  
                  i2l803 0898                    i2l769 090E                    i2l793 0860  
                  i2l795 086E                    i2l797 0870                    i2l799 0890  
                  _TRISD 0F95                    ttemp5 0008                    ttemp6 000B  
                  ttemp7 000F                    wtemp8 0008          __initialization 08F6  
           __end_of_main 085E                   ??_main 0004            __activetblptr 0000  
                 i2u3_40 086E                   i2u3_41 086A                   i2u4_40 0880  
                 i2u4_41 087A                   i2u4_46 0882                   _SSPBUF 0FC9  
                 isa$std 0001        __end_of_WRITE_SPI 08DC             __mediumconst 0000  
        WRITE_SPI@txdata 0003           _INIT_INTERRUPT 0902               __accesstop 0060  
__end_of__initialization 08F8                ?_INIT_SPI 0001                ?_READ_SPI 0001  
          ___rparam_used 0001           __pcstackCOMRAM 0001   __end_of_INIT_INTERRUPT 090E  
             ??_INIT_SPI 0002               ??_READ_SPI 0001          ?_INIT_INTERRUPT 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 08F6                  __ramtop 0800                  __ptext0 0802  
                __ptext1 089E                  __ptext2 08DC                  __ptext3 0902  
                __ptext5 090E            _received_data 0006           __pintcode_body 085E  
   end_of_initialization 08F8                  int_func 085E                _TRISAbits 0F92  
              _TRISBbits 0F93                _TRISCbits 0F94                _WRITE_SPI 089E  
    start_initialization 08F6              __end_of_ISR 089E               ?_WRITE_SPI 0001  
       ??_INIT_INTERRUPT 0002              __pbssCOMRAM 0006                __pintcode 0008  
            __smallconst 0800              ??_WRITE_SPI 0002                 _LATAbits 0F89  
               _LATBbits 0F8A                 _LATDbits 0F8C                 _INIT_SPI 08DC  
               _READ_SPI 090E                 _IPR1bits 0F9F                 _PIE1bits 0F9D  
               _PIR1bits 0F9E               _ADCON1bits 0FC1                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 int$flags 0007  
             _INTCONbits 0FF2                 intlevel2 0000              _SSPCON1bits 0FC6  
